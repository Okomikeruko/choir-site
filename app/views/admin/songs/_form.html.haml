.row
  .col-xs-12.col-sm-8.col-sm-offset-2
    =form_for [:admin, @song] do |f|
      -if @song.errors.any?
        #error-explanation
          .alert.alert-danger
            The form contains
            = pluralize(@song.errors.count, "error") + "."
          %ul
            -@song.errors.full_messages.each do |message|
              %li=message
      .clearfix
        =f.submit "Save", class: "btn btn-primary pull-right"
        =link_to "Cancel", 
                 admin_songs_path, 
                 class: "btn btn-default pull-right",
                 style: "margin-right: 15px;"
      %fieldset
        %legend Main Info
        =f.label :title 
        =f.text_field :title, class: "form-control"
        %br
        =f.label :performance_date
        .input-group.date{data: {provide: "datepicker",
                                 date: { format: "mm/dd/yyyy" } } }
          =f.text_field :performance_date, 
                        value: (@song.performance_date.strftime("%m/%d/%Y") unless @song.performance_date.blank?),
                        class: "form-control"
          .input-group-addon
            %span.glyphicon.glyphicon-th 
      %br
      %fieldset
        %legend Sheet Music
        .sheet_musics
          =f.fields_for :sheet_musics do |sheet_music|
            =render "sheet_music_fields", f: sheet_music
          .links
            =link_to_add_association f, :sheet_musics, class: "btn btn-primary" do 
              %span.glyphicon.glyphicon-plus
              Add Sheet Music
      %br
      %fieldset
        %legend Audio
        .audios
          =f.fields_for :audios do |audio|
            =render 'audio_fields', f: audio 
          .links
            =link_to_add_association f, :audios, class: "btn btn-primary" do
              %span.glyphicon.glyphicon-plus
              Add Audio
:javascript
  $( function() {
    $('.sheet_musics').sortable({
      handle: ".handle",
      placeholder: "ui-state-highlight sheet-music-highlight",
      update: function(event, ui) { update_positions() }
    });
    $('.audios').sortable({
      handle: ".handle",
      placeholder: "ui-state-highlight audio-highlight",
      update: function(event, ui) { update_positions() }
    });
  });
  
  $(".sheet_musics").on('cocoon:after-insert', function() {
    update_positions();
  })

  $(".sheet_musics").on('cocoon:after-remove', function() {
    update_positions();
  })

  $(".audios").on('cocoon:after-insert', function() {
    update_positions();
  })

  $(".audios").on('cocoon:after-remove', function() {
    update_positions();
  })
  
  function update_positions(){
    var index = 0;
    $.each( $(".sheet_musics .panel"), function(index, panel){
      $(panel).find("input[id$='_position']").val(index);
    });
    
    $.each( $(".audios .panel"), function(index, panel){
      $(panel).find("input[id$='_position']").val(index);
    });
  }