name: Rails CI Pipeline

on:
  push:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      DATABASE_HOST: localhost
    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Rubocop
        run: |
          bundle exec rubocop --parallel

  test:
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      DATABASE_HOST: localhost
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - '5432:5432'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Setup test database
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load

      - name: Run MiniTest
        run: |
          bundle exec rails test

  deploy:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v4

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Log in to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login

      - name: Fetch config from Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          # Get values silently and set them as masked secrets
          RAILS_MASTER_KEY=$(heroku config:get RAILS_MASTER_KEY -a $HEROKU_APP_NAME)
          SECRET_KEY_BASE=$(heroku config:get SECRET_KEY_BASE -a $HEROKU_APP_NAME)
          
          # Mask the values in the logs
          echo "::add-mask::$RAILS_MASTER_KEY"
          echo "::add-mask::$SECRET_KEY_BASE"
          
          # Set them as environment variables for subsequent steps
          echo "RAILS_MASTER_KEY=$RAILS_MASTER_KEY" >> $GITHUB_ENV
          echo "SECRET_KEY_BASE=$SECRET_KEY_BASE" >> $GITHUB_ENV
      - name: Build and push
        env:          
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          docker build \
            --build-arg RAILS_MASTER_KEY=$RAILS_MASTER_KEY \
            --build-arg SECRET_KEY_BASE=$SECRET_KEY_BASE \
            -t registry.heroku.com/$HEROKU_APP_NAME/web .
          docker push registry.heroku.com/$HEROKU_APP_NAME/web
          heroku container:release web -a $HEROKU_APP_NAME
