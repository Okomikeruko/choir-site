name: Rails CI Pipeline

on:
  push:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      DATABASE_HOST: localhost
    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.7
          bundler-cache: true

      - name: Rubocop
        run: |
          bundle exec rubocop --parallel
    
  test:
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      DATABASE_HOST: localhost
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - '5432:5432'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.7
          bundler-cache: true
          
      - name: Setup test database
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load

      - name: Run MiniTest
        run: |
          bundle exec rails test

  deploy:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}

      - name: Run migrations (optional fallback)
        if: always()
        run: |
          heroku run rails db:migrate --app ${{ secrets.HEROKU_APP_NAME }}
