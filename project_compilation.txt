

/*******************************************************************************
* File: .github/workflows/main.yml
* Size: 1995 bytes
*******************************************************************************/

name: Rails CI Pipeline

on:
  push:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      DATABASE_HOST: localhost
    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.7
          bundler-cache: true

      - name: Rubocop
        run: |
          bundle exec rubocop --parallel

  test:
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      DATABASE_HOST: localhost
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - '5432:5432'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.7
          bundler-cache: true

      - name: Setup test database
        run: |
          bundle exec rails db:create
          bundle exec rails db:schema:load

      - name: Run MiniTest
        run: |
          bundle exec rails test

  deploy:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    steps:
      - uses: actions/checkout@v4

      - name: Install Heroku CLI
        run: curl https://cli-assets.heroku.com/install.sh | sh

      - name: Log in to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login
      
      - name: Build and push
        env:          
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
        run: |
          heroku container:push web -a $HEROKU_APP_NAME
          heroku container:release web -a $HEROKU_APP_NAME

/*******************************************************************************
* File: .gitignore
* Size: 890 bytes
*******************************************************************************/

# See https://help.github.com/articles/ignoring-files for more about ignoring files.
#
# If you find yourself ignoring temporary files generated by your text editor
# or operating system, you probably want to add a global ignore instead:
#   git config --global core.excludesfile '~/.gitignore_global'

# Ignore bundler config.
/.bundle

# Ignore the default SQLite database.
/db/*.sqlite3
/db/*.sqlite3-journal

# Ignore all logfiles and tempfiles.
/log/*
/tmp/*
!/log/.keep
!/tmp/.keep
/storage
/coverage
/node_modules
/yarn-error.log

.byebug_history

# Ignore Spring files.
/spring/*.pid

# Ignore uploaded test images.
/public/uploads
/public/system
/public/packs
/public/packs-test
/public/assets
/node_modules
/yarn-error.log
yarn-debug.log*
.yarn-integrity
.env

# Ignore DS_Store
/.DS_Store
**/.DS_Store

# Ignore IDE Settings
.idea/
/app/assets/builds/*
!/app/assets/builds/.keep

/*******************************************************************************
* File: .idea/.gitignore
* Size: 184 bytes
*******************************************************************************/

# Default ignored files
/shelf/
/workspace.xml
# Editor-based HTTP Client requests
/httpRequests/
# Datasource local storage ignored files
/dataSources/
/dataSources.local.xml

/*******************************************************************************
* File: .idea/choir-site.iml
* Size: 51737 bytes
*******************************************************************************/

<?xml version="1.0" encoding="UTF-8"?>
<module type="RUBY_MODULE" version="4">
  <component name="FacetManager">
    <facet type="RailsFacetType" name="Ruby on Rails">
      <configuration>
        <RAILS_FACET_CONFIG_ID NAME="RAILS_FACET_SUPPORT_REMOVED" VALUE="false" />
        <RAILS_FACET_CONFIG_ID NAME="RAILS_TESTS_SOURCES_PATCHED" VALUE="true" />
        <RAILS_FACET_CONFIG_ID NAME="RAILS_FACET_APPLICATION_ROOT" VALUE="$MODULE_DIR$" />
      </configuration>
    </facet>
  </component>
  <component name="ModuleRunConfigurationManager">
    <shared />
  </component>
  <component name="NewModuleRootManager">
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/features" isTestSource="true" />
      <sourceFolder url="file://$MODULE_DIR$/spec" isTestSource="true" />
      <sourceFolder url="file://$MODULE_DIR$/test" isTestSource="true" />
      <excludeFolder url="file://$MODULE_DIR$/.bundle" />
      <excludeFolder url="file://$MODULE_DIR$/components" />
      <excludeFolder url="file://$MODULE_DIR$/log" />
      <excludeFolder url="file://$MODULE_DIR$/public/packs" />
      <excludeFolder url="file://$MODULE_DIR$/public/system" />
      <excludeFolder url="file://$MODULE_DIR$/tmp" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/bundle" />
      <excludeFolder url="file://$MODULE_DIR$/vendor/cache" />
    </content>
    <orderEntry type="jdk" jdkName="Choir Site Web" jdkType="RUBY_SDK" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" scope="PROVIDED" name="actioncable (v7.1.5.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="actionmailbox (v7.1.5.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="actionmailer (v7.1.5.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="actionpack (v7.1.5.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="actiontext (v7.1.5.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="actionview (v7.1.5.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="activejob (v7.1.5.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="activemodel (v7.1.5.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="activerecord (v7.1.5.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="activestorage (v7.1.5.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="activesupport (v7.1.5.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="ajax-datatables-rails (v1.5.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="ansi (v1.5.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="ast (v2.4.2, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="autoprefixer-rails (v10.4.19.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="aws-eventstream (v1.3.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="aws-partitions (v1.1059.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="aws-sdk-core (v3.219.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="aws-sdk-kms (v1.99.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="aws-sdk-s3 (v1.182.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="aws-sigv4 (v1.11.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="base64 (v0.2.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="bcrypt (v3.1.20, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="benchmark (v0.4.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="better_errors (v2.10.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="bigdecimal (v3.1.9, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="bindex (v0.8.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="binding_of_caller (v1.0.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="bootstrap-datepicker-rails (v1.10.0.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="bootstrap-sass (v3.4.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="bootstrap-will_paginate (v1.0.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="brakeman (v7.0.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="breadcrumbs_on_rails (v4.1.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="builder (v3.3.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="bullet (v8.0.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="bundler (v2.4.19, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="byebug (v11.1.3, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="cancan (v1.6.10, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="cocoon (v1.2.15, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="code_analyzer (v0.5.5, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="coderay (v1.1.3, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="concurrent-ruby (v1.1.10, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="connection_pool (v2.5.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="crass (v1.0.6, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="date (v3.4.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="debug (v1.10.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="debug_inspector (v1.2.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="devise (v4.9.4, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="docile (v1.4.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="dotenv (v3.1.7, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="drb (v2.2.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="erb2haml (v0.1.5, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="erubi (v1.13.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="erubis (v2.7.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="execjs (v2.10.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="faker (v3.5.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="ffi (v1.17.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="font-awesome-sass (v6.7.2, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="foreman (v0.88.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="formatador (v1.1.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="globalid (v1.2.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="google-protobuf (v4.29.3, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="guard (v2.19.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="guard-compat (v1.2.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="guard-minitest (v2.4.6, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="haml (v6.3.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="haml-rails (v2.1.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="html2haml (v2.3.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="i18n (v1.14.7, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="invisible_captcha (v2.3.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="io-console (v0.8.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="irb (v1.15.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="jbuilder (v2.13.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="jmespath (v1.6.2, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="jquery-ui-rails (v7.0.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="json (v2.10.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="language_server-protocol (v3.17.0.4, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="lint_roller (v1.1.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="listen (v3.9.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="little-plugger (v1.1.4, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="logger (v1.6.6, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="logging (v2.3.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="loofah (v2.24.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="lumberjack (v1.2.10, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="mail (v2.8.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="marcel (v1.0.4, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="method_source (v1.1.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="mime-types (v3.6.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="mime-types-data (v3.2025.0220, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="mini_magick (v4.13.2, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="mini_mime (v1.1.5, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="minitest (v5.25.4, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="minitest-reporters (v1.7.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="multi_json (v1.15.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="multipart-post (v2.4.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="mutex_m (v0.3.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="nenv (v0.3.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="net-imap (v0.5.6, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="net-pop (v0.1.2, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="net-protocol (v0.2.2, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="net-smtp (v0.5.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="nio4r (v2.7.4, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="nokogiri (v1.18.3, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="notiffany (v0.1.3, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="orm_adapter (v0.5.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="ostruct (v0.6.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="parallel (v1.26.3, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="parser (v3.3.7.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="pg (v1.5.9, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="pg_query (v6.0.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="pp (v0.6.2, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="prettyprint (v0.2.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="prosopite (v2.1.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="pry (v0.15.2, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="psych (v5.2.3, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="puma (v6.6.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="racc (v1.8.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rack (v3.1.10, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rack-mini-profiler (v3.3.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rack-session (v2.1.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rack-test (v2.2.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rackup (v2.2.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rails (v7.1.5.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rails-controller-testing (v1.0.5, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rails-dom-testing (v2.2.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rails-html-sanitizer (v1.6.2, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rails_best_practices (v1.23.2, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="railties (v7.1.5.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rainbow (v3.1.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rake (v13.2.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rb-fsevent (v0.11.2, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rb-inotify (v0.11.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rdbg (v0.1.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rdoc (v6.12.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="redis-client (v0.23.2, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="regexp_parser (v2.10.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="reline (v0.6.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="require_all (v3.0.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="responders (v3.1.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rouge (v4.5.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rubocop (v1.73.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rubocop-ast (v1.38.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rubocop-capybara (v2.21.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rubocop-minitest (v0.37.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="rubocop-rails (v2.30.3, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="ruby-prof (v1.7.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="ruby-progressbar (v1.13.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="ruby_parser (v3.21.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="sassc (v2.4.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="securerandom (v0.4.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="sexp_processor (v4.17.3, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="shellany (v0.0.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="sidekiq (v7.3.9, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="simplecov (v0.22.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="simplecov-html (v0.13.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="simplecov_json_formatter (v0.1.4, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="stringio (v3.1.5, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="temple (v0.10.3, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="thor (v1.3.2, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="tilt (v2.6.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="timeout (v0.4.3, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="tzinfo (v2.0.6, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="uglifier (v3.2.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="unicode-display_width (v3.1.4, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="unicode-emoji (v4.0.4, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="uniform_notifier (v1.16.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="warden (v1.2.9, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="web-console (v4.2.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="websocket-driver (v0.7.7, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="websocket-extensions (v0.1.5, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="will_paginate (v4.0.1, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="wysiwyg-rails (v4.5.0, Choir Site Web) [gem]" level="application" />
    <orderEntry type="library" scope="PROVIDED" name="zeitwerk (v2.7.2, Choir Site Web) [gem]" level="application" />
  </component>
  <component name="RModuleSettingsStorage">
    <LOAD_PATH number="0" />
    <I18N_FOLDERS number="1" string0="$MODULE_DIR$/config/locales" />
  </component>
  <component name="RailsGeneratorsCache">
    <option name="generators">
      <list>
        <option value="active_record:migration" />
        <option value="active_record:model" />
        <option value="active_record:observer" />
        <option value="active_record:session_migration" />
        <option value="controller" />
        <option value="erb:controller" />
        <option value="erb:mailer" />
        <option value="erb:scaffold" />
        <option value="generator" />
        <option value="helper" />
        <option value="integration_test" />
        <option value="mailer" />
        <option value="metal" />
        <option value="migration" />
        <option value="model" />
        <option value="model_subclass" />
        <option value="observer" />
        <option value="performance_test" />
        <option value="plugin" />
        <option value="resource" />
        <option value="scaffold" />
        <option value="scaffold_controller" />
        <option value="session_migration" />
        <option value="stylesheets" />
        <option value="test_unit:controller" />
        <option value="test_unit:helper" />
        <option value="test_unit:integration" />
        <option value="test_unit:mailer" />
        <option value="test_unit:model" />
        <option value="test_unit:observer" />
        <option value="test_unit:performance" />
        <option value="test_unit:plugin" />
        <option value="test_unit:scaffold" />
      </list>
    </option>
    <option name="myGenerators">
      <list>
        <option value="active_record:migration" />
        <option value="active_record:model" />
        <option value="active_record:observer" />
        <option value="active_record:session_migration" />
        <option value="controller" />
        <option value="erb:controller" />
        <option value="erb:mailer" />
        <option value="erb:scaffold" />
        <option value="generator" />
        <option value="helper" />
        <option value="integration_test" />
        <option value="mailer" />
        <option value="metal" />
        <option value="migration" />
        <option value="model" />
        <option value="model_subclass" />
        <option value="observer" />
        <option value="performance_test" />
        <option value="plugin" />
        <option value="resource" />
        <option value="scaffold" />
        <option value="scaffold_controller" />
        <option value="session_migration" />
        <option value="stylesheets" />
        <option value="test_unit:controller" />
        <option value="test_unit:helper" />
        <option value="test_unit:integration" />
        <option value="test_unit:mailer" />
        <option value="test_unit:model" />
        <option value="test_unit:observer" />
        <option value="test_unit:performance" />
        <option value="test_unit:plugin" />
        <option value="test_unit:scaffold" />
      </list>
    </option>
  </component>
  <component name="RailsPaths" isManagedAutomatically="true">
    <entry key="app">
      <value>file://$MODULE_DIR$/app</value>
    </entry>
    <entry key="app/assets">
      <value>file://$MODULE_DIR$/app/assets</value>
    </entry>
    <entry key="app/channels">
      <value>file://$MODULE_DIR$/app/channels</value>
    </entry>
    <entry key="app/controllers">
      <value>file://$MODULE_DIR$/app/controllers</value>
    </entry>
    <entry key="app/helpers">
      <value>file://$MODULE_DIR$/app/helpers</value>
    </entry>
    <entry key="app/mailers">
      <value>file://$MODULE_DIR$/app/mailers</value>
    </entry>
    <entry key="app/models">
      <value>file://$MODULE_DIR$/app/models</value>
    </entry>
    <entry key="app/views">
      <value>file://$MODULE_DIR$/app/views</value>
    </entry>
    <entry key="config">
      <value>file://$MODULE_DIR$/config</value>
    </entry>
    <entry key="config/cable">
      <value>file://$MODULE_DIR$/config/cable.yml</value>
    </entry>
    <entry key="config/database">
      <value>file://$MODULE_DIR$/config/database.yml</value>
    </entry>
    <entry key="config/environment">
      <value>file://$MODULE_DIR$/config/environment.rb</value>
    </entry>
    <entry key="config/environments">
      <value>file://$MODULE_DIR$/config/environments</value>
    </entry>
    <entry key="config/initializers">
      <value>file://$MODULE_DIR$/config/initializers</value>
    </entry>
    <entry key="config/locales">
      <value>file://$MODULE_DIR$/config/locales</value>
    </entry>
    <entry key="config/routes">
      <value>file://$MODULE_DIR$/config/routes</value>
    </entry>
    <entry key="config/routes.rb">
      <value>file://$MODULE_DIR$/config/routes.rb</value>
    </entry>
    <entry key="config/secrets">
      <value>file://$MODULE_DIR$/config</value>
    </entry>
    <entry key="db">
      <value>file://$MODULE_DIR$/db</value>
    </entry>
    <entry key="db/migrate">
      <value>file://$MODULE_DIR$/db/migrate</value>
    </entry>
    <entry key="db/seeds.rb">
      <value>file://$MODULE_DIR$/db/seeds.rb</value>
    </entry>
    <entry key="lib">
      <value>file://$MODULE_DIR$/lib</value>
    </entry>
    <entry key="lib/assets">
      <value>file://$MODULE_DIR$/lib/assets</value>
    </entry>
    <entry key="lib/tasks">
      <value>file://$MODULE_DIR$/lib/tasks</value>
    </entry>
    <entry key="lib/templates">
      <value>file://$MODULE_DIR$/lib/templates</value>
    </entry>
    <entry key="log">
      <value>file://$MODULE_DIR$/log/development.log</value>
    </entry>
    <entry key="public">
      <value>file://$MODULE_DIR$/public</value>
    </entry>
    <entry key="public/javascripts">
      <value>file://$MODULE_DIR$/public/javascripts</value>
    </entry>
    <entry key="public/stylesheets">
      <value>file://$MODULE_DIR$/public/stylesheets</value>
    </entry>
    <entry key="test/mailers/previews">
      <value>file://$MODULE_DIR$/test/mailers/previews</value>
      <value>file:///choir-site/test/mailers/previews</value>
    </entry>
    <entry key="tmp">
      <value>file://$MODULE_DIR$/tmp</value>
    </entry>
    <entry key="vendor">
      <value>file://$MODULE_DIR$/vendor</value>
    </entry>
    <entry key="vendor/assets">
      <value>file://$MODULE_DIR$/vendor/assets</value>
    </entry>
  </component>
  <component name="RakeTasksCache-v2">
    <option name="myRootTask">
      <RakeTaskImpl id="rake">
        <subtasks>
          <RakeTaskImpl id="action_mailbox">
            <subtasks>
              <RakeTaskImpl id="ingress">
                <subtasks>
                  <RakeTaskImpl description="Relay an inbound email from Exim to Action Mailbox (URL and INGRESS_PASSWORD required)" fullCommand="action_mailbox:ingress:exim" id="exim" />
                  <RakeTaskImpl description="Relay an inbound email from Postfix to Action Mailbox (URL and INGRESS_PASSWORD required)" fullCommand="action_mailbox:ingress:postfix" id="postfix" />
                  <RakeTaskImpl description="Relay an inbound email from Qmail to Action Mailbox (URL and INGRESS_PASSWORD required)" fullCommand="action_mailbox:ingress:qmail" id="qmail" />
                  <RakeTaskImpl description="" fullCommand="action_mailbox:ingress:environment" id="environment" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl description="Install Action Mailbox and its dependencies" fullCommand="action_mailbox:install" id="install" />
              <RakeTaskImpl id="install">
                <subtasks>
                  <RakeTaskImpl description="Copy migrations from action_mailbox to application" fullCommand="action_mailbox:install:migrations" id="migrations" />
                </subtasks>
              </RakeTaskImpl>
            </subtasks>
          </RakeTaskImpl>
          <RakeTaskImpl id="action_text">
            <subtasks>
              <RakeTaskImpl description="Copy over the migration, stylesheet, and JavaScript files" fullCommand="action_text:install" id="install" />
              <RakeTaskImpl id="install">
                <subtasks>
                  <RakeTaskImpl description="Copy migrations from action_text to application" fullCommand="action_text:install:migrations" id="migrations" />
                </subtasks>
              </RakeTaskImpl>
            </subtasks>
          </RakeTaskImpl>
          <RakeTaskImpl id="active_storage">
            <subtasks>
              <RakeTaskImpl description="Copy over the migration needed to the application" fullCommand="active_storage:install" id="install" />
              <RakeTaskImpl id="install">
                <subtasks>
                  <RakeTaskImpl description="" fullCommand="active_storage:install:migrations" id="migrations" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl description="" fullCommand="active_storage:update" id="update" />
            </subtasks>
          </RakeTaskImpl>
          <RakeTaskImpl id="app">
            <subtasks>
              <RakeTaskImpl description="Apply the template supplied by LOCATION=(/path/to/template) or URL" fullCommand="app:template" id="template" />
              <RakeTaskImpl description="Update configs and some other initially generated files (or use just update:configs or update:bin)" fullCommand="app:update" id="update" />
              <RakeTaskImpl id="templates">
                <subtasks>
                  <RakeTaskImpl description="" fullCommand="app:templates:copy" id="copy" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl id="update">
                <subtasks>
                  <RakeTaskImpl description="" fullCommand="app:update:active_storage" id="active_storage" />
                  <RakeTaskImpl description="" fullCommand="app:update:bin" id="bin" />
                  <RakeTaskImpl description="" fullCommand="app:update:configs" id="configs" />
                  <RakeTaskImpl description="" fullCommand="app:update:upgrade_guide_info" id="upgrade_guide_info" />
                </subtasks>
              </RakeTaskImpl>
            </subtasks>
          </RakeTaskImpl>
          <RakeTaskImpl id="assets">
            <subtasks>
              <RakeTaskImpl description="Remove old compiled assets" fullCommand="assets:clean[keep]" id="clean[keep]" />
              <RakeTaskImpl description="Remove compiled assets" fullCommand="assets:clobber" id="clobber" />
              <RakeTaskImpl description="Load asset compile environment" fullCommand="assets:environment" id="environment" />
              <RakeTaskImpl description="Compile all the assets named in config.assets.precompile" fullCommand="assets:precompile" id="precompile" />
              <RakeTaskImpl description="" fullCommand="assets:clean" id="clean" />
            </subtasks>
          </RakeTaskImpl>
          <RakeTaskImpl id="cache_digests">
            <subtasks>
              <RakeTaskImpl description="Lookup first-level dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCommand="cache_digests:dependencies" id="dependencies" />
              <RakeTaskImpl description="Lookup nested dependencies for TEMPLATE (like messages/show or comments/_comment.html)" fullCommand="cache_digests:nested_dependencies" id="nested_dependencies" />
            </subtasks>
          </RakeTaskImpl>
          <RakeTaskImpl id="db">
            <subtasks>
              <RakeTaskImpl description="Create the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:create:all to create all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to creating the development and test databases, except when DATABASE_URL is present" fullCommand="db:create" id="create" />
              <RakeTaskImpl description="Drop the database from DATABASE_URL or config/database.yml for the current RAILS_ENV (use db:drop:all to drop all databases in the config). Without RAILS_ENV or when RAILS_ENV is development, it defaults to dropping the development and test databases, except when DATABASE_URL is present" fullCommand="db:drop" id="drop" />
              <RakeTaskImpl id="encryption">
                <subtasks>
                  <RakeTaskImpl description="Generate a set of keys for configuring Active Record encryption in a given environment" fullCommand="db:encryption:init" id="init" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl id="environment">
                <subtasks>
                  <RakeTaskImpl description="Set the environment value for the database" fullCommand="db:environment:set" id="set" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl id="fixtures">
                <subtasks>
                  <RakeTaskImpl description="Load fixtures into the current environment's database" fullCommand="db:fixtures:load" id="load" />
                  <RakeTaskImpl description="" fullCommand="db:fixtures:identify" id="identify" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl description="Migrate the database (options: VERSION=x, VERBOSE=false, SCOPE=blog)" fullCommand="db:migrate" id="migrate" />
              <RakeTaskImpl id="migrate">
                <subtasks>
                  <RakeTaskImpl description="Run the &quot;down&quot; for a given migration VERSION" fullCommand="db:migrate:down" id="down" />
                  <RakeTaskImpl description="Roll back the database one migration and re-migrate up (options: STEP=x, VERSION=x)" fullCommand="db:migrate:redo" id="redo" />
                  <RakeTaskImpl description="Display status of migrations" fullCommand="db:migrate:status" id="status" />
                  <RakeTaskImpl description="Run the &quot;up&quot; for a given migration VERSION" fullCommand="db:migrate:up" id="up" />
                  <RakeTaskImpl description="" fullCommand="db:migrate:reset" id="reset" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl description="Run setup if database does not exist, or run migrations if it does" fullCommand="db:prepare" id="prepare" />
              <RakeTaskImpl description="Drop and recreate all databases from their schema for the current environment and load the seeds" fullCommand="db:reset" id="reset" />
              <RakeTaskImpl description="Roll the schema back to the previous version (specify steps w/ STEP=n)" fullCommand="db:rollback" id="rollback" />
              <RakeTaskImpl id="schema">
                <subtasks>
                  <RakeTaskImpl id="cache">
                    <subtasks>
                      <RakeTaskImpl description="Clear a db/schema_cache.yml file" fullCommand="db:schema:cache:clear" id="clear" />
                      <RakeTaskImpl description="Create a db/schema_cache.yml file" fullCommand="db:schema:cache:dump" id="dump" />
                    </subtasks>
                  </RakeTaskImpl>
                  <RakeTaskImpl description="Create a database schema file (either db/schema.rb or db/structure.sql, depending on `ENV['SCHEMA_FORMAT']` or `config.active_record.schema_format`)" fullCommand="db:schema:dump" id="dump" />
                  <RakeTaskImpl description="Load a database schema file (either db/schema.rb or db/structure.sql, depending on `ENV['SCHEMA_FORMAT']` or `config.active_record.schema_format`) into the database" fullCommand="db:schema:load" id="load" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl description="Load the seed data from db/seeds.rb" fullCommand="db:seed" id="seed" />
              <RakeTaskImpl id="seed">
                <subtasks>
                  <RakeTaskImpl description="Truncate tables of each database for current environment and load the seeds" fullCommand="db:seed:replant" id="replant" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl description="Create all databases, load all schemas, and initialize with the seed data (use db:reset to also drop all databases first)" fullCommand="db:setup" id="setup" />
              <RakeTaskImpl description="Retrieve the current schema version number" fullCommand="db:version" id="version" />
              <RakeTaskImpl description="" fullCommand="db:_dump" id="_dump" />
              <RakeTaskImpl description="" fullCommand="db:abort_if_pending_migrations" id="abort_if_pending_migrations" />
              <RakeTaskImpl description="" fullCommand="db:charset" id="charset" />
              <RakeTaskImpl description="" fullCommand="db:check_protected_environments" id="check_protected_environments" />
              <RakeTaskImpl description="" fullCommand="db:collation" id="collation" />
              <RakeTaskImpl id="create">
                <subtasks>
                  <RakeTaskImpl description="" fullCommand="db:create:all" id="all" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl id="drop">
                <subtasks>
                  <RakeTaskImpl description="" fullCommand="db:drop:_unsafe" id="_unsafe" />
                  <RakeTaskImpl description="" fullCommand="db:drop:all" id="all" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl description="" fullCommand="db:forward" id="forward" />
              <RakeTaskImpl description="" fullCommand="db:load_config" id="load_config" />
              <RakeTaskImpl description="" fullCommand="db:purge" id="purge" />
              <RakeTaskImpl id="purge">
                <subtasks>
                  <RakeTaskImpl description="" fullCommand="db:purge:all" id="all" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl id="reset">
                <subtasks>
                  <RakeTaskImpl description="" fullCommand="db:reset:all" id="all" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl id="setup">
                <subtasks>
                  <RakeTaskImpl description="" fullCommand="db:setup:all" id="all" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl id="test">
                <subtasks>
                  <RakeTaskImpl description="" fullCommand="db:test:load_schema" id="load_schema" />
                  <RakeTaskImpl description="" fullCommand="db:test:prepare" id="prepare" />
                  <RakeTaskImpl description="" fullCommand="db:test:purge" id="purge" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl description="" fullCommand="db:truncate_all" id="truncate_all" />
            </subtasks>
          </RakeTaskImpl>
          <RakeTaskImpl id="haml">
            <subtasks>
              <RakeTaskImpl description="Perform bulk conversion of all html.erb files to Haml in views folder" fullCommand="haml:convert_erbs" id="convert_erbs" />
              <RakeTaskImpl description="Convert html.erb to html.haml each file in app/views" fullCommand="haml:erb2haml" id="erb2haml" />
              <RakeTaskImpl description="Perform bulk conversion of all html.erb files to Haml in views folder, then remove the converted html.erb files" fullCommand="haml:replace_erbs" id="replace_erbs" />
            </subtasks>
          </RakeTaskImpl>
          <RakeTaskImpl id="log">
            <subtasks>
              <RakeTaskImpl description="Truncate all/specified *.log files in log/ to zero bytes (specify which logs with LOGS=test,development)" fullCommand="log:clear" id="clear" />
            </subtasks>
          </RakeTaskImpl>
          <RakeTaskImpl description="Report code statistics (KLOCs, etc) from the application or engine" fullCommand="stats" id="stats" />
          <RakeTaskImpl description="Run all tests in test folder except system ones" fullCommand="test" id="test" />
          <RakeTaskImpl id="test">
            <subtasks>
              <RakeTaskImpl description="Reset the database and run `bin/rails test`" fullCommand="test:db" id="db" />
              <RakeTaskImpl description="" fullCommand="test:all" id="all" />
              <RakeTaskImpl description="" fullCommand="test:channels" id="channels" />
              <RakeTaskImpl description="" fullCommand="test:controllers" id="controllers" />
              <RakeTaskImpl description="" fullCommand="test:functionals" id="functionals" />
              <RakeTaskImpl description="" fullCommand="test:generators" id="generators" />
              <RakeTaskImpl description="" fullCommand="test:helpers" id="helpers" />
              <RakeTaskImpl description="" fullCommand="test:integration" id="integration" />
              <RakeTaskImpl description="" fullCommand="test:jobs" id="jobs" />
              <RakeTaskImpl description="" fullCommand="test:mailboxes" id="mailboxes" />
              <RakeTaskImpl description="" fullCommand="test:mailers" id="mailers" />
              <RakeTaskImpl description="" fullCommand="test:models" id="models" />
              <RakeTaskImpl description="" fullCommand="test:prepare" id="prepare" />
              <RakeTaskImpl description="" fullCommand="test:run" id="run" />
              <RakeTaskImpl description="" fullCommand="test:system" id="system" />
              <RakeTaskImpl description="" fullCommand="test:units" id="units" />
            </subtasks>
          </RakeTaskImpl>
          <RakeTaskImpl id="time">
            <subtasks>
              <RakeTaskImpl description="List all time zones, list by two-letter country code (`bin/rails time:zones[US]`), or list by UTC offset (`bin/rails time:zones[-8]`)" fullCommand="time:zones[country_or_offset]" id="zones[country_or_offset]" />
              <RakeTaskImpl description="" fullCommand="time:zones" id="zones" />
              <RakeTaskImpl id="zones">
                <subtasks>
                  <RakeTaskImpl description="" fullCommand="time:zones:all" id="all" />
                  <RakeTaskImpl description="" fullCommand="time:zones:local" id="local" />
                  <RakeTaskImpl description="" fullCommand="time:zones:us" id="us" />
                </subtasks>
              </RakeTaskImpl>
            </subtasks>
          </RakeTaskImpl>
          <RakeTaskImpl id="tmp">
            <subtasks>
              <RakeTaskImpl description="Clear cache, socket and screenshot files from tmp/ (narrow w/ tmp:cache:clear, tmp:sockets:clear, tmp:screenshots:clear)" fullCommand="tmp:clear" id="clear" />
              <RakeTaskImpl description="Create tmp directories for cache, sockets, and pids" fullCommand="tmp:create" id="create" />
              <RakeTaskImpl id="cache">
                <subtasks>
                  <RakeTaskImpl description="" fullCommand="tmp:cache:clear" id="clear" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl id="pids">
                <subtasks>
                  <RakeTaskImpl description="" fullCommand="tmp:pids:clear" id="clear" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl id="screenshots">
                <subtasks>
                  <RakeTaskImpl description="" fullCommand="tmp:screenshots:clear" id="clear" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl id="sockets">
                <subtasks>
                  <RakeTaskImpl description="" fullCommand="tmp:sockets:clear" id="clear" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl id="storage">
                <subtasks>
                  <RakeTaskImpl description="" fullCommand="tmp:storage:clear" id="clear" />
                </subtasks>
              </RakeTaskImpl>
            </subtasks>
          </RakeTaskImpl>
          <RakeTaskImpl description="Lists all available tasks in Webpacker" fullCommand="webpacker" id="webpacker" />
          <RakeTaskImpl id="webpacker">
            <subtasks>
              <RakeTaskImpl description="Installs Webpacker binstubs in this application" fullCommand="webpacker:binstubs" id="binstubs" />
              <RakeTaskImpl description="Verifies that webpack &amp; webpack-dev-server are present" fullCommand="webpacker:check_binstubs" id="check_binstubs" />
              <RakeTaskImpl description="Verifies if Node.js is installed" fullCommand="webpacker:check_node" id="check_node" />
              <RakeTaskImpl description="Verifies if Yarn is installed" fullCommand="webpacker:check_yarn" id="check_yarn" />
              <RakeTaskImpl description="Remove old compiled webpacks" fullCommand="webpacker:clean[keep,age]" id="clean[keep,age]" />
              <RakeTaskImpl description="Remove the webpack compiled output directory" fullCommand="webpacker:clobber" id="clobber" />
              <RakeTaskImpl description="Compile JavaScript packs using webpack for production with digests" fullCommand="webpacker:compile" id="compile" />
              <RakeTaskImpl description="Provide information on Webpacker's environment" fullCommand="webpacker:info" id="info" />
              <RakeTaskImpl description="Install Webpacker in this application" fullCommand="webpacker:install" id="install" />
              <RakeTaskImpl id="install">
                <subtasks>
                  <RakeTaskImpl description="Install everything needed for Angular" fullCommand="webpacker:install:angular" id="angular" />
                  <RakeTaskImpl description="Install everything needed for Coffee" fullCommand="webpacker:install:coffee" id="coffee" />
                  <RakeTaskImpl description="Install everything needed for Elm" fullCommand="webpacker:install:elm" id="elm" />
                  <RakeTaskImpl description="Install everything needed for Erb" fullCommand="webpacker:install:erb" id="erb" />
                  <RakeTaskImpl description="Install everything needed for React" fullCommand="webpacker:install:react" id="react" />
                  <RakeTaskImpl description="Install everything needed for Stimulus" fullCommand="webpacker:install:stimulus" id="stimulus" />
                  <RakeTaskImpl description="Install everything needed for Svelte" fullCommand="webpacker:install:svelte" id="svelte" />
                  <RakeTaskImpl description="Install everything needed for Typescript" fullCommand="webpacker:install:typescript" id="typescript" />
                  <RakeTaskImpl description="Install everything needed for Vue" fullCommand="webpacker:install:vue" id="vue" />
                </subtasks>
              </RakeTaskImpl>
              <RakeTaskImpl description="Verifies if Webpacker is installed" fullCommand="webpacker:verify_install" id="verify_install" />
              <RakeTaskImpl description="Support for older Rails versions" fullCommand="webpacker:yarn_install" id="yarn_install" />
              <RakeTaskImpl description="" fullCommand="webpacker:clean" id="clean" />
            </subtasks>
          </RakeTaskImpl>
          <RakeTaskImpl id="yarn">
            <subtasks>
              <RakeTaskImpl description="Install all JavaScript dependencies as specified via Yarn" fullCommand="yarn:install" id="install" />
            </subtasks>
          </RakeTaskImpl>
          <RakeTaskImpl id="zeitwerk">
            <subtasks>
              <RakeTaskImpl description="Check project structure for Zeitwerk compatibility" fullCommand="zeitwerk:check" id="check" />
            </subtasks>
          </RakeTaskImpl>
          <RakeTaskImpl description="" fullCommand="default" id="default" />
          <RakeTaskImpl description="" fullCommand="environment" id="environment" />
          <RakeTaskImpl id="railties">
            <subtasks>
              <RakeTaskImpl id="install">
                <subtasks>
                  <RakeTaskImpl description="" fullCommand="railties:install:migrations" id="migrations" />
                </subtasks>
              </RakeTaskImpl>
            </subtasks>
          </RakeTaskImpl>
          <RakeTaskImpl description="" fullCommand="tmp" id="tmp" />
          <RakeTaskImpl description="" fullCommand="tmp/cache" id="tmp/cache" />
          <RakeTaskImpl description="" fullCommand="tmp/cache/assets" id="tmp/cache/assets" />
          <RakeTaskImpl description="" fullCommand="tmp/pids" id="tmp/pids" />
          <RakeTaskImpl description="" fullCommand="tmp/sockets" id="tmp/sockets" />
        </subtasks>
      </RakeTaskImpl>
    </option>
  </component>
</module>
/*******************************************************************************
* File: .idea/dataSources.xml
* Size: 957 bytes
*******************************************************************************/

<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="DataSourceManagerImpl" format="xml" multifile-model="true">
    <data-source source="LOCAL" name="choirsite_test@localhost" uuid="4889c66d-cb66-41bc-8a5f-fa722c45fcf0">
      <driver-ref>postgresql</driver-ref>
      <synchronize>true</synchronize>
      <jdbc-driver>org.postgresql.Driver</jdbc-driver>
      <jdbc-url>jdbc:postgresql://localhost:5434/choirsite_test</jdbc-url>
      <working-dir>$ProjectFileDir$</working-dir>
    </data-source>
    <data-source source="LOCAL" name="choirsite_dev@localhost" uuid="493465d0-c42a-4abc-be24-832dd909a455">
      <driver-ref>postgresql</driver-ref>
      <synchronize>true</synchronize>
      <jdbc-driver>org.postgresql.Driver</jdbc-driver>
      <jdbc-url>jdbc:postgresql://localhost:5434/choirsite_dev</jdbc-url>
      <working-dir>$ProjectFileDir$</working-dir>
    </data-source>
  </component>
</project>
/*******************************************************************************
* File: .idea/misc.xml
* Size: 186 bytes
*******************************************************************************/

<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ProjectRootManager" version="2" project-jdk-name="pw2022-app" project-jdk-type="RUBY_SDK" />
</project>
/*******************************************************************************
* File: .idea/modules.xml
* Size: 279 bytes
*******************************************************************************/

<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ProjectModuleManager">
    <modules>
      <module fileurl="file://$PROJECT_DIR$/.idea/choir-site.iml" filepath="$PROJECT_DIR$/.idea/choir-site.iml" />
    </modules>
  </component>
</project>
/*******************************************************************************
* File: .idea/remote-mappings.xml
* Size: 535 bytes
*******************************************************************************/

<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="RemoteMappingsManager">
    <list>
      <list>
        <remote-mappings server-id="ruby@docker-compose://[/Users/petersenwestimac4/Documents/Workspaces/choir-site/docker-compose.yaml]:web//usr/local/bin/ruby">
          <settings>
            <list>
              <mapping local-root="$PROJECT_DIR$" remote-root="/" />
            </list>
          </settings>
        </remote-mappings>
      </list>
    </list>
  </component>
</project>
/*******************************************************************************
* File: .idea/vcs.xml
* Size: 172 bytes
*******************************************************************************/

<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="VcsDirectoryMappings">
    <mapping directory="" vcs="Git" />
  </component>
</project>
/*******************************************************************************
* File: .rubocop.yml
* Size: 824 bytes
*******************************************************************************/

plugins:
  - rubocop-rails

AllCops:
  NewCops: enable
  TargetRubyVersion: 3.2

Lint/MissingSuper:
  AllowedParentClasses: ["ApplicationPresenter"]

Metrics/BlockLength:
  Exclude:
    - 'app/models/concerns/*'
    - 'config/environments/*'
    - 'config/routes.rb'
    - 'db/migrate/*'
    - 'db/schema.rb'

Metrics/MethodLength:
  CountAsOne:
    - 'array'
    - 'hash'
    - 'method_call'
  Exclude:
    - 'config/environments/*'
    - 'db/schema.rb'
    - 'db/migrate/*'

Naming/AccessorMethodName:
  Exclude:
    - 'app/datatables/*'

Rails/BulkChangeTable:
  Enabled: false

Rails/ReversibleMigration:
  Enabled: false

Rails/SkipsModelValidations:
  Exclude:
    - 'db/migrate/*'

Style/Documentation:
  Exclude:
    - 'config/*'
    - 'db/schema.rb'
    - 'db/migrate/*'


Style/MixinUsage:
  Exclude:
    - 'bin/*'
/*******************************************************************************
* File: .run/All tests in test_ choir-site.run.xml
* Size: 2563 bytes
*******************************************************************************/

<component name="ProjectRunConfigurationManager">
  <configuration default="false" name="All tests in test: choir-site" type="TestUnitRunConfigurationType" factoryName="Test::Unit/Shoulda/Minitest">
    <module name="choir-site" />
    <predefined_log_file enabled="true" id="RUBY_TESTUNIT" />
    <RTEST_RUN_CONFIG_SETTINGS_ID NAME="RUBY_ARGS" VALUE="-Itest" />
    <RTEST_RUN_CONFIG_SETTINGS_ID NAME="WORK DIR" VALUE="$MODULE_DIR$" />
    <RTEST_RUN_CONFIG_SETTINGS_ID NAME="SHOULD_USE_SDK" VALUE="true" />
    <RTEST_RUN_CONFIG_SETTINGS_ID NAME="ALTERN_SDK_NAME" VALUE="Choir Site Web" />
    <RTEST_RUN_CONFIG_SETTINGS_ID NAME="myPassParentEnvs" VALUE="true" />
    <envs>
      <env name="RAILS_ENV" value="test" />
      <env name="JRUBY_OPTS" value="-X+O" />
    </envs>
    <EXTENSION ID="BundlerRunConfigurationExtension" BUNDLE_MODE="AUTO" bundleExecEnabled="true" />
    <EXTENSION ID="RubyCoverageRunConfigurationExtension" runner="rcov">
      <COVERAGE_PATTERN ENABLED="true">
        <PATTERN REGEXPS="/.rvm/" INCLUDED="false" />
      </COVERAGE_PATTERN>
    </EXTENSION>
    <EXTENSION ID="RubyDockerContainerSettingsRunConfigurationExtension" dockerComposeCommand="RUN" />
    <EXTENSION ID="net.ashald.envfile">
      <option name="IS_ENABLED" value="false" />
      <option name="IS_SUBST" value="false" />
      <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
      <option name="IS_IGNORE_MISSING_FILES" value="false" />
      <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
      <ENTRIES>
        <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
      </ENTRIES>
    </EXTENSION>
    <EXTENSION ID="org.jetbrains.plugins.ruby.rails.run.RailsRunConfigurationExtension" SCRATCH_USE_RAILS_RUNNER="false" />
    <RTEST_RUN_CONFIG_SETTINGS_ID NAME="TESTS_FOLDER_PATH" VALUE="$MODULE_DIR$/test" />
    <RTEST_RUN_CONFIG_SETTINGS_ID NAME="TEST_SCRIPT_PATH" VALUE="" />
    <RTEST_RUN_CONFIG_SETTINGS_ID NAME="TEST_SCRIPTS_PATHS" VALUE="" />
    <RTEST_RUN_CONFIG_SETTINGS_ID NAME="TEST_FILE_MASK" VALUE="**/{*_test,test_*,*_spec}.rb" />
    <RTEST_RUN_CONFIG_SETTINGS_ID NAME="TEST_METHOD_NAME" VALUE="" />
    <RTEST_RUN_CONFIG_SETTINGS_ID NAME="TEST_TEST_TYPE" VALUE="ALL_IN_FOLDER" />
    <RTEST_RUN_CONFIG_SETTINGS_ID NAME="DRB" VALUE="false" />
    <RTEST_RUN_CONFIG_SETTINGS_ID NAME="ZEUS" VALUE="false" />
    <RTEST_RUN_CONFIG_SETTINGS_ID NAME="SPRING" VALUE="false" />
    <RTEST_RUN_CONFIG_SETTINGS_ID NAME="RUNNER_OPTIONS" VALUE="" />
    <method v="2" />
  </configuration>
</component>
/*******************************************************************************
* File: .run/Brakeman.run.xml
* Size: 1880 bytes
*******************************************************************************/

<component name="ProjectRunConfigurationManager">
  <configuration default="false" name="Brakeman" type="CommandRunConfigurationType" factoryName="Gem Command">
    <module name="choir-site" />
    <COMMAND_RUN_CONFIGURATION NAME="RUBY_ARGS" VALUE="" />
    <COMMAND_RUN_CONFIGURATION NAME="WORK DIR" VALUE="$MODULE_DIR$" />
    <COMMAND_RUN_CONFIGURATION NAME="SHOULD_USE_SDK" VALUE="true" />
    <COMMAND_RUN_CONFIGURATION NAME="ALTERN_SDK_NAME" VALUE="Choir Site Web" />
    <COMMAND_RUN_CONFIGURATION NAME="myPassParentEnvs" VALUE="true" />
    <EXTENSION ID="BundlerRunConfigurationExtension" BUNDLE_MODE="AUTO" bundleExecEnabled="true" />
    <EXTENSION ID="RubyCoverageRunConfigurationExtension" runner="rcov">
      <COVERAGE_PATTERN ENABLED="true">
        <PATTERN REGEXPS="/.rvm/" INCLUDED="false" />
      </COVERAGE_PATTERN>
    </EXTENSION>
    <EXTENSION ID="RubyDockerContainerSettingsRunConfigurationExtension" dockerComposeCommand="RUN" />
    <EXTENSION ID="net.ashald.envfile">
      <option name="IS_ENABLED" value="false" />
      <option name="IS_SUBST" value="false" />
      <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
      <option name="IS_IGNORE_MISSING_FILES" value="false" />
      <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
      <ENTRIES>
        <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
      </ENTRIES>
    </EXTENSION>
    <EXTENSION ID="org.jetbrains.plugins.ruby.rails.run.RailsRunConfigurationExtension" SCRATCH_USE_RAILS_RUNNER="false" />
    <COMMAND_CONFIG_SETTINGS_ID NAME="GEM_NAME" VALUE="brakeman" />
    <COMMAND_CONFIG_SETTINGS_ID NAME="EXECUTABLE_NAME" VALUE="brakeman" />
    <COMMAND_CONFIG_SETTINGS_ID NAME="EXECUTABLE_ARGS" VALUE="" />
    <COMMAND_CONFIG_SETTINGS_ID NAME="WORKING_DIR" VALUE="$MODULE_DIR$" />
    <method v="2" />
  </configuration>
</component>
/*******************************************************************************
* File: .run/Launch Choir-Site.run.xml
* Size: 886 bytes
*******************************************************************************/

<component name="ProjectRunConfigurationManager">
  <configuration default="false" name="Launch Choir-Site" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
    <deployment type="docker-compose.yml">
      <settings>
        <option name="containerName" value="" />
        <option name="envFilePath" value="" />
        <option name="services">
          <list>
            <option value="web" />
          </list>
        </option>
        <option name="sourceFilePath" value="docker-compose.yml" />
        <option name="upAttachDependencies" value="true" />
        <option name="upDetach" value="false" />
      </settings>
    </deployment>
    <method v="2">
      <option name="RunConfigurationTask" enabled="true" run_configuration_name="Remove Server.pid" run_configuration_type="ShConfigurationType" />
    </method>
  </configuration>
</component>
/*******************************************************************************
* File: .run/Rebuild Choir-Site.run.xml
* Size: 788 bytes
*******************************************************************************/

<component name="ProjectRunConfigurationManager">
  <configuration default="false" name="Rebuild Choir-Site" type="docker-deploy" factoryName="docker-compose.yml" server-name="Docker">
    <deployment type="docker-compose.yml">
      <settings>
        <option name="containerName" value="" />
        <option name="envFilePath" value="" />
        <option name="commandLineOptions" value="--build" />
        <option name="services">
          <list>
            <option value="web" />
          </list>
        </option>
        <option name="sourceFilePath" value="docker-compose.yml" />
        <option name="upAttachDependencies" value="true" />
        <option name="upDetach" value="false" />
      </settings>
    </deployment>
    <method v="2" />
  </configuration>
</component>
/*******************************************************************************
* File: .run/Remove Server.pid.run.xml
* Size: 851 bytes
*******************************************************************************/

<component name="ProjectRunConfigurationManager">
  <configuration default="false" name="Remove Server.pid" type="ShConfigurationType">
    <option name="SCRIPT_TEXT" value="rm tmp/pids/server.pid || true" />
    <option name="INDEPENDENT_SCRIPT_PATH" value="true" />
    <option name="SCRIPT_PATH" value="" />
    <option name="SCRIPT_OPTIONS" value="" />
    <option name="INDEPENDENT_SCRIPT_WORKING_DIRECTORY" value="true" />
    <option name="SCRIPT_WORKING_DIRECTORY" value="$PROJECT_DIR$" />
    <option name="INDEPENDENT_INTERPRETER_PATH" value="true" />
    <option name="INTERPRETER_PATH" value="powershell.exe" />
    <option name="INTERPRETER_OPTIONS" value="" />
    <option name="EXECUTE_IN_TERMINAL" value="true" />
    <option name="EXECUTE_SCRIPT_FILE" value="false" />
    <envs />
    <method v="2" />
  </configuration>
</component>
/*******************************************************************************
* File: .run/Rubocop.run.xml
* Size: 1877 bytes
*******************************************************************************/

<component name="ProjectRunConfigurationManager">
  <configuration default="false" name="Rubocop" type="CommandRunConfigurationType" factoryName="Gem Command">
    <module name="choir-site" />
    <COMMAND_RUN_CONFIGURATION NAME="RUBY_ARGS" VALUE="" />
    <COMMAND_RUN_CONFIGURATION NAME="WORK DIR" VALUE="$MODULE_DIR$" />
    <COMMAND_RUN_CONFIGURATION NAME="SHOULD_USE_SDK" VALUE="true" />
    <COMMAND_RUN_CONFIGURATION NAME="ALTERN_SDK_NAME" VALUE="Choir Site Web" />
    <COMMAND_RUN_CONFIGURATION NAME="myPassParentEnvs" VALUE="true" />
    <EXTENSION ID="BundlerRunConfigurationExtension" BUNDLE_MODE="AUTO" bundleExecEnabled="true" />
    <EXTENSION ID="RubyCoverageRunConfigurationExtension" runner="rcov">
      <COVERAGE_PATTERN ENABLED="true">
        <PATTERN REGEXPS="/.rvm/" INCLUDED="false" />
      </COVERAGE_PATTERN>
    </EXTENSION>
    <EXTENSION ID="RubyDockerContainerSettingsRunConfigurationExtension" dockerComposeCommand="RUN" />
    <EXTENSION ID="net.ashald.envfile">
      <option name="IS_ENABLED" value="false" />
      <option name="IS_SUBST" value="false" />
      <option name="IS_PATH_MACRO_SUPPORTED" value="false" />
      <option name="IS_IGNORE_MISSING_FILES" value="false" />
      <option name="IS_ENABLE_EXPERIMENTAL_INTEGRATIONS" value="false" />
      <ENTRIES>
        <ENTRY IS_ENABLED="true" PARSER="runconfig" IS_EXECUTABLE="false" />
      </ENTRIES>
    </EXTENSION>
    <EXTENSION ID="org.jetbrains.plugins.ruby.rails.run.RailsRunConfigurationExtension" SCRATCH_USE_RAILS_RUNNER="false" />
    <COMMAND_CONFIG_SETTINGS_ID NAME="GEM_NAME" VALUE="rubocop" />
    <COMMAND_CONFIG_SETTINGS_ID NAME="EXECUTABLE_NAME" VALUE="rubocop" />
    <COMMAND_CONFIG_SETTINGS_ID NAME="EXECUTABLE_ARGS" VALUE="" />
    <COMMAND_CONFIG_SETTINGS_ID NAME="WORKING_DIR" VALUE="$MODULE_DIR$" />
    <method v="2" />
  </configuration>
</component>
/*******************************************************************************
* File: Dockerfile
* Size: 1154 bytes
*******************************************************************************/

FROM whittakertech/choir-base:latest

# Install system dependencies, Node.js v16.x, and Yarn
RUN apt-get update -qq && \
    apt-get install -y --no-install-recommends \
        libv8-dev && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Set Rails to run in production
# Use existing SECRET_KEY_BASE if available, otherwise generate a random one
ENV RAILS_ENV=production \
    NODE_ENV=production \
    BUNDLE_WITHOUT="development test"

# Install gems
COPY Gemfile Gemfile.lock ./
RUN bundle config set --local without $BUNDLE_WITHOUT && \
    bundle install --jobs 4 --retry 3

# Install Yarn packages
COPY package.json yarn.lock ./
RUN yarn install --frozen-lockfile

# Copy the rest of the application code
COPY . .

# Precompile assets
RUN SECRET_KEY_BASE=dummy bundle exec rake assets:precompile || \
    (echo "Asset compilation failed - check JavaScript syntax" && \
     NODE_ENV=production RAILS_ENV=production bundle exec rake assets:clobber && \
     SECRET_KEY_BASE=dummy bundle exec rake assets:precompile --trace)

# Expose the port Heroku sets
EXPOSE $PORT

# Start the server
CMD ["bundle", "exec", "puma", "-C", "config/puma.rb"]
/*******************************************************************************
* File: Dockerfile.base
* Size: 976 bytes
*******************************************************************************/

FROM ruby:3.2-slim

# Install system dependencies
RUN apt-get update -qq && \
    apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        git \
        gnupg \
        libpq-dev \
        postgresql-client \
        software-properties-common && \
    rm -rf /var/lib/apt/lists/*

# Setup NodeJS repository and install
RUN curl -sL https://deb.nodesource.com/setup_20.x | bash - && \
    apt-get update -qq && \
    apt-get install -y nodejs && \
    npm install -g yarn && \
    node --version && yarn --version && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /choir-site

# Install bundler
RUN gem install bundler -v "~> 2.4.0" && \
    bundle update --bundler

# List of apt-get installs for Dev only
#        python3 \
#        g++ \
#        make \
#        pkg-config \
#        libyaml-dev \
#        libffi-dev \
#        vim && \

# List of apt-get installs for Prod only
#        libv8-dev
/*******************************************************************************
* File: Dockerfile.dev
* Size: 1031 bytes
*******************************************************************************/

FROM whittakertech/choir-base:latest

# Install system dependencies
RUN apt-get update -qq && \
    apt-get install -y --no-install-recommends \
        python3 \
        g++ \
        make \
        pkg-config \
        libyaml-dev \
        libffi-dev \
        vim && \
    rm -rf /var/lib/apt/lists/*

# Set environment variables
ENV GEM_HOME=/usr/local/bundle
ENV GEM_PATH=/usr/local/bundle
ENV BUNDLE_PATH=/usr/local/bundle
ENV BUNDLE_BIN=/usr/local/bundle/bin
ENV PATH="${BUNDLE_BIN}:${PATH}"
ENV RAILS_ENV=development
ENV NODE_ENV=development

# Copy and install dependencies
COPY Gemfile* ./

# Install all gems including development and test
RUN bundle config unset without && \
    bundle install && \
    bundle config set --local with "development test"

# Copy package.json and install yarn packages
COPY package.json yarn.lock ./
RUN yarn install

# Copy the rest of the application code
COPY . .

# Expose ports
EXPOSE 1234 3000

# Start development server
CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0"]
/*******************************************************************************
* File: Gemfile
* Size: 1971 bytes
*******************************************************************************/

# frozen_string_literal: true

source 'https://rubygems.org'

gem 'rails', '~> 7.1.0'

# gem 'activesupport', '~> 7.1.0'
gem 'concurrent-ruby', '~> 1.1.9'
gem 'logging', '~> 2.3.0'

gem 'actioncable'
gem 'ajax-datatables-rails'
gem 'bcrypt', '~> 3.1.12'
# gem 'bootstrap-sass', '~> 3.3'
gem 'bootstrap-will_paginate'
# gem 'carrierwave'
# gem 'coffee-rails', '~> 5.0.0'
gem 'cssbundling-rails'
gem 'execjs'
gem 'faker'
# gem 'fog-aws'
gem 'font-awesome-sass'
gem 'jbuilder'
# gem 'jquery-datatables'
# gem 'jquery-rails'
gem 'jsbundling-rails'
gem 'mime-types'
gem 'mini_magick', '~> 4.7'
gem 'propshaft'
gem 'puma', '~> 6'
# gem 'sass-rails'
# gem 'sprockets'
gem 'turbo-rails'
# gem 'turbolinks', '~> 5'
gem 'uglifier', '3.2.0'
# gem 'webpacker'
gem 'will_paginate', '~> 4.0.1'

gem 'aws-sdk-s3', require: false
gem 'bootstrap-datepicker-rails'
gem 'breadcrumbs_on_rails'
gem 'cancan'
gem 'cocoon'
gem 'devise'
gem 'haml'
gem 'haml-rails'
gem 'invisible_captcha'
gem 'jquery-ui-rails'
gem 'multipart-post'
gem 'pg'
gem 'sidekiq'
gem 'wysiwyg-rails'

group :development, :test do
  gem 'better_errors'
  gem 'binding_of_caller'
  gem 'brakeman'
  gem 'byebug', platform: :mri
  gem 'debug', require: false
  gem 'rack-mini-profiler'
  gem 'rdbg'
  gem 'ruby-prof'
  # gem 'spring'
end

group :development do
  gem 'bullet'
  # gem 'coffee-script'
  # gem 'coffee-script-source'
  gem 'dotenv'
  gem 'erb2haml'
  gem 'foreman'
  gem 'listen'
  gem 'pg_query'
  gem 'prosopite'
  gem 'rails_best_practices'
  gem 'rubocop', '~> 1.59'
  gem 'rubocop-capybara'
  gem 'rubocop-minitest'
  gem 'rubocop-rails'
  gem 'web-console'
end

group :test do
  gem 'guard'
  gem 'guard-minitest'
  gem 'minitest-reporters'
  gem 'rails-controller-testing'
  gem 'simplecov', require: false
end

# group :production do
#   gem 'rails_12factor'
# end

# Windows does not include zoneinfo files, so bundle the tzinfo-data gem
gem 'tzinfo-data', platforms: %i[mingw mswin x64_mingw jruby]

/*******************************************************************************
* File: Guardfile
* Size: 1941 bytes
*******************************************************************************/

# frozen_string_literal: true

# A sample Guardfile
# More info at https://github.com/guard/guard#readme

## Uncomment and set this to only include directories you want to watch
# directories %w(app lib config test spec features) \
#  .select{|d| Dir.exist?(d) ? d : UI.warning("Directory #{d} does not exist")}

## Note: if you are using the `directories` clause above and you are not
## watching the project directory ('.'), then you will want to move
## the Guardfile to a watched dir and symlink it back, e.g.
#
#  $ mkdir config
#  $ mv Guardfile config/
#  $ ln -s config/Guardfile .
#
# and, you'll have to watch "config/Guardfile" instead of "Guardfile"

guard :minitest, spring: 'RAILS_ENV=test rails test:system test' do
  # with Minitest::Unit
  watch(%r{^test/(.*)/?test_(.*)\.rb$})
  watch(%r{^lib/(.*/)?([^/]+)\.rb$})     { |m| "test/#{m[1]}test_#{m[2]}.rb" }
  watch(%r{^test/test_helper\.rb$})      { 'test' }

  # with Minitest::Spec
  # watch(%r{^spec/(.*)_spec\.rb$})
  # watch(%r{^lib/(.+)\.rb$})         { |m| "spec/#{m[1]}_spec.rb" }
  # watch(%r{^spec/spec_helper\.rb$}) { 'spec' }

  # Rails 4
  # watch(%r{^app/(.+)\.rb$})                               { |m| "test/#{m[1]}_test.rb" }
  # watch(%r{^app/controllers/application_controller\.rb$}) { 'test/controllers' }
  # watch(%r{^app/controllers/(.+)_controller\.rb$})        { |m| "test/integration/#{m[1]}_test.rb" }
  # watch(%r{^app/views/(.+)_mailer/.+})                    { |m| "test/mailers/#{m[1]}_mailer_test.rb" }
  # watch(%r{^lib/(.+)\.rb$})                               { |m| "test/lib/#{m[1]}_test.rb" }
  # watch(%r{^test/.+_test\.rb$})
  # watch(%r{^test/test_helper\.rb$}) { 'test' }

  # Rails < 4
  # watch(%r{^app/controllers/(.*)\.rb$}) { |m| "test/functional/#{m[1]}_test.rb" }
  # watch(%r{^app/helpers/(.*)\.rb$})     { |m| "test/helpers/#{m[1]}_test.rb" }
  # watch(%r{^app/models/(.*)\.rb$})      { |m| "test/unit/#{m[1]}_test.rb" }
end

/*******************************************************************************
* File: Makefile
* Size: 1510 bytes
*******************************************************************************/

# Rails Docker Development Commands

# Default target when you just type 'make'
.PHONY: default
default: up

# Start the application
.PHONY: up
up:
	docker-compose up

# Start the application in detached mode
.PHONY: up-d
up-d:
	docker-compose up -d

# Stop the application
.PHONY: down
down:
	docker-compose down

# Restart the application
.PHONY: restart
restart:
	docker-compose restart

# Update gems without rebuilding (fastest)
.PHONY: bundle
bundle:
	docker-compose run --rm web bundle install
	docker-compose restart web

# Update gems with a full rebuild (slower but more thorough)
.PHONY: bundle-rebuild
bundle-rebuild:
	docker-compose down
	docker-compose build
	docker-compose up -d

# Clean update by removing Gemfile.lock and rebuilding
.PHONY: bundle-clean
bundle-clean:
	docker-compose down
	rm -f Gemfile.lock
	docker-compose build
	docker-compose up -d

# Full rebuild of all containers
.PHONY: rebuild
rebuild:
	docker-compose down
	docker-compose build --no-cache
	docker-compose up -d

# Run Rails console
.PHONY: console
console:
	docker-compose run --rm web rails console

# Run tests
.PHONY: test
test:
	docker-compose run --rm web bundle exec rails test

# Show running containers
.PHONY: ps
ps:
	docker-compose ps

# Show logs
.PHONY: logs
logs:
	docker-compose logs -f

# Run database migrations
.PHONY: migrate
migrate:
	docker-compose run --rm web rails db:migrate

# Reset database
.PHONY: db-reset
db-reset:
	docker-compose run --rm web rails db:drop db:create db:migrate db:seed
/*******************************************************************************
* File: README.md
* Size: 5621 bytes
*******************************************************************************/

# Choir Site

A Ruby on Rails web application for managing a choir's repertoire, performances, rehearsals, and communications.

## Features

- Song library with sheet music and audio files
- Performance and rehearsal scheduling
- Member management
- News articles
- Contact form
- Admin dashboard

## Technology Stack

- Ruby 3.2.7
- Rails 6.1.7
- PostgreSQL 13
- Node 20
- Docker for development
- Bootstrap for UI
- jQuery and DataTables for interactive components
- Action Cable for real-time updates
- Active Storage for file uploads

## Prerequisites

### For All Platforms
- [Docker](https://www.docker.com/get-started)
- [Docker Compose](https://docs.docker.com/compose/install/)
- Git

## Setup Instructions

### Clone the Repository

```bash
git clone https://github.com/your-username/choir-site.git
cd choir-site
```

## Setup for Mac OS

### 1. Install Prerequisites

Using Homebrew:

```bash
# Install Homebrew if not already installed
/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

# Install Docker and Docker Compose
brew install --cask docker
```

### 2. Start Docker Desktop

Launch Docker Desktop from your Applications folder or using Spotlight search.

### 3. Create PostgreSQL Network

```bash
docker network create postgres_network
```

### 4. Start PostgreSQL Container

```bash
docker run --name postgres13 \
  --network postgres_network \
  -e POSTGRES_USER=choir_postgres \
  -e POSTGRES_PASSWORD=password \
  -p 5432:5432 \
  -d postgres:13
```

### 5. Build and Start the Application

```bash
# Build the Docker images
docker-compose build

# Start the application services
docker-compose up
```

### 6. Set Up the Database

In a new terminal window:

```bash
docker-compose exec web rails db:create db:migrate db:seed
```

## Setup for Windows

### 1. Install Prerequisites

- Install [Docker Desktop for Windows](https://docs.docker.com/desktop/install/windows-install/)
- If using WSL 2, ensure it's properly configured with Docker Desktop

### 2. Start Docker Desktop

Launch Docker Desktop from the Start menu.

### 3. Open Windows PowerShell or Command Prompt as Administrator

### 4. Create PostgreSQL Network

```powershell
docker network create postgres_network
```

### 5. Start PostgreSQL Container

```powershell
docker run --name postgres13 `
  --network postgres_network `
  -e POSTGRES_USER=choir_postgres `
  -e POSTGRES_PASSWORD=password `
  -p 5432:5432 `
  -d postgres:13
```

### 6. Build and Start the Application

```powershell
# Build the Docker images
docker-compose build

# Start the application services
docker-compose up
```

### 7. Set Up the Database

In a new terminal window:

```powershell
docker-compose exec web rails db:create db:migrate db:seed
```

## Using WSL 2 (Windows Subsystem for Linux) on Windows

If you're using WSL 2, you can also follow these Linux-like steps within your WSL 2 terminal:

```bash
# Install WSL 2 if not already installed
wsl --install

# Create PostgreSQL network
docker network create postgres_network

# Start PostgreSQL container
docker run --name postgres13 \
  --network postgres_network \
  -e POSTGRES_USER=choir_postgres \
  -e POSTGRES_PASSWORD=password \
  -p 5432:5432 \
  -d postgres:13

# Start the application
docker-compose up
```

## Accessing the Application

Once the application is running:

- Web application: http://localhost:3000
- Admin interface: http://localhost:3000/admin

Default admin credentials:
- Email: test@email.com
- Password: password

## Development Workflow

### Running Tests

```bash
# Run all tests
docker-compose run --rm test rails test

# Run specific test file
docker-compose run --rm test rails test test/path/to/file
```

### Common Docker Commands

```bash
# View running containers
docker-compose ps

# Restart the application
docker-compose restart

# Stop containers
docker-compose down

# Run a Rails console
docker-compose exec web rails console

# Run migrations
docker-compose exec web rails db:migrate

# Using Makefile shortcuts
make up       # Start the application
make console  # Run Rails console
make test     # Run tests
make logs     # View logs
make migrate  # Run migrations
```

## Project Structure

- `app/` - Main application code
    - `controllers/` - Request handlers
    - `models/` - Database models
    - `views/` - UI templates
    - `assets/` - CSS, JavaScript, and images
    - `datatables/` - DataTables configuration
    - `presenters/` - View presenters
- `config/` - Application configuration
- `db/` - Database migrations and seeds
- `test/` - Test files

## Deployment

This application is configured for deployment to Heroku using Docker containers.

### Deploying to Heroku

```bash
# Login to Heroku
heroku container:login

# Create an app in Heroku
heroku create your-app-name

# Push and release the container
heroku container:push web -a your-app-name
heroku container:release web -a your-app-name

# Run database migrations
heroku run rails db:migrate -a your-app-name
```

## Troubleshooting

### Database Connection Issues

If you encounter database connection issues:

```bash
# Check if PostgreSQL container is running
docker ps | grep postgres

# Restart PostgreSQL container if needed
docker restart postgres13

# Check logs for errors
docker logs postgres13
```

### Application Errors

If the application fails to start:

```bash
# Check application logs
docker-compose logs web

# Remove server.pid if it exists (common issue after unexpected shutdown)
rm tmp/pids/server.pid
```

## License

This project is licensed under the MIT License - see the LICENSE file for details.
/*******************************************************************************
* File: Rakefile
* Size: 258 bytes
*******************************************************************************/

# frozen_string_literal: true

# Add your own tasks in files placed in lib/tasks ending in .rake,
# for example lib/tasks/capistrano.rake, and they will automatically be available to Rake.

require_relative 'config/application'

Rails.application.load_tasks

/*******************************************************************************
* File: app/assets/config/manifest.js
* Size: 111 bytes
*******************************************************************************/

//= link_tree ../images
//= link_directory ../javascripts .js
//= link application.css
//= link_tree ../builds

/*******************************************************************************
* File: app/assets/stylesheets/admin.bootstrap.scss
* Size: 2136 bytes
*******************************************************************************/

// Import Bootstrap and Bootstrap Icons
@use 'bootstrap/scss/bootstrap';
@use 'bootstrap-icons/font/bootstrap-icons';
@use 'bootstrap-datepicker/dist/css/bootstrap-datepicker3';
@use 'jquery-ui/themes/base/sortable';
@use 'froala-editor/css/froala_editor.min';
@use 'froala-editor/css/froala_style.min';
@use 'font-awesome/scss/font-awesome';
@use 'froala-editor/css/plugins/code_view.min';

// DataTables styles (use @use instead of @import)
@use 'datatables.net-bs4/css/dataTables.bootstrap4' as dt;
@use 'datatables.net-select-bs4/css/select.bootstrap4' as dts;
@use 'datatables.net-buttons-bs4/css/buttons.bootstrap4' as dtb;

// Base modules
@use 'modules/colors' as colors;
@use 'modules/media' as media;

// Partials
@use 'partials/breadcrumbs';
@use 'partials/buttons';
@use 'partials/header';
@use 'partials/misc';
@use 'partials/music';
@use 'partials/news';
@use 'partials/profiles';
@use 'partials/rehearsals';
@use 'partials/title';
@use 'partials/typography';

body {
  padding-bottom: 60px;
}

#error-explanation {
  color: red;
  ul {
    color: red;
    margin: 0 0 30px 0;
  }
}

.field_with_errors {
  @extend .has-error !optional;
  .form-control {
    color: var(--bs-danger);
  }
}

.ui-state-highlight{
  border: 1px solid #ddd;
  background: #e6e6e6;
  margin-bottom: 20px;
  
  &.sheet-music-highlight{
    height: 89px;
  }
  
  &.audio-highlight{
    height: 146px;
  }
}

.panel-title .glyphicon{
  transition: all 333ms linear;
}

a.collapsed .glyphicon{
  transform: rotate(-180deg);
}

.panel-group .panel{
  margin: {
    top: 15px;
    bottom: 15px;
  }
}

.alert-error {
    background-color: #f2dede;
    border-color: #eed3d7;
    color: #b94a48;
    text-align: left;
 }

.alert-alert {
    background-color: #f2dede;
    border-color: #eed3d7;
    color: #b94a48;
    text-align: left;
 }

.alert-success {
    background-color: #dff0d8;
    border-color: #d6e9c6;
    color: #468847;
    text-align: left;
 }

.alert-notice {
    background-color: #dff0d8;
    border-color: #d6e9c6;
    color: #468847;
    text-align: left;
 }
 
.clickable-row{
  cursor: pointer; 
}

.d-none{
  display: none;
}
/*******************************************************************************
* File: app/assets/stylesheets/application.bootstrap.scss
* Size: 1325 bytes
*******************************************************************************/

// Import Bootstrap and Bootstrap Icons
@use 'bootstrap/scss/bootstrap';
@use 'bootstrap-icons/font/bootstrap-icons';

// DataTables styles (use @use instead of @import)
@use 'datatables.net-bs4/css/dataTables.bootstrap4' as *;
@use 'datatables.net-select-bs4/css/select.bootstrap4' as *;
@use 'datatables.net-buttons-bs4/css/buttons.bootstrap4' as *;

// Base modules
@use 'modules/colors';
@use 'modules/media';

// Partials
@use 'partials/breadcrumbs';
@use 'partials/buttons';
@use 'partials/header';
@use 'partials/misc';
@use 'partials/music';
@use 'partials/news';
@use 'partials/profiles';
@use 'partials/rehearsals';
@use 'partials/title';
@use 'partials/typography';

body {
  padding-bottom: 60px;
}

a {
  text-decoration: none;
}

#error-explanation {
  color: red;
  ul {
    color: red;
    margin: 0 0 30px 0;
  }
}

.field_with_errors {
  @extend .has-error !optional;
  .form-control {
    color: var(--bs-danger);
  }
}

.ui-state-highlight {
  border: 1px solid #ddd;
  background: #e6e6e6;
  margin-bottom: 20px;

  &.sheet-music-highlight {
    height: 89px;
  }

  &.audio-highlight {
    height: 146px;
  }
}

.panel-title .glyphicon {
  transition: all 333ms linear;
}

a.collapsed .glyphicon {
  transform: rotate(-180deg);
}

.panel-group .panel {
  margin: {
    top: 15px;
    bottom: 15px;
  }
}
/*******************************************************************************
* File: app/assets/stylesheets/datatables.scss
* Size: 166 bytes
*******************************************************************************/

@use 'datatables.net-bs4/css/dataTables.bootstrap4';
@use 'datatables.net-buttons-bs4/css/buttons.bootstrap4';
@use 'datatables.net-select-bs4/css/select.bootstrap4';
/*******************************************************************************
* File: app/assets/stylesheets/modules/_colors.scss
* Size: 423 bytes
*******************************************************************************/

@use 'sass:math';
@use 'sass:color';

$brand-primary: #CBA250;
$brand-secondary: #424242;

$original-blue: #4688f1;

$p: hue($brand-primary);
$o: hue($original-blue);
$hue-rotate: $p - $o;

$s1: saturation($brand-primary);
$s2: saturation($original-blue);
$hue-saturate: math.div($s1, math.div($s2, 100%));

$b1: lightness($brand-primary);
$b2: lightness($original-blue);
$hue-lightness: math.div($b1, math.div($b2, 100%));
/*******************************************************************************
* File: app/assets/stylesheets/modules/_media.scss
* Size: 474 bytes
*******************************************************************************/

$xs-screen: "only screen and (max-width : 767px)";
$sm-screen: "only screen and (min-width : 768px) and (max-width : 991px)";
$sm-screen-up: "only screen and (min-width : 768px)";
$sm-screen-down: "only screen and (max-width : 991px)";
$md-screen: "only screen and (min-width : 992px) and (max-width : 1199px)";
$md-screen-up: "only screen and (min-width : 992px)";
$md-screen-down: "only screen and (max-width : 1199px)";
$lg-screen: "only screen and (min-width : 1200px)";
/*******************************************************************************
* File: app/assets/stylesheets/partials/_breadcrumbs.scss
* Size: 434 bytes
*******************************************************************************/

@use '../modules/colors' as colors;
@use '../modules/media' as media;

/* Breadcrumbs */

.breadcrumbs{
  @media #{media.$xs-screen} { padding:{ top: 20px; bottom: 20px; } }
  @media #{media.$sm-screen} { padding:{ top: 25px; bottom: 25px; } }
  @media #{media.$md-screen} { padding:{ top: 30px; bottom: 30px; } }
  @media #{media.$lg-screen} { padding:{ top: 40px; bottom: 40px; } }
  
  span{
    color: colors.$brand-primary;
  }
}
/*******************************************************************************
* File: app/assets/stylesheets/partials/_buttons.scss
* Size: 353 bytes
*******************************************************************************/

@use '../modules/colors' as colors;

/* Buttons */

.btn-secondary{
  background-color: colors.$brand-secondary;
  border-color: darken(colors.$brand-secondary, 10);
  color: white;
  
  &:hover, &:active, &:focus {
    background-color: darken(colors.$brand-secondary, 10);
    border-color: darken(colors.$brand-secondary, 20);
    color: white;
  }
}
/*******************************************************************************
* File: app/assets/stylesheets/partials/_header.scss
* Size: 1851 bytes
*******************************************************************************/

@use '../modules/colors' as colors;
@use '../modules/media' as media;

/* Header */

header{
  background-color: colors.$brand-secondary;
  @media #{media.$xs-screen} {height: 40px; padding: 0 10px;}
  @media #{media.$sm-screen} {height: 60px; padding: 0 20px;}
  @media #{media.$md-screen-up} {height: 80px; padding: 0 30px;}
  width: 100%;
  display: table;
  
  a{
    display: table-cell;
    vertical-align: middle;
  }
  
  h1{
    margin: 0;
    color: white;
    text-transform: uppercase;
    @media #{media.$xs-screen} {font-size: 18px;}
    @media #{media.$sm-screen} {font-size: 30px;}
    @media #{media.$md-screen-up} {font-size: 36px;}
  
    .choir{
      font-family: "Tangerine", sans-serif;
      color: colors.$brand-primary;
      text-transform: none;
      font:{
        size: 1.1em;
        weight: 700;
      }
    }
  }
}

.icon-bar{
  background-color: white;
}

.navbar-toggle{
  margin: 0;
  padding: 0;
  position: relative;
  display: table-cell;
  height: 100%;
  vertical-align: middle;
  float: right;
  
  @media #{media.$sm-screen-up} {display: none;}
}

#navbarCollapse{
  background-color: colors.$brand-primary;
  position: absolute;
  top: 40px;
  width: 120px;
  border: 1px solid darken(colors.$brand-primary, 10);
  border-top-width: 0;
  @media #{media.$sm-screen-down}{
    right: 0;
  }
  
  @media #{media.$sm-screen-up} {
    top: 60px;
    border-bottom-left-radius: 10px;
    width: auto;
  }
  
  @media #{media.$md-screen-up} {
    top: 80px;
    border-bottom-right-radius: 10px;
    left: 50%;
    transform: translateX(-50%);
  }
  a{
    color: colors.$brand-secondary;
    
    &:hover, &:focus, &:active{
      background-color: darken(colors.$brand-primary, 10);
      color: colors.$brand-secondary;
    }
  }
}

.navbar-nav > li > a {
  padding: {
    top: 5px;
    bottom: 5px;
  }
}

   
/*******************************************************************************
* File: app/assets/stylesheets/partials/_misc.scss
* Size: 192 bytes
*******************************************************************************/

@use '../modules/colors' as colors;

/* MISC */

/* Turbolinks */

.turbolinks-progress-bar{
  background-color: colors.$brand-primary;
}

/* White Space */

.nobreak{
  white-space: nowrap;
}
/*******************************************************************************
* File: app/assets/stylesheets/partials/_music.scss
* Size: 1981 bytes
*******************************************************************************/

@use "../modules/colors" as colors;

.nav-tabs.song-sorting {
  border-bottom-color: darken(colors.$brand-primary, 10);
  
  & > li {
    & > a {
      border-color: darken(colors.$brand-secondary, 10);
      border-bottom-width: 0;
      margin-bottom: 1px;
      background-color: colors.$brand-secondary;
      color: white;
      padding: 3px;
    }
    &.active > a,
    & > a:hover,
    & > a:focus {
      border-color: darken(colors.$brand-primary, 10);
      background-color: colors.$brand-primary;
      border-bottom-width: 0;
      color: white;
    }
  }
}

.letter-links{
  padding: 20px 0;
  border-bottom: 2px solid colors.$brand-secondary;
}

.letter-block{
  border-bottom: 2px solid colors.$brand-secondary;
  padding-bottom: 20px;
  
  .letter-header{
    border-bottom: 1px solid colors.$brand-primary;
    margin-bottom: 20px;
  }
}

.year-links{
  @extend .letter-links;
  .nav-pills{
    display: inline-block;
    
    & > li > a{
      color: white;
      background-color: colors.$brand-secondary;
      padding: 3px 8px;
      margin: 0 4px;
      
      &:focus, &:hover{
        background-color: colors.$brand-primary;
      }
    }
    & > li.active > a {
        background-color: colors.$brand-primary;
    }
  }
}

.song-listing{
  display: block;
  padding-bottom: 10px;
  border-bottom: 1px solid colors.$brand-primary;
  margin-top: 20px;
  audio{
    margin-top: 20px;
  }
}
  
audio{
  width: 100%;
  &::-webkit-media-controls-volume-slider,
  &::-webkit-media-controls-timeline{
    -webkit-filter: hue-rotate(colors.$hue-rotate)
                    saturate(colors.$hue-saturate)
                    brightness(colors.$hue-lightness*1.372);
    filter: hue-rotate(colors.$hue-rotate)
            saturate(colors.$hue-saturate)
            brightness(colors.$hue-lightness*1.372);
  }
}

.performance-block{
  padding: 10px 0 20px;
  border:{
    top: 1px solid colors.$brand-secondary;
    bottom: 1px solid colors.$brand-secondary;
  }
}
/*******************************************************************************
* File: app/assets/stylesheets/partials/_news.scss
* Size: 163 bytes
*******************************************************************************/

/* News */

.news-block{
  margin-top: 10px;
  border-top: 1px solid transparent;
}

.sort-group{
  margin-bottom: 30px;
}

.article-content{
  margin-top: 20px;
}
/*******************************************************************************
* File: app/assets/stylesheets/partials/_profiles.scss
* Size: 712 bytes
*******************************************************************************/

@use '../modules/colors' as colors;
@use '../modules/media' as media;


/* Profiles */

.profile-block{
  
  padding-bottom: 10px;
  border-bottom: 1px solid colors.$brand-primary;
  margin-bottom: 30px;
  
  h2{
    @media #{media.$xs-screen} {
      text-align: center;
      small{
        display: block;
        margin-top: 10px;
      }
    }
  }
  
  img{
    border: 1px solid colors.$brand-secondary;
    height: auto;
    max-width: 300px;
    margin: {
      top: 10px;
      bottom: 20px;
      right: 10px;
    }
    @media #{media.$xs-screen} {max-width: 100%;}
    
    @media #{media.$sm-screen-up} {float: left;}
  }
  p:first-of-type{
    @media #{media.$sm-screen-up} {margin-top: 20px;}
  }
}
/*******************************************************************************
* File: app/assets/stylesheets/partials/_rehearsals.scss
* Size: 625 bytes
*******************************************************************************/

@use '../modules/colors' as colors;
@use '../modules/media' as media;

/* Rehearsals */

.rehearsal-block{
  padding: 20px 0;
  border-bottom: 1px solid colors.$brand-secondary;
  table{
    width: 100%;
    margin-bottom: 20px;
  }
  
  .btn{
    @media #{media.$xs-screen} {float: right;}
    @media #{media.$sm-screen-up} {margin: auto; display: table;}
  }
  
  &.download-block{
    @media #{media.$sm-screen-up} {
      border: 1px solid colors.$brand-secondary;
      padding: 20px;
      margin-bottom: 30px;
    }
  }
}

.pagination {
  display: table;
  padding-left: 0;
  margin: 20px auto;
  border-radius: 4px;
}
/*******************************************************************************
* File: app/assets/stylesheets/partials/_title.scss
* Size: 813 bytes
*******************************************************************************/

@use '../modules/colors' as colors;
@use '../modules/media' as media;

/* Title */

.title_holder{
  background-color: colors.$brand-secondary;
  width: 100%;
  
  @media #{ media.$xs-screen } { height: 140px; }
  @media #{ media.$sm-screen } { height: 220px; }
  @media #{ media.$md-screen } { height: 280px; }
  @media #{ media.$lg-screen } { height: 320px; }
  
  .title_image{
    height: 100%;
    background: {
      size: cover;
      position: center center;
    }
    
    .title_overlay {
      background-color: rgba(0, 0, 0, 0.5); //50% Transparent Black
      display: table;
      height: 100%;
      width: 100%;
      
      h1{
        color: white;
        display: table-cell;
        text-align: center;
        text-transform: uppercase;
        vertical-align: middle;
      }
    }
  }
  
}
/*******************************************************************************
* File: app/assets/stylesheets/partials/_typography.scss
* Size: 952 bytes
*******************************************************************************/

@use '../modules/colors' as colors;
@use '../modules/media' as media;

@import url('https://fonts.googleapis.com/css?family=Open+Sans:400,600');
@import url('https://fonts.googleapis.com/css?family=Tangerine:400,700');

html, body{
  font:{
    family: "Open Sans", sans-serif;
    size: 14px;
  }
  color: colors.$brand-secondary;
}

h1{
  font-weight: 600;
  
  @media #{media.$xs-screen} {font-size: 36px;}
  @media #{media.$sm-screen} {font-size: 48px;}
  @media #{media.$md-screen} {font-size: 64px;}
  @media #{media.$lg-screen} {font-size: 75px;}
}

h2{
  margin: { 
    top: 5px; 
    bottom: 5px;
  }
  font-size: 24px;
}


h3{
  margin: 0;
  font-size: 20px;
}

a{
  color: colors.$brand-primary;

  &:hover{
    color: lighten(colors.$brand-primary, 10);
    text-decoration: none;
  }

  &.secondary{
    color: colors.$brand-secondary;

    &:hover{
      color: colors.$brand-primary;
    }
  }
}

.date{
  color: colors.$brand-primary;
}
/*******************************************************************************
* File: app/channels/application_cable/channel.rb
* Size: 110 bytes
*******************************************************************************/

# frozen_string_literal: true

module ApplicationCable
  class Channel < ActionCable::Channel::Base
  end
end

/*******************************************************************************
* File: app/channels/application_cable/connection.rb
* Size: 116 bytes
*******************************************************************************/

# frozen_string_literal: true

module ApplicationCable
  class Connection < ActionCable::Connection::Base
  end
end

/*******************************************************************************
* File: app/channels/message_channel.rb
* Size: 257 bytes
*******************************************************************************/

# frozen_string_literal: true

# Channel for handling updating the unread message counter.
class MessageChannel < ApplicationCable::Channel
  def subscribed
    stream_from 'message_channel'
  end

  def unsubscribed
    # Clean up events go here
  end
end

/*******************************************************************************
* File: app/controllers/admin/articles_controller.rb
* Size: 1394 bytes
*******************************************************************************/

# frozen_string_literal: true

module Admin
  # Controller for managing articles in the admin section.
  class ArticlesController < AdminController
    before_action :find_article, only: %i[edit update destroy]

    datatable_model Article

    def index
      respond_with_datatable
    end

    def new
      @article = Article.new
    end

    def edit; end

    def create
      @article = Article.new(article_params)
      @article.published = %w[Publish Update].include? params[:commit]
      if @article.save
        flash[:success] = t '.success'
        redirect_to edit_admin_article_path(@article)
      else
        render 'new'
      end
    end

    def update
      @article.published = %w[Publish Update].include? params[:commit]
      if @article.update(article_params)
        flash[:success] = t '.success'
        redirect_to edit_admin_article_path(@article)
      else
        render 'edit'
      end
    end

    def destroy
      @article.destroy
      redirect_to admin_articles_path
    end

    private

    def article_params
      params.require(:article).permit(:title,
                                      :content,
                                      :user_id,
                                      category_ids: [],
                                      tag_ids: [])
    end

    def find_article
      @article = Article.find(params[:id])
    end
  end
end

/*******************************************************************************
* File: app/controllers/admin/categories_controller.rb
* Size: 1234 bytes
*******************************************************************************/

# frozen_string_literal: true

module Admin
  # Controller for managing categories in the admin section.
  class CategoriesController < AdminController
    before_action :find_all_categories
    before_action :find_new_category, except: [:create]
    before_action :find_category, only: %i[update destroy]

    datatable_model Category

    def index
      respond_with_datatable
    end

    def create
      @new_category = Category.new(category_params)
      if @new_category.save
        flash[:success] = t '.success'
        redirect_to admin_categories_path
      else
        render 'index'
      end
    end

    def update
      if @category.update(category_params)
        flash[:success] = t '.success'
      else
        flash[:danger] = t '.error'
      end
      redirect_to admin_categories_path
    end

    def destroy
      @category.destroy
      redirect_to admin_categories_path
    end

    private

    def category_params
      params.require(:category).permit(:name, :slug)
    end

    def find_category
      @category = Category.find(params[:id])
    end

    def find_new_category
      @new_category = Category.new
    end

    def find_all_categories
      @categories = Category.all
    end
  end
end

/*******************************************************************************
* File: app/controllers/admin/members_controller.rb
* Size: 1211 bytes
*******************************************************************************/

# frozen_string_literal: true

module Admin
  # Controller for managing members in the admin section.
  class MembersController < AdminController
    before_action :find_member, only: %i[edit update destroy]

    datatable_model Member

    def index
      respond_with_datatable
    end

    def new
      @member = Member.new(vocal_range: [])
    end

    def edit; end

    def create
      @member = Member.new(member_params)
      if @member.save
        flash[:success] = t '.success'
        redirect_to admin_members_path
      else
        render 'new'
      end
    end

    def update
      if @member.update(member_params)
        flash[:success] = t '.success'
        redirect_to admin_members_path
      else
        render 'edit'
      end
    end

    def destroy
      @member.destroy
      redirect_to admin_members_path
    end

    private

    def member_params
      params.require(:member).permit(:name,
                                     :email,
                                     :phone,
                                     :talents,
                                     { vocal_range: [] })
    end

    def find_member
      @member = Member.find(params[:id])
    end
  end
end

/*******************************************************************************
* File: app/controllers/admin/messages_controller.rb
* Size: 1038 bytes
*******************************************************************************/

# frozen_string_literal: true

module Admin
  # Controller for managing messages in the admin section.
  class MessagesController < AdminController
    datatable_model Message

    MARK_AS_READ = 'Mark As Read'
    MARK_AS_UNREAD = 'Mark As Unread'
    DELETE_MESSAGES = 'Delete Messages'
    VALID_ACTIONS = [MARK_AS_READ, MARK_AS_UNREAD, DELETE_MESSAGES].freeze

    def index
      respond_with_datatable
    end

    def show
      @message = Message.find(params[:id])
      @message.mark_as_read
    end

    def do_to_all
      message_params = params.require(:all_messages).permit(msgs: [])
      @messages = Message.where(id: message_params[:msgs])
      action = params[:commit].to_s
      return head :bad_request unless VALID_ACTIONS.include?(action)

      action == DELETE_MESSAGES ? @messages.destroy_all : update_read_status(@messages, action)
      head :ok
    end

    private

    def update_read_status(messages, action)
      messages.each { |message| message.update(read: action == MARK_AS_READ) }
    end
  end
end

/*******************************************************************************
* File: app/controllers/admin/performances_controller.rb
* Size: 1344 bytes
*******************************************************************************/

# frozen_string_literal: true

module Admin
  # Controller for managing performances in the admin section.
  class PerformancesController < AdminController
    before_action :set_performance, only: %i[edit update destroy]

    datatable_model Performance

    def index
      respond_with_datatable
    end

    def new
      @performance = Performance.new
    end

    def edit; end

    def create
      @performance = Performance.new(**performance_params)
      if @performance.save
        flash[:success] = t '.success'
        redirect_to admin_performances_path
      else
        render 'new'
      end
    end

    def update
      if @performance.update(**performance_params)
        flash[:success] = t '.success'
        redirect_to admin_performances_path
      else
        render 'edit'
      end
    end

    def destroy
      @performance.destroy
      redirect_to admin_performances_path
    end

    private

    def performance_params
      processed_params = params.require(:performance).permit(:venue, :details, :audio, song_ids: [])

      if params[:performance][:date].present?
        processed_params[:date] = Time.zone.strptime(params[:performance][:date], '%m/%d/%Y').end_of_day
      end

      processed_params
    end

    def set_performance
      @performance = Performance.find(params[:id])
    end
  end
end

/*******************************************************************************
* File: app/controllers/admin/profiles_controller.rb
* Size: 1763 bytes
*******************************************************************************/

# frozen_string_literal: true

module Admin
  # Controller for managing profiles in the admin section.
  class ProfilesController < AdminController
    before_action :find_profile, only: %i[edit update destroy]

    # GET /admin/profiles
    def index
      @profiles = Profile.all
    end

    # GET /admin/profiles/new
    def new
      @profile = Profile.new
    end

    # GET /admin/profiles/[:id]/edit
    def edit; end

    # POST /admin/profiles
    def create
      @profile = Profile.new(profile_params)
      if @profile.save
        flash[:success] = t '.success'
        redirect_to admin_profiles_path
      else
        render 'new'
      end
    end

    # PATCH/PUT /admin/profiles/[:id]
    def update
      if @profile.update(profile_params)
        flash[:success] = t '.success'
        redirect_to admin_profiles_path
      else
        render 'edit'
      end
    end

    # DELETE /admin/profiles/[:id]
    def destroy
      @profile.destroy
      redirect_to admin_profiles_path
    end

    # POST /admin/profiles/sort
    def sort
      # Collect the ids of each profile
      profile_ids = params[:order].pluck(:id)

      # Retrieve all profiles in a single query
      profiles = Profile.where(id: profile_ids).index_by(&:id)

      # Update each profile's position
      params[:order].each_value do |value|
        profile = profiles[value[:id].to_i]
        profile&.update(:position, value[:position])
      end
    end

    private

    def find_profile
      @profile = Profile.find(params[:id])
    end

    def profile_params
      params.require(:profile).permit(:name,
                                      :title,
                                      :bio,
                                      :image)
    end
  end
end

/*******************************************************************************
* File: app/controllers/admin/rehearsals_controller.rb
* Size: 1312 bytes
*******************************************************************************/

# frozen_string_literal: true

module Admin
  # Controller for managing rehearsals in the admin section.
  class RehearsalsController < AdminController
    datatable_model Rehearsal
    before_action :find_rehearsal, only: %i[edit update destroy]

    def index
      respond_with_datatable
    end

    def new
      @rehearsal = Rehearsal.new
    end

    def edit; end

    def create
      @rehearsal = Rehearsal.new(rehearsal_params)
      if @rehearsal.save
        flash[:success] = t '.success'
        redirect_to admin_rehearsals_path
      else
        render 'new'
      end
    end

    def update
      if @rehearsal.update(rehearsal_params)
        flash[:success] = t '.success'
        redirect_to admin_rehearsals_path
      else
        render 'edit'
      end
    end

    def destroy
      @rehearsal.destroy
      redirect_to admin_rehearsals_path
    end

    private

    def rehearsal_params
      params.require(:rehearsal).permit(:host,
                                        :venue,
                                        :date_holder,
                                        :time,
                                        :audio,
                                        song_ids: [])
    end

    def find_rehearsal
      @rehearsal = Rehearsal.find(params[:id])
    end
  end
end

/*******************************************************************************
* File: app/controllers/admin/songs_controller.rb
* Size: 1619 bytes
*******************************************************************************/

# frozen_string_literal: true

module Admin
  # Controller for managing songs in the admin section.
  class SongsController < AdminController
    datatable_model Song
    before_action :set_song, only: %i[edit update destroy]

    def index
      respond_with_datatable
    end

    def new
      @song = Song.new
    end

    def edit; end

    def create
      @song = Song.new(song_params)
      if @song.save
        flash[:success] = t '.success'
        redirect_to edit_admin_song_path(@song)
      else
        flash[:danger] = t '.error'
        render 'new'
      end
    end

    def update
      if @song.update(song_params)
        flash[:success] = t '.success'
        redirect_to edit_admin_song_path(@song)
      else
        flash[:danger] = t '.error'
        render 'edit'
      end
    end

    def destroy
      @song.destroy
      redirect_to admin_songs_path
    end

    private

    def set_song
      @song = Song.find(params[:id])
    end

    def song_params
      params.require(:song).permit(:title,
                                   :description,
                                   :lilypond,
                                   instruments_attributes: %i[id
                                                              name
                                                              position
                                                              midi
                                                              mp3
                                                              pdf
                                                              _destroy])
    end
  end
end

/*******************************************************************************
* File: app/controllers/admin/tags_controller.rb
* Size: 1090 bytes
*******************************************************************************/

# frozen_string_literal: true

module Admin
  # Controller for managing tags in the admin section.
  class TagsController < AdminController
    datatable_model Tag
    before_action :find_all_tags
    before_action :find_new_tag, except: [:create]
    before_action :find_tag, only: %i[update destroy]

    def index
      respond_with_datatable
    end

    def create
      @new_tag = Tag.new(tag_params)
      if @new_tag.save
        flash[:success] = t '.success'
        redirect_to admin_tags_path
      else
        render 'index'
      end
    end

    def update
      if @tag.update(tag_params)
        flash[:success] = t '.success'
      else
        flash[:danger] = t '.error'
      end
      redirect_to admin_tags_path
    end

    def destroy
      @tag.destroy
      redirect_to admin_tags_path
    end

    private

    def tag_params
      params.require(:tag).permit(:name, :slug)
    end

    def find_tag
      @tag = Tag.find(params[:id])
    end

    def find_new_tag
      @new_tag = Tag.new
    end

    def find_all_tags
      @tags = Tag.all
    end
  end
end

/*******************************************************************************
* File: app/controllers/admin_controller.rb
* Size: 398 bytes
*******************************************************************************/

# frozen_string_literal: true

# Controller for managing admin.
class AdminController < ApplicationController
  include AdminDatatableConcern

  layout 'admin'
  before_action :authenticate_user!

  def index
    @articles     = Article.first(3)
    @performances = Performance.all_upcoming
    @rehearsals   = Rehearsal.last(5)
    @songs        = Song.order(created_at: :desc).first(5)
  end
end

/*******************************************************************************
* File: app/controllers/application_controller.rb
* Size: 261 bytes
*******************************************************************************/

# frozen_string_literal: true

# Controller for managing the overall application.
class ApplicationController < ActionController::Base
  protect_from_forgery with: :exception
  # before_action do
  #   ActiveStorage::Current.host = request.base_url
  # end
end

/*******************************************************************************
* File: app/controllers/articles_controller.rb
* Size: 473 bytes
*******************************************************************************/

# frozen_string_literal: true

# Controller for managing articles.
class ArticlesController < ApplicationController
  add_breadcrumb 'Home', :root_path
  add_breadcrumb 'News', :news_index_path

  def index
    @articles = Article.published
                       .filtered(params)
                       .paginate(page: params[:page], per_page: 8)
  end

  def show
    @article = Article.find(params[:id])
    add_breadcrumb @article.title, news_path(@article)
  end
end

/*******************************************************************************
* File: app/controllers/concerns/admin_datatable_concern.rb
* Size: 544 bytes
*******************************************************************************/

# frozen_string_literal: true

# Concern for running Datatable rendering in controllers.
module AdminDatatableConcern
  extend ActiveSupport::Concern

  class_methods do
    def datatable_model(model_class)
      define_method(:datatable_model) { model_class }
    end
  end

  def respond_with_datatable
    respond_to do |format|
      format.html
      format.json do
        render json: BaseDatatable.new(
          params,
          model_class: datatable_model,
          view_context: view_context
        )
      end
    end
  end
end

/*******************************************************************************
* File: app/controllers/messages_controller.rb
* Size: 691 bytes
*******************************************************************************/

# frozen_string_literal: true

# Controller for managing messages.
class MessagesController < ApplicationController
  invisible_captcha only: [:create], honeypot: :choir_part

  add_breadcrumb 'Home', :root_path
  add_breadcrumb 'Contact', :contact_path

  def new
    @message = Message.new
  end

  def create
    @message = Message.new(message_params)
    if @message.save
      @message.send_email
      flash[:success] = t '.success'
      redirect_to contact_path
    else
      render 'new'
    end
  end

  private

  def message_params
    params.require(:message)
          .permit(:name,
                  :email,
                  :subject,
                  :message)
  end
end

/*******************************************************************************
* File: app/controllers/rehearsals_controller.rb
* Size: 381 bytes
*******************************************************************************/

# frozen_string_literal: true

# Controller for managing rehearsals.
class RehearsalsController < ApplicationController
  add_breadcrumb 'Home', :root_path
  add_breadcrumb 'Rehearsals', :rehearsals_path

  def index
    @rehearsals = Rehearsal.includes(:songs)
                           .all_past
                           .paginate(page: params[:page], per_page: 12)
  end
end

/*******************************************************************************
* File: app/controllers/songs_controller.rb
* Size: 1242 bytes
*******************************************************************************/

# frozen_string_literal: true

# Controller for managing songs.
class SongsController < ApplicationController
  add_breadcrumb 'Home', :root_path
  add_breadcrumb 'Music', :music_index_path

  def index
    load_songs
    load_songs_pending
    load_songs_history
    load_songs_unused
  end

  def show
    @song = Song.includes(:instruments,
                          :rehearsals,
                          :performances)
                .find_by(slug: params[:slug])
    add_breadcrumb @song.title, music_path(@song.slug)
  end

  private

  def load_songs
    songs = Song.includes(:performances).all
    @songs_by_title = group_songs_by_title(songs)
  end

  def group_songs_by_title(songs)
    songs.sort_by(&:sort_order)
         .group_by { |s| s.sort_order.chr }
  end

  def load_songs_pending
    @songs_pending = group_performances_by_month(Performance.all_upcoming)
  end

  def load_songs_history
    @song_history = group_performances_by_month(Performance.all_history)
  end

  def group_performances_by_month(performances)
    performances.group_by { |per| per.date.beginning_of_month }
                .group_by { |m| m[0].year }
  end

  def load_songs_unused
    @songs_unused = group_songs_by_title(Song.unused)
  end
end

/*******************************************************************************
* File: app/controllers/static_pages_controller.rb
* Size: 318 bytes
*******************************************************************************/

# frozen_string_literal: true

# Controller for managing static pages
class StaticPagesController < ApplicationController
  def home
    @performances   = Performance.find_next 2
    @last_rehearsal = Rehearsal.find_most_recent
    @next_rehearsal = Rehearsal.find_next
    @articles       = Article.first 3
  end
end

/*******************************************************************************
* File: app/controllers/users/sessions_controller.rb
* Size: 650 bytes
*******************************************************************************/

# frozen_string_literal: true

module Users
  # Controller for managing sessions.
  class SessionsController < Devise::SessionsController
    layout 'admin'
    # before_action :configure_sign_in_params, only: [:create]

    # GET /resource/sign_in
    # def new
    #   super
    # end

    # POST /resource/sign_in
    # def create
    #   super
    # end

    # DELETE /resource/sign_out
    # def destroy
    #   super
    # end

    # protected

    # If you have extra params to permit, append them to the sanitizer.
    # def configure_sign_in_params
    #   devise_parameter_sanitizer.permit(:sign_in, keys: [:attribute])
    # end
  end
end

/*******************************************************************************
* File: app/datatables/base_datatable.rb
* Size: 1878 bytes
*******************************************************************************/

# frozen_string_literal: true

# Handles the server-side processing for Article datatables
# Implements sorting, searching, and pagination of Article records
# @see https://github.com/jbox-web/ajax-datatables-rails
class BaseDatatable < AjaxDatatablesRails::ActiveRecord
  extend Forwardable

  def_delegators :@view, :render, :link_to, :concat, :content_tag
  attr_reader :model_class, :view

  def initialize(params, opts = {})
    @model_class = opts.delete(:model_class)

    if @model_class.nil?
      model_name = opts.delete(:model_name)
      @model_class = model_name.to_s.classify.constantize if model_name
    end
    @view = opts[:view_context]
    super
  end

  def view_columns
    @view_columns ||= model_class&.visible_datatable_columns&.transform_values do |config|
      {
        source: config[:source],
        searchable: config[:searchable],
        sortable: config[:sortable],
        orderable: config[:orderable]
      }.compact
    end
  end

  def data
    records.map do |record|
      column_data = format_columns(record)
      row_data = format_row_attributes(record)
      column_data.merge(
        DT_RowData: record.id,
        row_attributes: row_data
      )
    end
  end

  # Retrieve the base ActiveRecord scope for the datatable
  # @return [ActiveRecord::Relation] Base query with necessary includes
  def get_raw_records
    model_class&.for_datatable
  end

  private

  def format_columns(record)
    model_class&.datatable_columns&.transform_values { |config| config[:formatter].call(record) }
  end

  def format_row_attributes(record)
    attrs = model_class&.row_attributes_for(record)
    return {} unless attrs

    stringify_attributes(attrs).compact.to_json
  end

  def stringify_attributes(hash)
    hash.transform_keys(&:to_s).transform_values do |v|
      v.is_a?(Hash) ? v.transform_keys(&:to_s) : v
    end
  end
end

/*******************************************************************************
* File: app/datatables/category_datatable.rb
* Size: 2318 bytes
*******************************************************************************/

# frozen_string_literal: true

# CategoryDatatable handles server-side processing for Category data tables
#
# @example Basic usage in controller
#   def index
#     respond_to do |format|
#       format.json { render json: CategoryDatatable.new(params, view_context: view_context) }
#     end
#   end
#
# @see https://github.com/jbox-web/ajax-datatables-rails
class CategoryDatatable < AjaxDatatablesRails::ActiveRecord
  extend Forwardable

  def_delegators :@view, :polymorphic_path, :sanitize

  # Defines the columns and their properties for the datatable
  # @return [Hash] Column definitions with source, sortability and searchability
  def view_columns
    @view_columns ||= {
      name: { source: 'Category.name' },
      slug: { source: 'Category.slug' },
      articles_count: { source: 'Category.articles_count' },
      controls: { source: nil,
                  sortable: false,
                  searchable: false,
                  orderable: false }
    }
  end

  # Formats the data for each row in the datatable
  # @return [Array<Hash>] Array of formatted row data
  def data
    records.map do |record|
      {
        name: record.name,
        slug: record.slug,
        articles_count: record.articles_count,
        controls: controls(record),
        DT_RowId: record.id
      }
    end
  end

  # Defines the base query for fetching records
  # @return [ActiveRecord::Relation] Base query for categories
  def get_raw_records
    Category.all
  end

  private

  # Renders the control buttons for a category row
  # @param record [Category] The category record
  # @return [String] Sanitized HTML for edit modal button and delete link
  def controls(record)
    sanitize(
      <<-HTML,
         <button type="button" data-toggle="modal" data-target="#category-#{record.id}" class="btn btn-default btn-xs">
           <span class="glyphicon glyphicon-pencil"></span>
         </button>
         &nbsp;
         <a href="#{polymorphic_path([:admin, record])}" class="btn btn-danger btn-xs" data-method="delete"
            data-confirm="Are you sure?" rel="nofollow">
           <span class="glyphicon glyphicon-remove"></span>
         </a>
      HTML
      tags: %w[a button span],
      attributes: %w[class data-confirm data-method data-target data-toggle href rel type]
    )
  end
end

/*******************************************************************************
* File: app/helpers/application_helper.rb
* Size: 105 bytes
*******************************************************************************/

# frozen_string_literal: true

# Module for helpers across the application.
module ApplicationHelper
end

/*******************************************************************************
* File: app/helpers/datatable_helper.rb
* Size: 1494 bytes
*******************************************************************************/

# frozen_string_literal: true

# Helper for rendering custom DataTable cells
module DatatableHelper
  include Rails.application.routes.url_helpers
  include ActionView::Helpers::TagHelper
  include ActionView::Helpers::SanitizeHelper

  def datatable_table_for(model_class)
    content_tag :table,
                class: 'table table-hover',
                id: "#{model_class.name.downcase.pluralize}-datatable",
                data: { columns: model_class.javascript_column_config.to_json,
                        source: url_for([:admin, model_class, { format: :json }]),
                        order: model_class.initial_sort_order,
                        buttons: model_class.javascript_buttons_config.to_json } do
      safe_join(
        [
          content_tag(:thead) do
            content_tag(:tr) do
              sanitize datatable_headers_for(model_class),
                       tags: ['th'],
                       attributes: ['class']
            end
          end,
          content_tag(:tbody, '')
        ]
      ) # end safe_join
    end
  end

  def datatable_headers_for(model_class)
    output = model_class.visible_datatable_columns.values.map do |col|
      content_tag(:th, col[:label], class: col[:className].presence)
    end
    safe_join output
  end

  def controls_html(record)
    renderer ||= ApplicationController.renderer
    renderer.render(
      partial: 'admin/shared/controls',
      locals: { record: record },
      format: :html
    )
  end
end

/*******************************************************************************
* File: app/javascript/cable.js
* Size: 111 bytes
*******************************************************************************/

// app/javascript/cable.js
import { createConsumer } from "@rails/actioncable"

export default createConsumer()
/*******************************************************************************
* File: app/javascript/channels/message_channel.js
* Size: 681 bytes
*******************************************************************************/

import consumer from '../cable'

consumer.subscriptions.create("MessageChannel", {
  connected() {
    console.log("Connected to MessageChannel");
  },

  disconnected() {
  },

  received(data) {
    this.updateUnreadBadge(data.unread_count)

    const tableId = '#messages-datatable';
    const table = $(tableId);
    if (table.length > 0 && $.fn.DataTable.isDataTable(tableId)) {
      const dt = table.DataTable();
      dt.ajax.reload(null, false);
    }
  },

  updateUnreadBadge(count) {
    const badge = document.querySelector("#unread-messages-badge");
    if (badge) {
      badge.textContent = count;
      badge.classList.toggle('d-none', count === 0);
    }
  }
});

/*******************************************************************************
* File: app/javascript/datatables.js
* Size: 7901 bytes
*******************************************************************************/

// =====================================================
// 1. REQUIRED DEPENDENCIES
// =====================================================

// Import jQuery and DataTables
import $ from 'jquery';
import 'datatables.net';
import 'datatables.net-bs4';
import 'datatables.net-select';
import 'datatables.net-buttons';
import 'datatables.net-buttons-bs4';
import 'datatables.net-buttons/js/buttons.html5.js';

// =====================================================
// 2. UTILITY FUNCTIONS
// =====================================================
// Parse row attributes from server response
const parseRowAttributes = (data) => {
  if (!data.row_attributes) return null;
  return JSON.parse(data.row_attributes.replace(/&quot;/g, '"'));
}

// Apply attributes recursively to an element
const applyAttributes = (element, attributes) => {
  if (!attributes || typeof attributes !== 'object') return;

  Object.entries(attributes).forEach(([key, value]) => {
    // Skip null/undefined values
    if (value == null) return;

    // Handle special case for 'class' attribute
    if (key === 'class') {
      element.addClass(value);
      return;
    }

    // Recursively handle nested objects
    if (typeof value === 'object' && !Array.isArray(value)) {
      // Handle special namespaces
      switch(key) {
        case 'data':
          applyAttributes(element, Object.fromEntries(
              Object.entries(value).map(([k, v]) => [`data-${k}`, v])
          ));
          break;
        case 'aria':
          applyAttributes(element, Object.fromEntries(
              Object.entries(value).map(([k, v]) => [`aria-${k}`, v])
          ));
          break;
        default:
          // For other nested objects, use as namespace
          const namespace = `${key}-`;
          applyAttributes(element, Object.fromEntries(
              Object.entries(value).map(([k, v]) => [`${namespace}${k}`, v])
          ));
      }
      return;
    }

    // Handle attribute naming
    let attrKey = key;
    if (!key.startsWith('aria-') && !key.startsWith('data-')) {
      attrKey = `data-${key}`;
    }

    // Set attribute
    element.attr(attrKey, value);

    // Set jQuery data for data attributes
    if (key === 'data' || attrKey.startsWith('data-')) {
      const dataKey = key === 'data' ? value : key.replace('data-', '');
      element.data(dataKey, value);
    }
  });
};

// =====================================================
// 3. GLOBAL DATATABLE DEFAULTS
// =====================================================
$.extend( $.fn.dataTable.defaults, {
  dom: 'Bfrtlip',
  pagingType: 'full_numbers',
  processing: true,
  responsive: true
});

// =====================================================
// 4. INITIALIZATION FUNCTIONS
// =====================================================
// Initialize Datatables
export const initializeDataTables = () => {
  $('table[data-source]').each((_, element) => {
    const $table = $(element);

    $table.DataTable({
      ajax: {
        url: $table.data('source')
      },
      buttons: $table.data('buttons'),
      serverSide: true,
      columns: $table.data('columns'),
      order: $table.data('order'),
      select: {
        style: 'multi',
        selector: 'td.select-checkbox'
      },
      createdRow: (row, data, _dataIndex) => {
        const attrs = parseRowAttributes(data);
        if (attrs) {
          applyAttributes($(row), attrs);
        }
      }
    });
  });

  // Handle client-side tables
  $("table[id^=dttb-]").not('.dataTable').each((_, element) => {
    $(element).DataTable();
  });
};

// =====================================================
// 5. EVENT HANDLERS
// =====================================================
// Handle AJAX URL from data-source attribute
$(document).on('preInit.dt', function(e, settings) {
  const api = new $.fn.dataTable.Api(settings);
  const tableId = `#${api.table().node().id}`;
  const url = $(tableId).data('source');

  if (url) {
    return api.ajax.url(url);
  }
});

// Handle clickable rows
$(document).on('click', 'tr.clickable-row td:not(.select-checkbox)', function(e) {
  const href = $(this).parent().data('href');
  if (href) {
    window.location = href;
  }
});

// =====================================================
// 7. CUSTOM BUTTON EXTENSIONS
// =====================================================
$.fn.dataTable.ext.buttons.deleteMessages = {
  text: 'Delete',
  className: 'btn btn-sm btn-danger',
  action: function(e, dt, node, config) {
    var rows = dt.rows({ selected: true });
    if (rows.count() === 0) {
      alert("Please select at least one message");
      return;
    }

    if (!confirm("Are you sure you want to delete the selected messages?")) {
      return;
    }

    var ids = rows.data().map(function(row) {
      return row.DT_RowId;
    }).toArray();

    $.ajax({
      url: "/admin/messages/do_to_all",
      method: "POST",
      data: {
        all_messages: {
          msgs: ids,
        },
        commit: "Delete Messages",
        authenticity_token: $('meta[name="csrf-token"]').attr('content')
      },
      success: function() {
        dt.ajax.reload();
      },
      error: function(xhr, status, error) {
        alert("Error deleting messages: " + error);
      }
    });
  }
};

$.fn.dataTable.ext.buttons.markAsRead = {
  text: 'Mark as Read',
  className: 'btn btn-sm btn-primary',
  action: function(e, dt, node, config) {
    var rows = dt.rows({ selected: true });
    if (rows.count() === 0) {
      alert("Please select at least one message");
      return;
    }

    var ids = rows.data().map(function(row) {
      return row.DT_RowId;
    }).toArray();

    $.ajax({
      url: "/admin/messages/do_to_all",
      method: "POST",
      data: {
        all_messages: {
          msgs: ids,
        },
        commit: "Mark as Read",
        authenticity_token: $('meta[name="csrf-token"]').attr('content')
      },
      success: function() {
        dt.rows().deselect();
        dt.ajax.reload();
      },
      error: function(xhr, status, error) {
        alert("Error updating messages: " + error);
      }
    });
  }
};

$.fn.dataTable.ext.buttons.markAsUnread = {
  text: 'Mark as Unread',
  className: 'btn btn-sm btn-info',
  action: function(e, dt, node, config) {
    var rows = dt.rows({ selected: true });
    if (rows.count() === 0) {
      alert("Please select at least one message");
      return;
    }

    var ids = rows.data().map(function(row) {
      return row.DT_RowId;
    }).toArray();

    $.ajax({
      url: "/admin/messages/do_to_all",
      method: "POST",
      data: {
        all_messages: {
          msgs: ids,
        },
        commit: "Mark as Unread",
        authenticity_token: $('meta[name="csrf-token"]').attr('content')
      },
      success: function() {
        dt.rows().deselect();
        dt.ajax.reload();
      },
      error: function(xhr, status, error) {
        alert("Error updating messages: " + error);
      }
    });
  }
};

$.fn.dataTable.ext.buttons.selectAll = {
  text: '<span class="glyphicon glyphicon-check"></span>',
  titleAttr: "Select All",
  className: 'btn btn-sm btn-outline-secondary',
  action: function ( e, dt, node, config ) {
    dt.rows().select();
  }
};

$.fn.dataTable.ext.buttons.selectNone = {
  text: 'Select None',
  className: 'btn btn-sm btn-outline-secondary',
  action: function ( e, dt, node, config ) {
    dt.rows().deselect();
  }
};

// Initialize on page load - replacing Turbolinks with Turbo
document.addEventListener('turbo:load', initializeDataTables);

// Clean up before caching
document.addEventListener('turbo:before-cache', function() {
  const tables = $($.fn.dataTable.tables(true)).DataTable();
  if (tables) {
    tables.clear();
    tables.destroy();
  }
});

// Create a global reference for external access if needed
window.initializeDataTables = initializeDataTables;
/*******************************************************************************
* File: app/javascript/packs/application.js
* Size: 848 bytes
*******************************************************************************/

/* eslint no-console:0 */
// This file is automatically compiled by Webpack, along with any other files
// present in this directory. You're encouraged to place your actual application logic in
// a relevant structure within app/javascript and only use these pack files to reference
// that code so it'll be compiled.
//
// To reference this file, add <%= javascript_pack_tag 'application' %> to the appropriate
// layout file, like app/views/layouts/application.html.erb


// Uncomment to copy all static images under ../images to the output folder and reference
// them with the image_pack_tag helper in views (e.g <%= image_pack_tag 'rails.png' %>)
// or the `imagePath` JavaScript helper below.
//
// const images = require.context('../images', true)
// const imagePath = (name) => images(name, true)

console.log('Hello World from Webpacker')

/*******************************************************************************
* File: app/jobs/application_job.rb
* Size: 74 bytes
*******************************************************************************/

# frozen_string_literal: true

class ApplicationJob < ActiveJob::Base
end

/*******************************************************************************
* File: app/mailers/application_mailer.rb
* Size: 207 bytes
*******************************************************************************/

# frozen_string_literal: true

# ApplicationMailer is the base class for all mailers in the application.
class ApplicationMailer < ActionMailer::Base
  default from: 'from@example.com'
  layout 'mailer'
end

/*******************************************************************************
* File: app/mailers/message_mailer.rb
* Size: 327 bytes
*******************************************************************************/

# frozen_string_literal: true

# MessageMailer handles the email functionality related to messages in the application.
class MessageMailer < ApplicationMailer
  def contact_form(message)
    @message = message
    mail to: 'whittakerlee81@gmail.com',
         subject: @message.subject,
         from: @message.email
  end
end

/*******************************************************************************
* File: app/models/ability.rb
* Size: 1185 bytes
*******************************************************************************/

# frozen_string_literal: true

# Class Ability
class Ability
  include CanCan::Ability

  def initialize(user)
    if user.persisted?
      can :manage, :all
    else
      can :read, :all
    end
    # Define abilities for the passed in user here. For example:
    #
    #   user ||= User.new # guest user (not logged in)
    #   if user.admin?
    #     can :manage, :all
    #   else
    #     can :read, :all
    #   end
    #
    # The first argument to `can` is the action you are giving the user
    # permission to do.
    # If you pass :manage it will apply to every action. Other common actions
    # here are :read, :create, :update and :destroy.
    #
    # The second argument is the resource the user can perform the action on.
    # If you pass :all it will apply to every resource. Otherwise pass a Ruby
    # class of the resource.
    #
    # The third argument is an optional hash of conditions to further filter the
    # objects.
    # For example, here the user can only update published articles.
    #
    #   can :update, Article, :published => true
    #
    # See the wiki for details:
    # https://github.com/ryanb/cancan/wiki/Defining-Abilities
  end
end

/*******************************************************************************
* File: app/models/application_record.rb
* Size: 242 bytes
*******************************************************************************/

# frozen_string_literal: true

# ApplicationRecord is the base class for all models in the application.
class ApplicationRecord < ActiveRecord::Base
  self.abstract_class = true

  VALID_EMAIL_REGEX = /\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i
end

/*******************************************************************************
* File: app/models/article.rb
* Size: 2309 bytes
*******************************************************************************/

# frozen_string_literal: true

# Model for Article
class Article < ApplicationRecord
  include DatatableColumnsConcern

  define_datatable_column :title
  define_datatable_column :date,
                          label: 'Date',
                          searchable: false,
                          formatter: ->(record) { record.created_at.strftime('%m/%d/%Y') }
  define_datatable_column :status,
                          searchable: false,
                          sortable: false
  define_datatable_column :categories,
                          source: 'Category.name',
                          searchable: false,
                          formatter: ->(record) { record.list_categories }
  define_datatable_column :tags,
                          source: 'Tag.name',
                          searchable: false,
                          formatter: ->(record) { record.list_tags }
  define_controls_column  formatter: ->(record) { helpers.controls_html(record) }

  scope :month, lambda { |date|
    where(created_at: date.all_month) if date.present?
  }
  scope :tag,      ->(slug) { joins(:tags).where(tags: { slug: slug }) if slug.present? }
  scope :category, ->(slug) { joins(:categories).where(categories: { slug: slug }) if slug.present? }

  belongs_to :author,
             inverse_of: :articles,
             class_name: 'User',
             foreign_key: 'user_id'
  delegate :name, to: :author, prefix: true

  has_many :article_categories, dependent: :destroy
  has_many :categories, through: :article_categories
  has_many :article_tags, dependent: :destroy
  has_many :tags, through: :article_tags

  with_options presence: true do
    validates :title,   length: { maximum: 120 }
    validates :content, length: { maximum: 5000 }
    validates :author
  end

  class << self
    def published
      where(published: true)
        .order(created_at: :desc)
    end

    def filtered(params)
      month(params[:month])
        .tag(params[:tags])
        .category(params[:category])
    end

    def for_datatable
      includes(:tags, :categories)
    end
  end

  def published?
    published
  end

  def status
    published ? 'Published' : 'Draft'
  end

  def list_categories
    categories.map(&:name).to_sentence
  end

  def list_tags
    tags.map(&:name).to_sentence
  end
end

/*******************************************************************************
* File: app/models/article_category.rb
* Size: 171 bytes
*******************************************************************************/

# frozen_string_literal: true

# Model for ArticleCategory
class ArticleCategory < ApplicationRecord
  belongs_to :article
  belongs_to :category, counter_cache: true
end

/*******************************************************************************
* File: app/models/article_tag.rb
* Size: 156 bytes
*******************************************************************************/

# frozen_string_literal: true

# Model for ArticleTag
class ArticleTag < ApplicationRecord
  belongs_to :article
  belongs_to :tag, counter_cache: true
end

/*******************************************************************************
* File: app/models/category.rb
* Size: 976 bytes
*******************************************************************************/

# frozen_string_literal: true

# Model for Category
class Category < ApplicationRecord
  include DatatableColumnsConcern

  define_datatable_column :name
  define_datatable_column :slug
  define_datatable_column :article_categories_count,
                          label: 'Uses'
  define_controls_column formatter: ->(record) { CategoryPresenter.new(record).controls }

  belongs_to :parent_category,
             class_name: 'Category',
             foreign_key: 'category_id',
             optional: true,
             inverse_of: :children_categories
  has_many :children_categories,
           class_name: 'Category',
           dependent: :destroy,
           inverse_of: :parent_category
  has_many :article_categories, dependent: :destroy
  has_many :articles, through: :article_categories

  with_options(presence: true,
               length: { maximum: 30 },
               uniqueness: { case_sensitive: false }) do
    validates :name
    validates :slug
  end
end

/*******************************************************************************
* File: app/models/concerns/datatable_columns_concern.rb
* Size: 3383 bytes
*******************************************************************************/

# frozen_string_literal: true

# Model concern for populating DataTable columns.
module DatatableColumnsConcern
  extend ActiveSupport::Concern

  BASE_COLUMN_DEFAULTS = {
    className: nil,
    label: nil,
    orderable: false,
    searchable: false,
    sortable: false,
    sortPriority: nil,
    sortOrder: nil,
    source: nil,
    visible: true,

    formatter: ->(_) { '' }
  }.freeze

  class_methods do
    def for_datatable
      all.unscoped
    end

    def helpers
      helper = ActionController::Base.helpers
      helper.extend(DatatableHelper)
      helper
    end

    def datatable_columns
      @datatable_columns ||= {}
    end

    def table_buttons
      @table_buttons ||= []
    end

    def define_table_buttons(buttons)
      @table_buttons = buttons.map { |b| b.to_s.camelize(:lower) }
    end

    def visible_datatable_columns
      datatable_columns.select { |_, v| v[:visible] }
    end

    def define_datatable_column(name, options = {})
      defaults = BASE_COLUMN_DEFAULTS.merge({
                                              source: "#{self.name}.#{name}",
                                              label: name.to_s.titleize,
                                              searchable: true,
                                              sortable: true,
                                              orderable: true,
                                              formatter: ->(record) { record.send(name) }
                                            })

      datatable_columns[name] = defaults.merge(options)
    end

    def initial_sort_order
      sort_columns = datatable_columns
                     .select { |_, v| v[:sortPriority].present? }
                     .sort_by { |_, v| v[:sortPriority] }
                     .map do |key, config|
        [
          datatable_columns.keys.index(key),
          config[:sortOrder] || 'asc'
        ]
      end

      sort_columns.presence || [[0, 'asc']]
    end

    def define_select_column(options = {})
      defaults = BASE_COLUMN_DEFAULTS.merge({
                                              label: '',
                                              className: 'select-checkbox '
                                            })

      datatable_columns[:select] = defaults.merge(options)
    end

    def define_controls_column(options = {})
      defaults = BASE_COLUMN_DEFAULTS.merge({
                                              label: 'Controls',
                                              className: 'text-right'
                                            })

      datatable_columns[:controls] = defaults.merge(options)
    end

    def define_row_attributes(options = {})
      @row_attributes = options.compact
    end

    def row_attributes_for(record)
      return {} unless @row_attributes

      @row_attributes.transform_values do |value|
        if value.is_a?(Proc)
          value.call(record)
        else
          value
        end
      end
    end

    def javascript_column_config
      visible_datatable_columns.map do |key, config|
        {
          data: key.to_s,
          searchable: config[:searchable] != false,
          orderable: config[:sortable] != false && config[:orderable] != false,
          className: config[:className]
        }.compact
      end
    end

    def javascript_buttons_config
      table_buttons
    end
  end
end

/*******************************************************************************
* File: app/models/instrument.rb
* Size: 1579 bytes
*******************************************************************************/

# frozen_string_literal: true

# Model for Instrument
class Instrument < ApplicationRecord
  default_scope { order(position: :asc) }
  belongs_to :song, counter_cache: true

  # paperclip_attachment_with_active_storage :pdf
  # paperclip_attachment_with_active_storage :midi
  # paperclip_attachment_with_active_storage :mp3

  has_one_attached :pdf
  has_one_attached :midi
  has_one_attached :mp3

  validates :name, presence: true,
                   length: { maximum: 60 },
                   uniqueness: { scope: :song, case_sensitive: false }

  validate :correct_mime_types

  def empty?
    pdf_blob.nil? && mp3_blob.nil? && midi_blob.nil?
  end

  def pdf_and_audio?
    !pdf_blob.nil? && (!mp3_blob.nil? || !midi_blob.nil?)
  end

  # def self.populate
  #   Song.find_each do |song|
  #     song.sheet_musics.each do |s|
  #       i = Instrument.new
  #       i.song = song
  #       i.name = s.instrument
  #       i.position = s.position
  #       i.pdf = s.pdf
  #       a = song.audios.find_by(:instrument => s.instrument)
  #       unless a.blank?
  #         i.mp3  = a.mp3  unless a.mp3.blank?
  #         i.midi = a.midi unless a.midi.blank?
  #       end
  #       i.save!
  #     end
  #   end
  # end

  private

  def correct_mime_types
    {
      pdf: %w[application/pdf],
      midi: %w[audio/midi],
      mp3: %w[audio/mpeg audio/mp3]
    }.each do |attr, content_types|
      obj = send(attr)
      next unless obj.attached? && content_types.exclude?(obj.content_type)

      errors.add(attr, "Must be an #{attr.to_s.upcase} file")
    end
  end
end

/*******************************************************************************
* File: app/models/member.rb
* Size: 983 bytes
*******************************************************************************/

# frozen_string_literal: true

# Model for Member
class Member < ApplicationRecord
  include DatatableColumnsConcern

  define_datatable_column :name
  define_datatable_column :email
  define_datatable_column :phone
  define_datatable_column :vocal_range,
                          formatter: ->(record) { MemberPresenter.new(record).vocal_range }
  define_datatable_column :talents,
                          label: 'Other Musical Talents'
  define_controls_column formatter: ->(record) { helpers.controls_html(record) }

  serialize :vocal_range

  with_options presence: true do
    validates :name, length: { maximum: 60 }
    validates :vocal_range
  end

  validates :email, length: { maximum: 255 },
                    format: { with: VALID_EMAIL_REGEX }

  def soprano?
    vocal_range&.include? 'Soprano'
  end

  def alto?
    vocal_range&.include? 'Alto'
  end

  def tenor?
    vocal_range&.include? 'Tenor'
  end

  def bass?
    vocal_range&.include? 'Bass'
  end
end

/*******************************************************************************
* File: app/models/message.rb
* Size: 2033 bytes
*******************************************************************************/

# frozen_string_literal: true

# Model for Message
class Message < ApplicationRecord
  include DatatableColumnsConcern

  after_commit :broadcast_unread_count

  define_table_buttons(%w[selectAll selectNone markAsRead markAsUnread deleteMessages])
  define_row_attributes(
    'class' => ->(record) { "clickable-row#{' info' unless record.read?}" },
    'data' => ->(record) { { 'href' => Rails.application.routes.url_helpers.admin_message_path(record) } }
  )
  define_select_column
  define_datatable_column :name
  define_datatable_column :email
  define_datatable_column :subject
  define_datatable_column :created_at,
                          label: 'Date',
                          sortPriority: 1,
                          sortOrder: 'desc',
                          formatter: ->(record) { record.created_at.strftime('%l:%M %P - %b %-d, %Y') }

  default_scope { order(created_at: :desc) }

  with_options presence: true do
    validates :name,    length: { maximum: 60 }
    validates :email,   length: { maximum:  255 },
                        format: { with: VALID_EMAIL_REGEX }
    validates :subject, length: { maximum:  120 }
    validates :message, length: { maximum: 5000 }
  end

  validates :read, inclusion: { in: [true, false] }

  ## Set read to true
  def mark_as_read
    update(read: true)
  end

  ## Send an email of the message
  def send_email
    MessageMailer.contact_form(self).deliver_now
  end

  class << self
    ## Get count of unread messages
    def unread
      where(read: false).count
    end

    ## Return true if there is at least 1 unread message
    def any_unread?
      unread.positive?
    end
  end

  private

  def broadcast_unread_count
    ActionCable.server.broadcast(
      'message_channel',
      {
        any_unread: Message.any_unread?,
        unread_count: Message.unread,
        action: if destroyed?
                  'destroyed'
                else
                  read_previously_changed? ? 'updated' : 'created'
                end
      }
    )
  end
end

/*******************************************************************************
* File: app/models/performance.rb
* Size: 1511 bytes
*******************************************************************************/

# frozen_string_literal: true

# Model for Performance
class Performance < ApplicationRecord
  include DatatableColumnsConcern

  define_datatable_column :date,
                          label: 'Performance Date',
                          formatter: ->(record) { record.date.strftime('%m/%d/%Y') }
  define_datatable_column :venue
  define_datatable_column :songs,
                          formatter: ->(record) { record.songs.map(&:title).to_sentence }
  define_controls_column formatter: ->(record) { helpers.controls_html(record) }

  default_scope { order(date: :desc) }

  has_many :performance_songs, dependent: :destroy
  has_many :songs, through: :performance_songs

  # has_attached_file :audio
  has_one_attached :audio

  validates :date,    presence: true
  validates :venue,   presence: true,
                      length: { maximum: 120 }
  validates :details, length: { maximum: 5000 }

  validate :correct_mp3_mime_type

  class << self
    def find_next(num = 1)
      all_upcoming.first(num)
    end

    def all_upcoming
      where(
        'date > :d', d: DateTime.now.in_time_zone('Mountain Time (US & Canada)')
      ).sort_by(&:date)
    end

    def all_history
      where(
        'date < :d', d: DateTime.now.in_time_zone('Mountain Time (US & Canada)')
      ).sort_by(&:date).reverse
    end
  end

  private

  def correct_mp3_mime_type
    return unless audio.attached? && !mp3.content_type.in?(%w[audio/mpeg audio/mp3])

    errors.add(:audio, 'Must be an MP3 file')
  end
end

/*******************************************************************************
* File: app/models/performance_song.rb
* Size: 186 bytes
*******************************************************************************/

# frozen_string_literal: true

# Model for PerformanceSong
class PerformanceSong < ApplicationRecord
  belongs_to :performance
  belongs_to :song, counter_cache: :performances_count
end

/*******************************************************************************
* File: app/models/profile.rb
* Size: 635 bytes
*******************************************************************************/

# frozen_string_literal: true

# The Profile class represents a user profile in the application.
class Profile < ApplicationRecord
  before_save :set_position

  default_scope { order(position: :asc) }

  has_one_attached :image

  with_options presence: true do
    validates :name,  length: { maximum: 60 }
    validates :title, length: { maximum: 60 }
    validates :bio,   length: { maximum: 5000 }
  end

  private

  # Sets the position of the profile based on the existing profiles.
  def set_position
    if Profile.any?
      self.position ||= Profile.last.position.to_i + 1
    else
      self.position = 1
    end
  end
end

/*******************************************************************************
* File: app/models/rehearsal.rb
* Size: 2144 bytes
*******************************************************************************/

# frozen_string_literal: true

# Model for Rehearsal
class Rehearsal < ApplicationRecord
  include DatatableColumnsConcern

  define_datatable_column :date,
                          formatter: ->(record) { record.date.strftime('%m/%d/%Y') }
  define_datatable_column :time,
                          formatter: ->(record) { record.time.to_s }
  define_datatable_column :host
  define_datatable_column :venue
  define_datatable_column :rehearsal_songs_count, label: 'Songs'
  define_datatable_column :audio,
                          formatter: ->(record) { record.audio.exists? ? 'Yes' : 'No' }
  define_controls_column formatter: ->(record) { helpers.controls_html(record) }

  before_validation :set_date

  default_scope { order(date: :desc) }

  has_many :rehearsal_songs, dependent: :destroy
  has_many :songs, through: :rehearsal_songs

  validates :date,  presence: true
  validates :time,  presence: true,
                    length: { maximum: 20 }
  validates :venue, length: { maximum: 120 }
  validates :host,  length: { maximum: 60 }

  has_one_attached :audio
  validate :correct_mp3_mime_type

  attr_accessor :date_holder

  class << self
    def all_past
      where(
        'date < :d', d: DateTime.now.in_time_zone('Mountain Time (US & Canada)')
      )
    end

    def find_next
      where(
        'date > :d', d: DateTime.now.in_time_zone('Mountain Time (US & Canada)')
      ).first
    end

    def find_most_recent
      all_past.first
    end
  end

  def song_list
    song_names = songs.map do |s|
      ActionController::Base.helpers.link_to(
        s.title,
        Rails.application.routes.url_helpers.music_path(s.slug)
      )
    end
    ActionController::Base.helpers.safe_join(song_names, ', ')
  end

  private

  def set_date
    return if date_holder.blank?

    self.date = DateTime.strptime(date_holder, '%m/%d/%Y')
                        .end_of_day
                        .in_time_zone('Mountain Time (US & Canada)')
  end

  def correct_mp3_mime_type
    return unless audio.attached? && !mp3.content_type.in?(%w[audio/mpeg audio/mp3])

    errors.add(:audio, 'Must be an MP3 file')
  end
end

/*******************************************************************************
* File: app/models/rehearsal_song.rb
* Size: 165 bytes
*******************************************************************************/

# frozen_string_literal: true

# Model for RehearsalSong
class RehearsalSong < ApplicationRecord
  belongs_to :rehearsal, counter_cache: true
  belongs_to :song
end

/*******************************************************************************
* File: app/models/song.rb
* Size: 1763 bytes
*******************************************************************************/

# frozen_string_literal: true

# Model for Song
class Song < ApplicationRecord
  include DatatableColumnsConcern

  define_datatable_column :title,
                          label: 'Song Title'
  define_datatable_column :instruments_count,
                          label: 'Instruments'
  define_datatable_column :performances_count,
                          label: 'Performances'
  define_controls_column formatter: ->(record) { helpers.controls_html(record) }

  before_save :set_slug, :set_sort_order

  default_scope { order(sort_order: :asc) }

  has_many :instruments, inverse_of: :song, dependent: :destroy
  accepts_nested_attributes_for :instruments,
                                reject_if: :all_blank,
                                allow_destroy: true

  has_many :performance_songs, inverse_of: :song, dependent: :destroy
  has_many :performances, through: :performance_songs, counter_cache: true

  has_many :rehearsal_songs, inverse_of: :song, dependent: :destroy
  has_many :rehearsals, through: :rehearsal_songs

  # paperclip_attachment_with_active_storage :lilypond

  has_one_attached :lilypond

  validates :title, presence: true,
                    length: { maximum: 60 }

  attr_readonly :slug, :sort_order

  # do_not_validate_attachment_file_type :lilypond

  def primary_instrument
    instruments.detect { |i| i.mp3.attached? }
  end

  class << self
    def unused
      where(performances_count: 0)
    end
  end

  private

  def set_slug
    self.slug = title&.parameterize
  end

  def set_sort_order
    if title&.starts_with?('The ', 'A ', 'An ')
      word = title&.partition(' ')&.first
      self.sort_order = title["#{word} ".size..].concat(", #{word}") if word
    else
      self.sort_order = title
    end
  end
end

/*******************************************************************************
* File: app/models/tag.rb
* Size: 619 bytes
*******************************************************************************/

# frozen_string_literal: true

# Model for Tag
class Tag < ApplicationRecord
  include DatatableColumnsConcern

  define_datatable_column :name
  define_datatable_column :slug
  define_datatable_column :article_tags_count,
                          label: 'Uses'
  define_controls_column formatter: ->(record) { TagPresenter.new(record).controls }

  has_many :article_tags, dependent: :destroy
  has_many :articles, through: :article_tags

  with_options(presence: true,
               length: { maximum: 30 },
               uniqueness: { case_sensitive: false }) do
    validates :name
    validates :slug
  end
end

/*******************************************************************************
* File: app/models/user.rb
* Size: 401 bytes
*******************************************************************************/

# frozen_string_literal: true

# Model for User
class User < ApplicationRecord
  # Include default devise modules. Others available are:
  # :confirmable, :lockable, :timeoutable, :registerable and :omniauthable
  devise :database_authenticatable,
         :recoverable, :rememberable, :trackable, :validatable

  has_many :articles,
           inverse_of: :author,
           dependent: :destroy
end

/*******************************************************************************
* File: app/presenters/application_presenter.rb
* Size: 454 bytes
*******************************************************************************/

# frozen_string_literal: true

# Parent settings for all presenters to inherit from.
class ApplicationPresenter
  include ActionDispatch::Routing::PolymorphicRoutes
  include ActionView::Helpers::TagHelper
  include ActionView::Helpers::UrlHelper
  include ActionView::Context
  include Rails.application.routes.url_helpers

  def default_url_options
    Rails.application.config.action_mailer.default_url_options || { host: 'localhost:3000' }
  end
end

/*******************************************************************************
* File: app/presenters/category_presenter.rb
* Size: 972 bytes
*******************************************************************************/

# frozen_string_literal: true

# Presenter for Categories
class CategoryPresenter < ApplicationPresenter
  attr_reader :category

  def initialize(category)
    @category = category
  end

  def controls
    safe_join([
                content_tag(:button,
                            content_tag(:span, '', class: 'glyphicon glyphicon-pencil'),
                            type: 'button',
                            class: 'btn btn-default btn-xs',
                            data: {
                              toggle: 'modal',
                              target: "#category_#{category.id}"
                            }),
                link_to(
                  content_tag(:span, '', class: 'glyphicon glyphicon-remove'),
                  "/admin/categories/#{category.id}",
                  class: 'btn btn-danger btn-xs',
                  method: :delete,
                  data: { confirm: 'Are you sure?' }
                )
              ])
  end
end

/*******************************************************************************
* File: app/presenters/member_presenter.rb
* Size: 580 bytes
*******************************************************************************/

# frozen_string_literal: true

# Presenter for Members
class MemberPresenter < ApplicationPresenter
  def initialize(member)
    @member = member
  end

  def vocal_range
    output = vocal_parts.map do |voice|
      content_tag(:span, voice[:part], class: "label label-#{voice[:bool] ? 'success' : 'default'}")
    end

    safe_join(output)
  end

  private

  def vocal_parts
    [
      { part: 'S', bool: @member.soprano? },
      { part: 'A', bool: @member.alto?    },
      { part: 'T', bool: @member.tenor?   },
      { part: 'B', bool: @member.bass?    }
    ]
  end
end

/*******************************************************************************
* File: app/presenters/tag_presenter.rb
* Size: 920 bytes
*******************************************************************************/

# frozen_string_literal: true

# Presenter for Tags
class TagPresenter < ApplicationPresenter
  attr_reader :tag

  def initialize(tag)
    @tag = tag
  end

  def controls
    safe_join([
                content_tag(:button,
                            content_tag(:span, '', class: 'glyphicon glyphicon-pencil'),
                            type: 'button',
                            class: 'btn btn-default btn-xs',
                            data: {
                              toggle: 'modal',
                              target: "#tag-#{tag.id}"
                            }),
                link_to(
                  content_tag(:span, '', class: 'glyphicon glyphicon-remove'),
                  "/admin/tags/#{tag.id}",
                  class: 'btn btn-danger btn-xs',
                  method: :delete,
                  data: { confirm: 'Are you sure?' }
                )
              ])
  end
end

/*******************************************************************************
* File: app/views/admin/articles/_article.html.haml
* Size: 518 bytes
*******************************************************************************/

%tr
  %td= article.title
  %td= article.created_at.strftime("%m/%d/%Y")
  %td= article.status
  %td= article.list_categories
  %td= article.list_tags
  %td.text-right
    =link_to edit_admin_article_path(article),
             class: "btn btn-default btn-xs" do
      %span.glyphicon.glyphicon-pencil
    &nbsp;
    =link_to admin_article_path(article),
             method: :delete,
             data: { confirm: "Are you sure?" },
             class: "btn btn-danger btn-xs" do
      %span.glyphicon.glyphicon-remove
/*******************************************************************************
* File: app/views/admin/articles/_form.html.haml
* Size: 1614 bytes
*******************************************************************************/

=form_for [:admin, article] do |f|
  =render "shared/error_messages", object: f.object
  .clearfix
    -unless article.published?
      =f.submit "Publish",
                class: "btn btn-primary pull-right",
                style: "margin-left: 1em;"
      =f.submit "Save Draft",
                class: "btn btn-default pull-right"
    -else
      =f.submit "Update",
                class: "btn btn-primary pull-right",
                style: "margin-left: 1em;"
      =f.submit "Revert to Draft",
                class: "btn btn-default pull-right"
  .row
    .col-sm-8
      =f.label :title
      =f.text_field :title, class: "form-control"
      %br
      =f.text_area :content, class: "form-control wysiwyg"
    .col-sm-4
      %br
      %fieldset
        %legend.clearfix
          Categories
          =link_to admin_categories_path,
                   class: "btn btn-primary pull-right" do
            %span.glyphicon.glyphicon-plus
        =f.collection_check_boxes(:category_ids, Category.all, :id, :name) do |c|
          =c.label { c.check_box }
          =c.object.name
          %br
      %br
      %fieldset
        %legend.clearfix
          Tags
          =link_to admin_tags_path,
                   class: "btn btn-primary pull-right" do
            %span.glyphicon.glyphicon-plus
        =f.collection_check_boxes(:tag_ids, Tag.all, :id, :name) do |t|
          =t.label { t.check_box }
          =t.object.name
          %br
      =f.hidden_field :user_id, value: current_user.id

:javascript
  $(document).ready(function(){
    $('.wysiwyg').froalaEditor({
      height: 300
    });
  });
/*******************************************************************************
* File: app/views/admin/articles/edit.html.haml
* Size: 131 bytes
*******************************************************************************/

%h1 Edit Article
=link_to "Back",
         admin_articles_path,
         class: "btn btn-default"
=render "form", article: @article
/*******************************************************************************
* File: app/views/admin/articles/index.html.haml
* Size: 186 bytes
*******************************************************************************/

%h1 Articles
=link_to new_admin_article_path,
         class: "btn btn-primary" do
  %span.glyphicon.glyphicon-plus
  Add New Article

.row
  .col-xs-12
    = datatable_table_for Article
/*******************************************************************************
* File: app/views/admin/articles/new.html.haml
* Size: 131 bytes
*******************************************************************************/

%h1 New Article
=link_to "Back",
         admin_articles_path,
         class: "btn btn-default"
=render "form", article: @article

/*******************************************************************************
* File: app/views/admin/categories/_category.html.haml
* Size: 523 bytes
*******************************************************************************/

%tr
  %td= category.name
  %td= category.slug
  %td= category.articles.count
  %td.text-right
    %button{ type:"button",
             data: { toggle: "modal",
                     target: "#category-#{category.id}" },
             class: "btn btn-default btn-xs"}
      %span.glyphicon.glyphicon-pencil
    &nbsp;
    =link_to admin_category_path(category),
             method: :delete,
             data: { confirm: "Are you sure?" },
             class: "btn btn-danger btn-xs" do
      %span.glyphicon.glyphicon-remove
/*******************************************************************************
* File: app/views/admin/categories/_form.html.haml
* Size: 268 bytes
*******************************************************************************/

=form_for [:admin, category] do |f|
  =render "shared/error_messages", object: f.object
  =f.label :name
  =f.text_field :name, class: "form-control"
  %br
  =f.label :slug
  =f.text_field :slug, class: "form-control"
  %br
  =f.submit "Save", class: "btn btn-primary"
/*******************************************************************************
* File: app/views/admin/categories/_modal.html.haml
* Size: 482 bytes
*******************************************************************************/

.modal.fade{tabindex: "-1",
            role: "dialog",
            id: "category-#{category.id}" }
  .modal-dialog{role: "document"}
    .modal-content
      .modal-header
        %button.close{type: "button",
                      data: { dismiss: "modal" },
                      aria: { label: "Close" } }
          %span{ aria: { hidden: "true" } }
            &times;
        %h4.modal-title
          Edit Category
      .modal-body
        =render "form", category: category
/*******************************************************************************
* File: app/views/admin/categories/index.html.haml
* Size: 297 bytes
*******************************************************************************/

%h1 Article Categories

.row
  .col-sm-6
    %fieldset
      %legend Categories
      = datatable_table_for Category
  .col-sm-6
    %fieldset
      %legend New Category
      =render "form", category: @new_category
.modals
  -@categories.each do |category|
    =render "modal", category: category
/*******************************************************************************
* File: app/views/admin/index.html.haml
* Size: 2890 bytes
*******************************************************************************/

%h1 Admin Dashboard

.row
  .col-md-6
    .panel.panel-default
      .panel-heading.clearfix
        =link_to new_admin_article_path,
                 class: "btn btn-primary pull-right" do
          %span.glyphicon.glyphicon-plus
        %h4 News
      .panel-body
        -@articles.each do |article|
          .article-block.clearfix
            %h4= article.title
            %p= article.created_at.strftime("%m/%d/%Y")
            = truncate article.content,
                       length: 120,
                       separator: ' '
            %br
            %span.pull-right
              %strong= article.status
              |
              =link_to "View", news_path(article)
              |
              =link_to "Edit", edit_admin_article_path(article)
            %hr
  .col-md-3
    .panel.panel-default
      .panel-heading.clearfix
        =link_to new_admin_song_path,
                 class: "btn btn-primary pull-right" do
          %span.glyphicon.glyphicon-plus
        %h4 Songs
      .panel-body{style: "overflow-y: auto; height: 602px;"}
        -@songs.each do |song|
          .song-block.clearfix
            %h4= song.title
            %p= song.instruments.map { |i| i.name }.to_sentence
            %br
            %span.pull-right
              =link_to "View", music_path(song.slug)
              |
              =link_to "Edit", edit_admin_song_path(song)
          %hr
  .col-md-3
    .panel.panel-default
      .panel-heading.clearfix
        =link_to new_admin_performance_path,
                 class: "btn btn-primary pull-right" do
          %span.glyphicon.glyphicon-plus
        %h4 Performances
      .panel-body{style: "overflow-y: auto; height: 250px;"}
        -@performances.each do |performance|
          .performance-block.clearfix
            %h4= performance.date.strftime("%m/%d/%Y")
            %p= performance.songs.map { |s| s.title }.to_sentence
            %br
            %span.pull-right
              %strong= performance.date.future? ? "Pending" : "Complete"
              |
              =link_to "Edit", edit_admin_performance_path(performance)
          %hr
    %br
    .panel.panel-default
      .panel-heading.clearfix
        =link_to new_admin_rehearsal_path,
                 class: "btn btn-primary pull-right" do
          %span.glyphicon.glyphicon-plus
        %h4 Rehearsals
      .panel-body{style: "overflow-y: auto; height: 250px"}
        -@rehearsals.each do |rehearsal|
          .performance-block.clearfix
            %h4= rehearsal.date.strftime("%m/%d/%Y")
            %p
              %strong Host:
              = rehearsal.host
              %br
              %strong Venue
              = rehearsal.venue
            %span.pull-right
              %strong= rehearsal.date.future? ? "Pending" : "Complete"
              |
              =link_to "Edit", edit_admin_rehearsal_path(rehearsal)
          %hr
/*******************************************************************************
* File: app/views/admin/members/_form.html.haml
* Size: 938 bytes
*******************************************************************************/

.row
  .col-md-8.col-md-offset-2
    =form_for [:admin, member] do |f|
      =render "shared/error_messages", object: f.object
      =f.label :name
      =f.text_field :name, class: "form-control"
      %br
      =f.label :email
      =f.email_field :email, class: "form-control"
      %br
      =f.label :phone
      =f.telephone_field :phone, class: "form-control"
      %br
      =f.label :vocal_range
      .row
        -%w[Soprano Alto Tenor Bass].each do |voice|
          .col-sm-3
            =f.label :"#{voice}" do
              =check_box_tag "member[vocal_range][]",
                             voice,
                             member.vocal_range.to_s.include?(voice),
                             id: "member_vocal_range_#{voice}"
              =voice
      %br
      =f.label :talents, "Other Musical Talents"
      =f.text_field :talents, class: "form-control"
      %br
      =f.submit "Save", class: "btn btn-primary"
/*******************************************************************************
* File: app/views/admin/members/_member.html.haml
* Size: 739 bytes
*******************************************************************************/

%tr
  %td= member.name
  %td= member.email
  %td= member.phone
  %td
    %span{class: "#{'label label-success' if member.soprano? }"}
      S
    %span{class: "#{'label label-success' if member.alto? }"}
      A
    %span{class: "#{'label label-success' if member.tenor? }"}
      T
    %span{class: "#{'label label-success' if member.bass? }"}
      B
  %td= member.talents
  %td.text-right
    =link_to edit_admin_member_path(member),
             class: "btn btn-default btn-xs" do
      %span.glyphicon.glyphicon-pencil
    &nbsp;
    =link_to admin_member_path(member),
             class: "btn btn-danger btn-xs",
             method: :delete,
             data: { confirm: "Are you sure?" } do
      %span.glyphicon.glyphicon-remove
/*******************************************************************************
* File: app/views/admin/members/edit.html.haml
* Size: 127 bytes
*******************************************************************************/

%h1 Edit Member
=link_to "Back",
         admin_members_path,
         class: "btn btn-default"
=render "form", member: @member
/*******************************************************************************
* File: app/views/admin/members/index.html.haml
* Size: 182 bytes
*******************************************************************************/

%h1 Members
=link_to new_admin_member_path,
         class: "btn btn-primary" do
  %span.glyphicon.glyphicon-plus
  Add New Member

.row
  .col-xs-12
    = datatable_table_for Member
/*******************************************************************************
* File: app/views/admin/members/new.html.haml
* Size: 126 bytes
*******************************************************************************/

%h1 New Member
=link_to "Back",
         admin_members_path,
         class: "btn btn-default"
=render "form", member: @member
/*******************************************************************************
* File: app/views/admin/messages/index.html.haml
* Size: 65 bytes
*******************************************************************************/

%h1 Messages

.row
  .col-sm-12
    = datatable_table_for Message
/*******************************************************************************
* File: app/views/admin/messages/show.html.haml
* Size: 531 bytes
*******************************************************************************/

%h1 Message
=link_to "Back",
         admin_messages_path,
         class: "btn btn-default"
.row{style: "padding-top: 30px;"}
  .col-lg-6.col-lg-offset-3.col-sm-8.col-sm-offset-2
    .panel.panel-default
      .panel-heading.clearfix
        %h4.pull-left
          =@message.name
          %span.small
            =@message.email
        %h4.pull-right
          %span.small
            =@message.created_at.strftime("%l:%M %P - %b %-d, %Y")
      .panel-body
        %h1= @message.subject
        =simple_format @message.message
/*******************************************************************************
* File: app/views/admin/performances/_form.html.haml
* Size: 1848 bytes
*******************************************************************************/

.row
  .col-sm-8.col-sm-offset-2
    =form_for [:admin, performance] do |f|
      =render "shared/error_messages", object: performance
      .clearfix
        =f.submit "Save", class: "btn btn-primary pull-right"
        =link_to "Cancel",
                 admin_performances_path,
                 class: "btn btn-default pull-right",
                 style: "margin-right: 15px;"
      .row
        .col-sm-6
          %fieldset
            %legend Main Info
            =f.label :venue
            =f.text_field :venue, class: "form-control"
            %br
            =f.label :date
            .input-group.date{data: {provide: "datepicker",
                                     date: { format: "mm/dd/yyyy" } } }
              =f.text_field :date,
                            value: (performance.date.strftime("%m/%d/%Y") if performance.date?),
                            class: "form-control"
              .input-group-addon
                %span.glyphicon.glyphicon-th
            %br
            =f.label :details
            =f.text_area :details, rows: "6", class: "form-control"
          %br
          %fieldset
            %legend Audio
            =f.label :audio, "Recording"
            - if f.object.audio.exists?
              =link_to f.object.audio.url do
                =image_tag "MP3.png", size: "16x20"
                =f.object.audio_file_name
            =f.file_field :audio,
                          accept: "audio/mp3",
                          class: "form-control"
        .col-sm-6
          %fieldset
            %legend Songs
            =f.label :songs
            %br
            %div{style: "max-height: 425px; overflow-y: auto;"}
              =f.collection_check_boxes(:song_ids, Song.all, :id, :title) do |s|
                =s.label { s.check_box }
                =s.object.title
                %br
/*******************************************************************************
* File: app/views/admin/performances/_performance.html.haml
* Size: 506 bytes
*******************************************************************************/

%tr
  %td=performance.date.strftime("%m/%d/%Y")
  %td=performance.venue
  %td=performance.songs.map { |song| song.title}.to_sentence
  %td.text-right
    =link_to edit_admin_performance_path(performance),
             class: "btn btn-default btn-xs" do
      %span.glyphicon.glyphicon-pencil
    =link_to admin_performance_path(performance),
             method: :delete,
             data: { confirm: "Are you sure?" },
             class: "btn btn-danger btn-xs" do
      %span.glyphicon.glyphicon-remove
/*******************************************************************************
* File: app/views/admin/performances/edit.html.haml
* Size: 243 bytes
*******************************************************************************/

.clearfix
  %h1.pull-left Edit Performance
  =link_to "Back",
           admin_performances_path,
           class: "btn btn-default pull-left",
           style: "margin-top: 23px; margin-left: 20px;"
=render "form", performance: @performance
/*******************************************************************************
* File: app/views/admin/performances/index.html.haml
* Size: 221 bytes
*******************************************************************************/

.clearfix
  %h1 Performances
  =link_to new_admin_performance_path,
           class: "btn btn-primary" do
    %span.glyphicon.glyphicon-plus
    Add New Performance
.row
  .col-sm-12
    = datatable_table_for Performance
/*******************************************************************************
* File: app/views/admin/performances/new.html.haml
* Size: 242 bytes
*******************************************************************************/

.clearfix
  %h1.pull-left New Performance
  =link_to "Back",
           admin_performances_path,
           class: "btn btn-default pull-left",
           style: "margin-top: 23px; margin-left: 20px;"
=render "form", performance: @performance
/*******************************************************************************
* File: app/views/admin/profiles/_form.html.haml
* Size: 922 bytes
*******************************************************************************/

.row
  .col-xs-12
    =form_for [:admin, profile] do |f|
      =render "shared/error_messages", object: f.object
      .clearfix
        =f.submit "Save", class: "btn btn-primary pull-right"
        =link_to "Cancel",
                  admin_profiles_path,
                  class: "btn btn-default pull-right",
                  style: "margin-right: 15px;"
      %fieldset
        %legend Profile Info
        =f.label :name
        =f.text_field :name, class: "form-control"
        %br
        =f.label :title
        =f.text_field :title, class: "form-control"
        %br
        =f.label :bio, "Biography"
        =f.text_area :bio, class: "form-control"
        %br
      %fieldset
        %legend Profile Image
        -if profile.image.attached?
          =image_tag profile.image
        =f.file_field :image,
                      accept: "image/pjpeg, image/x-png",
                      class: "form-control"
/*******************************************************************************
* File: app/views/admin/profiles/_profile.html.haml
* Size: 925 bytes
*******************************************************************************/

.panel.panel-default{:data => { :id => profile.id,
                                :pos => profile.position } }
  .panel-body
    .row
      .col-sm-1
        %span.glyphicon.glyphicon-resize-vertical.handle
      .col-sm-3
        - url = profile.image.attached? ? profile.image : "portrait-placeholder.jpg"
        = image_tag url,
                    style: "width: 100%;"
      .col-sm-6
        %h3= profile.name
        %h4= profile.title
        %p= profile.bio&.truncate(50)
      .col-sm-2
        =link_to admin_profile_path(profile),
                 method: :delete,
                 data: { confirm: "Are you sure?" },
                 class: "btn btn-danger pull-right" do
          %span.glyphicon.glyphicon-remove
        =link_to edit_admin_profile_path(profile),
                 class: "btn btn-default pull-right",
                 style: "margin-right: 15px" do
          %span.glyphicon.glyphicon-pencil
/*******************************************************************************
* File: app/views/admin/profiles/index.html.haml
* Size: 18 bytes
*******************************************************************************/

= render @profiles
/*******************************************************************************
* File: app/views/admin/rehearsals/_form.html.haml
* Size: 1609 bytes
*******************************************************************************/

.row
  .col-sm-8.col-sm-offset-2
    =form_for [:admin, rehearsal] do |f|
      =render "shared/error_messages", object: f.object
      .clearfix
        =f.submit "Save", class: "btn btn-primary pull-right"
        =link_to "Cancel",
                 admin_rehearsals_path,
                 class: "btn btn-default pull-right",
                 style: "margin-right: 25px;"
      .row
        .col-sm-6
          %fieldset{style: "margin-bottom: 30px;"}
            %legend Scheduling
            =f.label :host
            =f.text_field :host, class: "form-control"
            %br
            =f.label :venue
            =f.text_field :venue, class: "form-control"
            %br
            =f.label :date
            .input-group.date{data: {provide: "datepicker",
                                     date: { format: "mm/dd/yyyy" } } }
              =f.text_field :date_holder,
                            value: (rehearsal.date.strftime("%m/%d/%Y") if rehearsal.date?),
                            class: "form-control"
              .input-group-addon
                %span.glyphicon.glyphicon-th
            %br
            =f.label :time
            =f.text_field :time, class: "form-control"
        .col-sm-6
          %fieldset{style: "margin-bottom: 30px;"}
            %legend Events
            =f.label :audio
            =f.file_field :audio, class: "form-control"
            %br
            =f.label :songs
            %br
            =f.collection_check_boxes(:song_ids, Song.all, :id, :title) do |s|
              =s.label { s.check_box }
              =s.object.title
              %br
/*******************************************************************************
* File: app/views/admin/rehearsals/_rehearsal.html.haml
* Size: 601 bytes
*******************************************************************************/

%tr
  %td= rehearsal.date.strftime("%m/%d/%Y")
  %td= rehearsal.time.to_s
  %td= rehearsal.host
  %td= rehearsal.venue
  %td= rehearsal.songs.count
  %td= rehearsal.audio.exists? ? "Yes" : "No"
  %td.text-right
    =link_to edit_admin_rehearsal_path(rehearsal),
             class: "btn btn-default btn-xs",
             style: "margin-right: 1em;" do
      %span.glyphicon.glyphicon-pencil
    =link_to admin_rehearsal_path(rehearsal),
             method: :delete,
             data: { confirm: "Are you sure?" },
             class: "btn btn-danger btn-xs" do
      %span.glyphicon.glyphicon-remove
/*******************************************************************************
* File: app/views/admin/rehearsals/edit.html.haml
* Size: 235 bytes
*******************************************************************************/

.clearfix
  %h1.pull-left Edit Rehearsal
  =link_to "Back",
           admin_rehearsals_path,
           class: "btn btn-default pull-left",
           style: "margin-top: 23px; margin-left: 20px;"
=render "form", rehearsal: @rehearsal
/*******************************************************************************
* File: app/views/admin/rehearsals/index.html.haml
* Size: 213 bytes
*******************************************************************************/

.clearfix
  %h1 Rehearsals
  =link_to new_admin_rehearsal_path,
           class: "btn btn-primary" do
    %span.glyphicon.glyphicon-plus
    Add New Rehearsal
.row
  .col-sm-12
    = datatable_table_for Rehearsal
/*******************************************************************************
* File: app/views/admin/rehearsals/new.html.haml
* Size: 234 bytes
*******************************************************************************/

.clearfix
  %h1.pull-left New Rehearsal
  =link_to "Back",
           admin_rehearsals_path,
           class: "btn btn-default pull-left",
           style: "margin-top: 23px; margin-left: 20px;"
=render "form", rehearsal: @rehearsal
/*******************************************************************************
* File: app/views/admin/shared/_controls.html.haml
* Size: 295 bytes
*******************************************************************************/

=link_to [:edit, :admin, record],
         class: "btn btn-default btn-xs" do
  %span.glyphicon.glyphicon-pencil
&nbsp;
=link_to [:admin, record],
         method: :delete,
         data: { confirm: "Are you sure?" },
         class: "btn btn-danger btn-xs" do
  %span.glyphicon.glyphicon-remove
/*******************************************************************************
* File: app/views/admin/songs/_form.html.haml
* Size: 1897 bytes
*******************************************************************************/

.row
  .col-xs-12.col-sm-8.col-sm-offset-2
    =form_for [:admin, song] do |f|
      =render "shared/error_messages", object: f.object
      .clearfix
        =f.submit "Save", class: "btn btn-primary pull-right"
        =link_to "Cancel",
                 admin_songs_path,
                 class: "btn btn-default pull-right",
                 style: "margin-right: 15px;"
      %fieldset
        %legend Main Info
        =f.label :title
        =f.text_field :title, class: "form-control"
        %br
        =f.label :description
        =f.text_area :description, class: "form-control"
        %br
        %span{style: "white-space: nowrap;"}
          =f.label :lilypond, "Lilypond File"
          -if f.object.lilypond.attached?
            =link_to f.object.lilypond.attachment.filename,
                     rails_blob_path(f.object.lilypond, disposition: "attachment")
        =f.file_field :lilypond,
                      class: "form-control"
      %br
      %fieldset
        %legend Instruments
        .instruments
          =f.fields_for :instruments do |instruments|
            =render "instrument_fields", f: instruments
          .links
            =link_to_add_association f, :instruments, class: "btn btn-primary" do
              %span.glyphicon.glyphicon-plus
              Add Instrument
:javascript
  function update_positions(){
    var index = 0;
    $.each( $(".instruments .panel"), function(index, panel){
      $(panel).find("input[id$='_position']").val(index);
    });
  }

  $( function() {
    $('.instruments').sortable({
      handle: ".handle",
      placeholder: "ui-state-highlight sheet-music-highlight",
      update: function(event, ui) { update_positions() }
    });
  });

  $(".instruments").on('cocoon:after-insert', function() {
    update_positions();
  })

  $(".instruments").on('cocoon:after-remove', function() {
    update_positions();
  })
/*******************************************************************************
* File: app/views/admin/songs/_instrument_fields.html.haml
* Size: 1846 bytes
*******************************************************************************/

.nested-fields
  .panel.panel-default
    .panel-body
      .row
        =f.hidden_field :position
        .col-sm-1
          %span.glyphicon.glyphicon-resize-vertical.handle
        .col-sm-10
          =f.label :name
          =f.text_field :name, class: "form-control"
          %br
          %span{style: "white-space: nowrap;"}
            =f.label :pdf, "Sheet Music (PDF)"
            - if f.object.pdf.attached?
              =link_to rails_blob_path(f.object.pdf, disposition: "attachment") do
                =image_tag "pdf-icon.png", size: "16x20"
                =f.object.pdf.attachment.filename
          =f.file_field :pdf,
                        accept: "application/pdf",
                        class: "form-control"
          %br
          %span{style: "white-space: nowrap;"}
            =f.label :midi, "Audio File (MIDI)"
            - if f.object.midi.attached?
              =link_to rails_blob_path(f.object.midi, disposition: "attachment") do
                =image_tag "MIDI.png", size: "16x20"
                =f.object.midi.attachment.filename
          =f.file_field :midi,
                        accept: "audio/midi",
                        class: "form-control"
          %br
          %span{style: "white-space: nowrap;"}
            =f.label :mp3, "Audio File (MP3)"
            - if f.object.mp3.attached?
              =link_to rails_blob_path(f.object.mp3, disposition: "attachment") do
                =image_tag "MP3.png", size: "16x20"
                =f.object.mp3.attachment.filename
          =f.file_field :mp3,
                        accept: "audio/mp3",
                        class: "form-control"
        .col-sm-1
          %br{style: "line-height: 1.95em;"}
          =link_to_remove_association f, class: "btn btn-danger btn-sm pull-right" do
            %span.glyphicon.glyphicon-remove

/*******************************************************************************
* File: app/views/admin/songs/_song.html.haml
* Size: 500 bytes
*******************************************************************************/

%tr
  %td= song.title
  %td= song.instruments.count
  %td= song.performances.count
  %td.text-right
    = link_to edit_admin_song_path(song),
              class: "btn btn-default btn-xs",
              style: "margin-right: 5px;" do
      %span.glyphicon.glyphicon-pencil
    = link_to admin_song_path(song),
              method: :delete,
              data: { confirm: "Are you sure? This cannot be undone." },
              class: "btn btn-danger btn-xs" do
      %span.glyphicon.glyphicon-remove
/*******************************************************************************
* File: app/views/admin/songs/edit.html.haml
* Size: 215 bytes
*******************************************************************************/

.clearfix
  %h1.pull-left Edit Song
  =link_to "Back",
           admin_songs_path,
           class: "btn btn-default pull-left",
           style: "margin-top: 23px; margin-left: 20px;"
=render "form", song: @song
/*******************************************************************************
* File: app/views/admin/songs/index.html.haml
* Size: 193 bytes
*******************************************************************************/

.clearfix
  %h1 Songs
  =link_to new_admin_song_path,
           class: "btn btn-primary" do
    %span.glyphicon.glyphicon-plus
    Add New Song
.row
  .col-xs-12
    = datatable_table_for Song
/*******************************************************************************
* File: app/views/admin/songs/new.html.haml
* Size: 214 bytes
*******************************************************************************/

.clearfix
  %h1.pull-left New Song
  =link_to "Back",
           admin_songs_path,
           class: "btn btn-default pull-left",
           style: "margin-top: 23px; margin-left: 20px;"
=render "form", song: @song
/*******************************************************************************
* File: app/views/admin/tags/_form.html.haml
* Size: 263 bytes
*******************************************************************************/

=form_for [:admin, tag] do |f|
  =render "shared/error_messages", object: f.object
  =f.label :name
  =f.text_field :name, class: "form-control"
  %br
  =f.label :slug
  =f.text_field :slug, class: "form-control"
  %br
  =f.submit "Save", class: "btn btn-primary"
/*******************************************************************************
* File: app/views/admin/tags/_modal.html.haml
* Size: 457 bytes
*******************************************************************************/

.modal.fade{tabindex: "-1",
            role: "dialog",
            id: "tag-#{tag.id}" }
  .modal-dialog{role: "document"}
    .modal-content
      .modal-header
        %button.close{type: "button",
                      data: { dismiss: "modal" },
                      aria: { label: "Close" } }
          %span{ aria: { hidden: "true" } }
            &times;
        %h4.modal-title
          Edit Tag
      .modal-body
        =render "form", tag: tag
/*******************************************************************************
* File: app/views/admin/tags/_tag.html.haml
* Size: 488 bytes
*******************************************************************************/

%tr
  %td= tag.name
  %td= tag.slug
  %td= tag.articles.count
  %td.text-right
    %button{ type:"button",
             data: { toggle: "modal",
                     target: "#tag-#{tag.id}" },
             class: "btn btn-default btn-xs"}
      %span.glyphicon.glyphicon-pencil
    &nbsp;
    =link_to admin_tag_path(tag),
             method: :delete,
             data: { confirm: "Are you sure?" },
             class: "btn btn-danger btn-xs" do
      %span.glyphicon.glyphicon-remove
/*******************************************************************************
* File: app/views/admin/tags/index.html.haml
* Size: 244 bytes
*******************************************************************************/

%h1 Article Tags

.row
  .col-sm-6
    %fieldset
      %legend Tags
      = datatable_table_for Tag
  .col-sm-6
    %fieldset
      %legend New Tag
      =render "form", tag: @new_tag
.modals
  -@tags.each do |tag|
    =render "modal", tag: tag
/*******************************************************************************
* File: app/views/articles/_article.html.haml
* Size: 567 bytes
*******************************************************************************/

.row{style: "margin-bottom: 30px;"}
  .col-xs-12
    %span.date.hidden-xs.hidden-sm=article.created_at.strftime("%m/%d/%Y")
    =link_to news_path(article),
             class: "secondary" do
      %h2=article.title
    .clearfix
      %strong.push-left=article.author_name
      %span.date.pull-right.hidden-md.hidden-lg=article.created_at.strftime("%m/%d/%Y")
    %p
      =truncate article.content.html_safe,
                length: 120,
                separator: ' ',
                escape: false
      =link_to "Read More", news_path(article), class: "nobreak"
/*******************************************************************************
* File: app/views/articles/_sorters.html.haml
* Size: 882 bytes
*******************************************************************************/

.sort-group
  %h2 Sort by Month
  -Article.pluck(:created_at).group_by { |d| d.beginning_of_month }.each do |key, value|
    =link_to key.strftime("%B %Y") + " (" + value.count.to_s + ")",
             news_index_path(params.permit(:month).merge(month: key.strftime("%Y-%m-%d")))
    %br
.sort-group
  %h2 Categories
  -Category.find_each do |cat|
    =link_to cat.name,
             news_index_path(params.permit(:categories).merge(categories: cat.slug)),
             class: "nobreak"
    %br
.sort_group
  %h2 Tags
  -Tag.find_each do |tag|
    -unless tag == Tag.last
      = succeed "," do
        = link_to tag.name,
                  news_index_path(params.permit(:tags).merge(tags: tag.slug)),
                  class: "nobreak"
    -else
      = link_to tag.name,
                news_index_path(params.permit(:tags).merge(tags: tag.slug)),
                class: "nobreak"
/*******************************************************************************
* File: app/views/articles/index.html.haml
* Size: 325 bytes
*******************************************************************************/

-provide :title, "News"
-provide :bg, "night-vintage-music-bokeh.jpg"

.row
  .hidden-xs.col-sm-4.col-md-3.col-lg-2
    =render "sorters"
  .col-sm-8.col-md-9.col-lg-10
    -@articles.each do |article|
      =render article

=will_paginate @articles,
               :previous_label => "«",
               :next_label => "»"
/*******************************************************************************
* File: app/views/articles/show.html.haml
* Size: 649 bytes
*******************************************************************************/

-provide :title, @article.title
-provide :bg, "night-vintage-music-bokeh.jpg"

.row
  .hidden-xs.col-sm-4.col-md-3.col-lg-2
    =render "sorters"
  .col-sm-8.col-md-9.col-lg-10
    %span.date.hidden-xs.hidden-sm=@article.created_at.strftime("%m/%d/%Y")
    %h2=@article.title
    .clearfix
      %strong.push-left=@article.author_name
      %span.date.pull-right.hidden-md.hidden-lg=@article.created_at.strftime("%m/%d/%Y")
    .article-content
      = sanitize @article.content

.row
  .col-xs-12
    =link_to "< Back to News",
             news_index_path,
             class: "text-center",
             style: 'display: block; margin-top: 40px;'
/*******************************************************************************
* File: app/views/layouts/_admin_header.html.haml
* Size: 2658 bytes
*******************************************************************************/

%header
  %nav.navbar.navbar-inverse
    .container-fluid
      .navbar-header
        %button{ :type => "button",
                 :class => "navbar-toggle collapsed",
                 :data => { toggle: "collapse",
                            target: "#admin-menu" },
                 :aria => { expanded: false } }
          %span.sr-only Toggle navigation
          %span.icon-bar
          %span.icon-bar
          %span.icon-bar
        =link_to admin_index_path, :class => "navbar-brand" do
          Cascade Sixth Choir
      #admin-menu.collapse.navbar-collapse
        %ul.nav.navbar-nav.navbar-right
          %li
            =link_to "Main Site", root_path
          %li
            =link_to "Dashboard", admin_index_path
          %li{ class: "#{'active' if controller_name == 'messages'}" }
            =link_to admin_messages_path do
              Messages
              %span#unread-messages-badge{class: "label label-success #{'d-none' unless Message.any_unread?}"}
                = Message.unread
          %li{class: "#{'active' if %w[songs rehearsals performances].include?(controller_name)}" }
            =link_to "#",
                     class:"dropdown-toggle",
                     data: {toggle: "dropdown"},
                     role: "button",
                     aria: {haspopup:"true", expanded: "false"} do
              Music
              %span.caret
            %ul.dropdown-menu
              %li
                =link_to "Songs", admin_songs_path
              %li
                =link_to "Rehearsals", admin_rehearsals_path
              %li
                =link_to "Performances", admin_performances_path
          %li{ class: "#{'active' if %w(articles tags categories).include?(controller_name)}" }
            =link_to "#",
                     class:"dropdown-toggle",
                     data: {toggle: "dropdown"},
                     role: "button",
                     aria: {haspopup:"true", expanded: "false"} do
              News
              %span.caret
              %ul.dropdown-menu
                %li
                  =link_to "Articles", admin_articles_path
                %li
                  =link_to "Categories", admin_categories_path
                %li
                  =link_to "Tags", admin_tags_path
          %li{ :class => "#{'active' if controller_name == 'members'}"}
            =link_to "Members", admin_members_path
          %li{ :class => "#{'active' if controller_name == 'profiles'}" }
            =link_to "Profiles", admin_profiles_path
          %li
            =link_to 'Logout',
                     destroy_user_session_path,
                     method: :delete
/*******************************************************************************
* File: app/views/layouts/_header.html.haml
* Size: 719 bytes
*******************************************************************************/

%header
  =link_to root_url do
    %h1
      Cascade Sixth
      %span.choir
        Choir
  %button.navbar-toggle{:type => "button",
                        :data => { target: "#navbarCollapse",
                                   toggle: "collapse" },
                        :style => "color: white;"}
    %span.sr-only Toggle navigation
    %span.icon-bar
    %span.icon-bar
    %span.icon-bar
  #navbarCollapse.collapse.navbar-collapse
    %ul.nav.navbar-nav
      %li=link_to "Home", root_url
      %li=link_to "Music", music_index_path
      / %li=link_to "About Us", about_us_path
      %li=link_to "News", news_index_path
      %li=link_to "Rehearsals", rehearsals_path
      %li=link_to "Contact", contact_path
/*******************************************************************************
* File: app/views/layouts/_title.html.haml
* Size: 218 bytes
*******************************************************************************/

-bg = content_for(:bg) || "pexels-photo-164715.jpeg"
-title = content_for(:title) || "Welcome"
.title_holder
  .title_image{:style => "background-image: url(\"#{image_path(bg)}\");"}
    .title_overlay
      %h1= title
/*******************************************************************************
* File: app/views/layouts/admin.html.haml
* Size: 669 bytes
*******************************************************************************/

!!!
%html
  %head
    %meta{content: "text/html; charset=UTF-8",
          html: { equiv: "Content-Type"} }/
    %meta{name: "viewport",
          content: "width=device-width, initial-scale=1, maximum-scale=1"}
    %meta{name: "robots",
          content: "noindex nofollow"}
    = action_cable_meta_tag
    %title Admin | Cascade Sixth Choir
    = csrf_meta_tags
    = stylesheet_link_tag "admin", media: 'all', "data-turbo-track": "reload"
    = javascript_include_tag 'application', "data-turbo-track": "reload", type: "module"
  %body
    -if user_signed_in?
      = render "layouts/admin_header"
    .container
      = render "shared/flash_messages"
      = yield
/*******************************************************************************
* File: app/views/layouts/application.html.haml
* Size: 722 bytes
*******************************************************************************/

!!!
%html
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type"}/
    %meta{:name => "viewport",
          :content => "width=device-width, initial-scale=1, maximum-scale=1"}
    %title Cascade 6th Ward Choir Music
    = favicon_link_tag 'choir_favicon.png', rel: 'apple-touch-icon', type: 'image/png'
    = favicon_link_tag
    = csrf_meta_tags
    = stylesheet_link_tag    'application', "data-turbo-track": "reload"
    = javascript_include_tag 'application', "data-turbo-track": "reload", type: "module"
  %body
    = render "layouts/header"
    = render "layouts/title"
    .container
      .breadcrumbs
        = render_breadcrumbs :tag => :span, :seperator => " >> "
      = yield
/*******************************************************************************
* File: app/views/layouts/mailer.html.haml
* Size: 26 bytes
*******************************************************************************/

%html
  %body
    = yield

/*******************************************************************************
* File: app/views/message_mailer/contact_form.html.haml
* Size: 204 bytes
*******************************************************************************/

%p
  You have a new message from choir.CascadeSixth.com
%p
  =@message.created_at.strftime("%l:%M %P - %b %-d, %Y")
%p
  =@message.name
%p
  =@message.email
%br
.message
  =simple_format @message.message

/*******************************************************************************
* File: app/views/message_mailer/contact_form.text.haml
* Size: 158 bytes
*******************************************************************************/

You have a new message from choir.CascadeSixth.com

=@message.created_at.strftime("%l:%M %P - %b %-d, %Y")

=@message.name

=@message.email

=@message.message
/*******************************************************************************
* File: app/views/messages/new.html.haml
* Size: 1093 bytes
*******************************************************************************/

-provide :title, "Contact"
-provide :bg, "phone-dial-old-arrangement-47319.jpeg"

.row
  .col-sm-10.col-sm-offset-1.col-md-8.col-md-offset-2.col-lg-6.col-lg-offset-3
    %p
      Do you have a suggestion for a future song?
      Did you spot an error on the site or in the music?
      Do you want to lavish us with praises?
      Do you want a site like this for your own choir?
      Just want to say 'hi'?
    %p
      Go head. Drop us a line.
    %br
    =render "shared/flash_messages"
    =form_for @message, url: contact_path, method: :post do |f|
      =render "shared/error_messages", object: f.object
      =f.invisible_captcha :choir_part
      =f.label :name, "Full Name"
      =f.text_field :name, class: "form-control"
      %br
      =f.label :email, "Email Address"
      =f.email_field :email, class: "form-control"
      %br
      =f.label :subject
      =f.text_field :subject, class: "form-control"
      %br
      =f.label :message
      =f.text_area :message, rows: "6", class: "form-control"
      %br
      =f.submit "Send", class: "btn btn-secondary btn-lg pull-right"
/*******************************************************************************
* File: app/views/rehearsals/_rehearsal.html.haml
* Size: 344 bytes
*******************************************************************************/

.rehearsal-block.download-block
  .row
    .col-xs-6.col-sm-12
      %h3=rehearsal.date.strftime("%m/%d/%Y")
      %p{style: "height: 4em;"}=rehearsal.song_list
    .col-xs-6.col-sm-12
      =link_to "Download",
               rehearsal.audio.url,
               class: "btn btn-secondary btn-lg #{'disabled' unless rehearsal.audio.attached? }"
/*******************************************************************************
* File: app/views/rehearsals/index.html.haml
* Size: 579 bytes
*******************************************************************************/

- provide :title, "Rehearsals"
- provide :bg, "pexels-photo-257904.jpg"

%p
  Here you can download and listen to all the previous rehearsals you may have
  missed so you can practice along and get the notes and changes to the songs
  you need to know before the next peformance.
%p
  Rehersals are sorted by date and links to the music we practiced are listed
  in the description.

.row
  - @rehearsals.each do |rehearsal|
    .col-sm-4.col-md-3
      = render rehearsal

= will_paginate @rehearsals,
                :previous_label => "«",
                :next_label => "»"
/*******************************************************************************
* File: app/views/shared/_error_messages.html.haml
* Size: 226 bytes
*******************************************************************************/

-if object.errors.any?
  #error-explanation
    .alert.alert-danger
      The form contains
      = pluralize(object.errors.count, "error") + "."
    %ul
      -object.errors.full_messages.each do |message|
        %li=message
/*******************************************************************************
* File: app/views/shared/_flash_messages.html.haml
* Size: 375 bytes
*******************************************************************************/

-unless flash.empty?
  -flash.each do |message_type, message|
    .alert.alert-dismissible{ class: "alert-#{message_type}",
                              role: "alert" }
      %button.close{type: "button",
                    data: { dismiss: "alert" },
                    aria: { label: "Close" } }
        %span{ aria: { hidden: "true" } }
          &times;
      =message
/*******************************************************************************
* File: app/views/songs/_song.html.haml
* Size: 134 bytes
*******************************************************************************/

-alphabetized ||= false
=link_to music_path(song.slug), class: "secondary" do
  %h3= alphabetized ? song.sort_order : song.title
  %br
/*******************************************************************************
* File: app/views/songs/index.html.haml
* Size: 4951 bytes
*******************************************************************************/

-provide :title, "Music"
-provide :bg, "pexels-photo-164821.jpeg"

%p
  Below you will find a complete list of all the songs and performances of the
  Cascade Sixth Ward's Choir sorted alphabetically, by our performance history,
  and a listing of our upcoming performance dates with the songs we will be
  singing.

%ul.nav.nav-tabs.song-sorting{:role => "tablist"}
  %li{:role => "presentation",
      :class => "active"}
    %a{:role => "tab",
       :aria => { controls: "title" },
       :data => { toggle: "tab" },
       :href => "#title" }
      By Title
  %li{:role => "presentation"}
    %a{:role => "tab",
       :aria => { controls: "pending" },
       :data => { toggle: "tab" },
       :href => "#pending" }
      Upcoming Dates
  %li{:role => "presentation"}
    %a{:role => "tab",
       :aria => { controls: "history" },
       :data => { toggle: "tab" },
       :href => "#history" }
      Performance History
  %li{:role => "presentation"}
    %a{:role => "tab",
       :aria => { controls: "unused" },
       :data => { toggle: "tab" },
       :href => "#unused" }
      Unscheduled Songs

.tab-content
  .tab-pane.fade.in.active#title{:role => "tabpanel"}
    .row
      .col-md-10.col-md-offset-1
        .letter-links.text-center
          -@songs_by_title.each do |letter|
            = " | " unless letter == @songs_by_title.first
            =link_to letter[0], "#heading-#{letter[0]}",
                     :data => { turbolinks: false }
        -@songs_by_title.each do |letter|
          .letter-block
            .letter-header{:id => "heading-#{letter[0]}" }
              %h2= letter[0]
            -letter[1].each do |song|
              =render song, alphabetized: true
  .tab-pane.fade#pending{:role => "tabpanel"}
    .row
      .col-md-10.col-md-offset-1
        -if @songs_pending.any?
          .year-links.text-center
            %ul.nav.nav-pills
              -@songs_pending.each do |year|
                %li{:role => "presentation",
                    :class => "#{ 'active' if year == @songs_pending.first }"}
                  %a{:role => "tab",
                     :aria => { controls: "pending-#{year[0]}" },
                     :data => { toggle: "tab" },
                     :href => "#pending-#{year[0]}" }
                    =year[0]
          .tab-content
            -@songs_pending.each do |year|
              .tab-pane.fade{:role => "tabpanel",
                             :id => "pending-#{year[0]}",
                             :class => "#{ 'active in' if year == @songs_pending.first}" }
                -year[1].each do |month|
                  .letter-block
                    .letter-header
                      %h2=month[0].strftime("%b")
                    -month[1].each do |performance|
                      %h3.date=performance.date.strftime("%m/%d/%Y")
                      =simple_format performance.details
                      -performance.songs.each do |song|
                        =render song
  .tab-pane.fade#history{:role => "tabpanel"}
    .row
      .col-md-10.col-md-offset-1
        -if @song_history.any?
          .year-links.text-center
            %ul.nav.nav-pills
              -@song_history.each do |year|
                %li{:role => "presentation",
                    :class => "#{ 'active' if year == @song_history.first }"}
                  %a{:role => "tab",
                     :aria => { controls: "history-#{year[0]}" },
                     :data => { toggle: "tab" },
                     :href => "#history-#{year[0]}" }
                    =year[0]
          .tab-content
            -@song_history.each do |year|
              .tab-pane.fade{:role => "tabpanel",
                             :id => "history-#{year[0]}",
                             :class => "#{ 'active in' if year == @song_history.first}" }
                -year[1].each do |month|
                  .letter-block
                    .letter-header
                      %h2=month[0].strftime("%b")
                    -month[1].each do |performance|
                      %h3.date=performance.date.strftime("%m/%d/%Y")
                      =simple_format performance.details
                      -performance.songs.each do |song|
                        =render song
  .tab-pane.fade#unused{ :role => "tabpanel"}
    .row
      .col-md-10.col-md-offset-1
        .letter-links.text-center
          -@songs_unused.each do |letter|
            = " | " unless letter == @songs_unused.first
            =link_to letter[0], "#heading-#{letter[0]}-unused",
                     :data => { turbolinks: false }
        -@songs_unused.each do |letter|
          .letter-block
            .letter-header{:id => "heading-#{letter[0]}-unused" }
              %h2= letter[0]
            -letter[1].each do |song|
              =render song, alphabetized: true

:javascript
  $('.nav-tabs a').click(function (e) {
    e.preventDefault();
    $(this).tab('show');
  });
/*******************************************************************************
* File: app/views/songs/show.html.haml
* Size: 3728 bytes
*******************************************************************************/

-provide :title, @song.title
-provide :bg, "pexels-photo-164821.jpeg"

.row
  .col-sm-6.col-md-8
    %h2=@song.title
    =simple_format @song.description
  .col-sm-6.col-md-4
    %h3{:style => "margin: 5px 0;"}
      %span.glyphicon.glyphicon-calendar
      Performance Dates
    -@song.performances.each do |performance|
      %br
      =performance.date.strftime("%b %e, %Y")
      -if performance.date.future?
        %span.date
          \-
          %em= "Coming Soon"
      =simple_format performance.details
      -unless performance.audio.blank?
        %audio{:controls => "controls",
               :controlsList => "nodownload"}
          %source{:type => performance.audio_content_type,
                  :src => performance.audio.url }
.row{:style => "margin-top: 20px;"}
  .col-md-8
    %h2 Parts
    Click on "Downloads" to the right of each part to find the Sheet Music,
    MP3, or MIDI files for that part.
    -@song.instruments.each do |instrument|
      .song-listing
        .clearfix
          %h3.pull-left=instrument.name
          - unless instrument.empty?
            .dropdown.pull-right
              %button{ :class => "btn btn-secondary dropdown-toggle",
                       :type => "button",
                       :id => "downloads#{instrument.id}",
                       :data => { toggle: "dropdown" },
                       :aria => { haspopup: "true",
                                  expanded: "true" } }
                Downloads
                %span.caret
              %ul.dropdown-menu{:aria => { labelledby: "downloads#{instrument.id}" } }
                - unless instrument.pdf_blob.nil?
                  %li
                    %a{:href => instrument.pdf_blob.service_url,
                       :target => "_blank" }
                      Sheet Music - PDF
                -if instrument.pdf_and_audio?
                  %li.divider{:role => "separator"}
                - unless instrument.mp3_blob.nil?
                  %li
                    %a{:href => instrument.mp3_blob.service_url,
                       :target => "_blank" }
                      Audio File - MP3
                -unless instrument.midi_blob.nil?
                  %li
                    %a{:href => instrument.midi_blob.service_url,
                       :target => "_blank" }
                      Audio File - MIDI
        -unless instrument.mp3_blob.nil?
          .row
            .col-xs-10.col-sm-11
              %audio{:controls     => "controls",
                     :controlsList => "nodownload",
                     :id           => "audio-#{instrument.name.parameterize}",
                     :data         => { repeat: false },
                     :onended      => "replay(this)"}
                %source{:type => instrument.mp3_blob.content_type,
                        :src  => instrument.mp3_blob.service_url}
            .col-xs-2.col-sm-1
              %button{ :class => "btn btn-default btn-repeat",
                       :data  => { id: "audio-#{instrument.name.parameterize}" },
                       :style => "margin-top: 20px;",
                       :title => "Toggle to loop audio continuously" }
                %span.glyphicon.glyphicon-refresh
  .col-md-4
    %h2 Rehearsals
    -if @song.rehearsals.any?
      .row
        -@song.rehearsals.each do |rehearsal|
          .col-sm-4.col-md-12
            =render rehearsal
    -else
      %p No rehearsals yet.
:javascript
  $(".btn-repeat").on("click", function(){
    var id = $(this).data("id");
    $(this).toggleClass("active");
    $("audio#" + id).data("repeat", $(this).hasClass("active"));
  });

  function replay(audio){
    if( $(audio).data("repeat") ){
      $(audio)[0].play();
    }
  }
/*******************************************************************************
* File: app/views/static_pages/about_us.html.haml
* Size: 422 bytes
*******************************************************************************/

-provide :title, "Who We Are"
-provide :bg, "pexels-photo-210764.jpeg"

.row
  .col-md-10.col-md-offset-1
    -@profiles.each do |profile|
      .profile-block.clearfix
        %h2
          =profile.name
          %small
            =profile.title
        - if profile.image.attached?
          = image_tag profile.image
        - else
          = image_tag "portrait-placeholder.jpg"
        %p=simple_format profile.bio
/*******************************************************************************
* File: app/views/static_pages/home.html.haml
* Size: 2692 bytes
*******************************************************************************/

%h2.text-center
  %span.nobreak Welcome to the
  %span.nobreak Cascade 6th Ward Choir's
  %span.nobreak Web Archive
%p{style: "margin-bottom: 20px;"}
  Here you can find music planned for the Cascade Sixth Ward Choir's upcoming
  performances, listen to individualized parts, print off sheet music, and
  listen to past performances and rehearsals.
.row
  .col-sm-5.col-sm-push-7.col-md-4.col-md-push-8.col-lg-3.col-lg-push-9
    .performance-block
      %strong Upcoming Performances:
      %br
      -if @performances.any?
        -@performances.each do |performance|
          %span.date= performance.date.strftime("%m/%d/%Y")
          =simple_format performance.details
          -performance.songs.each do |song|
            =link_to music_path(song.slug), class: "secondary" do
              %h2= song.title
            -unless song.primary_instrument.blank?
              -unless song.primary_instrument.mp3_blob.nil?
                %audio{:controls => "controls",
                       :controlsList => "nodownload"}
                  %source{:type => song.primary_instrument.mp3_blob.content_type,
                          :src => song.primary_instrument.mp3_blob.service_url }
          %br
      -else
        %p
          There are no scheduled peformances at this time.
      .clearfix
        =link_to music_index_path, class: "pull-right" do
          More Music&hellip;
    .rehearsal-block
      %strong Next Rehearsal:
      -unless @next_rehearsal.blank?
        %table
          %tr
            %td.text-primary= @next_rehearsal.date.strftime("%m/%d/%Y")
            %td.text-right= @next_rehearsal.host
          %tr
            %td.text-primary= @next_rehearsal.time
            %td.text-right= @next_rehearsal.venue
      -else
        %p The next rehearsal has not yet been scheduled.
      %strong Last Rehearsal:
      -unless @last_rehearsal.blank?
        %table
          %tr{style: "vertical-align: top"}
            %td.text-primary= @last_rehearsal.date.strftime("%m/%d/%Y")
            %td.text-right= @last_rehearsal.song_list
        =link_to "Download",
                 @last_rehearsal.audio.url,
                 class: "btn btn-secondary btn-lg #{'disabled' unless @last_rehearsal.audio.exists? }"
      -else
        %p The last rehearsal cannot be found.
      %br
      .clearfix
        =link_to rehearsals_path, class: "pull-right" do
          More Rehearsals&hellip;
  .col-sm-7.col-sm-pull-5.col-md-8.col-md-pull-4.col-lg-9.col-lg-pull-3
    .news-block
      %strong Lastest News:
      -@articles.each do |article|
        =render article
      .clearfix
        =link_to news_index_path, class: "pull-right" do
          More News&hellip;
/*******************************************************************************
* File: app/views/users/sessions/new.html.haml
* Size: 1032 bytes
*******************************************************************************/

.row{:style => "margin-top: 150px;"}
  .col-sm-4.col-sm-offset-4
    .panel.panel-primary
      .panel-heading
        %h2 Log in
      .panel-body
        = form_for resource,
                   :as => resource_name,
                   :url => session_path(resource_name) do |f|
          .field
            = f.label :email
            %br
            = f.email_field :email,
                            :autofocus => true,
                            :autocomplete => "email",
                            :class => "form-control"
          .field
            = f.label :password
            %br
            = f.password_field :password,
                               :autocomplete => "off",
                               :class => "form-control"
          -if devise_mapping.rememberable?
            .field
              = f.check_box :remember_me
              = f.label :remember_me
          .actions
            = f.submit "Log in",
                       :class => "btn btn-primary"
        = render "devise/shared/links"
/*******************************************************************************
* File: babel.config.js
* Size: 1897 bytes
*******************************************************************************/

module.exports = function(api) {
  var validEnv = ['development', 'test', 'production']
  var currentEnv = api.env()
  var isDevelopmentEnv = api.env('development')
  var isProductionEnv = api.env('production')
  var isTestEnv = api.env('test')

  if (!validEnv.includes(currentEnv)) {
    throw new Error(
      'Please specify a valid `NODE_ENV` or ' +
        '`BABEL_ENV` environment variables. Valid values are "development", ' +
        '"test", and "production". Instead, received: ' +
        JSON.stringify(currentEnv) +
        '.'
    )
  }

  return {
    presets: [
      isTestEnv && [
        '@babel/preset-env',
        {
          targets: {
            node: 'current'
          }
        }
      ],
      (isProductionEnv || isDevelopmentEnv) && [
        '@babel/preset-env',
        {
          forceAllTransforms: true,
          useBuiltIns: 'entry',
          corejs: 3,
          modules: false,
          exclude: ['transform-typeof-symbol']
        }
      ]
    ].filter(Boolean),
    plugins: [
      'babel-plugin-macros',
      '@babel/plugin-syntax-dynamic-import',
      isTestEnv && 'babel-plugin-dynamic-import-node',
      '@babel/plugin-transform-destructuring',
      [
        '@babel/plugin-proposal-class-properties',
        {
          loose: true
        }
      ],
      [
        '@babel/plugin-proposal-object-rest-spread',
        {
          useBuiltIns: true
        }
      ],
      [
        '@babel/plugin-proposal-private-methods',
        {
          loose: true
        }
      ],
      [
        '@babel/plugin-proposal-private-property-in-object',
        {
          loose: true
        }
      ],
      [
        '@babel/plugin-transform-runtime',
        {
          helpers: false
        }
      ],
      [
        '@babel/plugin-transform-regenerator',
        {
          async: false
        }
      ]
    ].filter(Boolean)
  }
}

/*******************************************************************************
* File: bin/bundle
* Size: 156 bytes
*******************************************************************************/

#!/usr/bin/env ruby
# frozen_string_literal: true

ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../Gemfile', __dir__)
load Gem.bin_path('bundler', 'bundle')

/*******************************************************************************
* File: bin/rails
* Size: 141 bytes
*******************************************************************************/

#!/usr/bin/env ruby
APP_PATH = File.expand_path("../config/application", __dir__)
require_relative "../config/boot"
require "rails/commands"

/*******************************************************************************
* File: bin/rake
* Size: 90 bytes
*******************************************************************************/

#!/usr/bin/env ruby
require_relative "../config/boot"
require "rake"
Rake.application.run

/*******************************************************************************
* File: bin/setup
* Size: 984 bytes
*******************************************************************************/

#!/usr/bin/env ruby
require "fileutils"

# path to your application root.
APP_ROOT = File.expand_path("..", __dir__)

def system!(*args)
  system(*args, exception: true)
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts "== Installing dependencies =="
  system! "gem install bundler --conservative"
  system("bundle check") || system!("bundle install")

  # puts "\n== Copying sample files =="
  # unless File.exist?("config/database.yml")
  #   FileUtils.cp "config/database.yml.sample", "config/database.yml"
  # end

  puts "\n== Preparing database =="
  system! "bin/rails db:prepare"

  puts "\n== Removing old logs and tempfiles =="
  system! "bin/rails log:clear tmp:clear"

  puts "\n== Restarting application server =="
  system! "bin/rails restart"
end

/*******************************************************************************
* File: bin/update
* Size: 808 bytes
*******************************************************************************/

#!/usr/bin/env ruby
# frozen_string_literal: true

require 'pathname'
require 'fileutils'
include FileUtils

# path to your application root.
APP_ROOT = Pathname.new File.expand_path('..', __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

chdir APP_ROOT do
  # This script is a way to update your development environment automatically.
  # Add necessary update steps to this file.

  puts '== Installing dependencies =='
  system! 'gem install bundler --conservative'
  system('bundle check') || system!('bundle install')

  puts "\n== Updating database =="
  system! 'bin/rails db:migrate'

  puts "\n== Removing old logs and tempfiles =="
  system! 'bin/rails log:clear tmp:clear'

  puts "\n== Restarting application server =="
  system! 'bin/rails restart'
end

/*******************************************************************************
* File: bin/webpack
* Size: 485 bytes
*******************************************************************************/

#!/usr/bin/env ruby
# frozen_string_literal: true

ENV['RAILS_ENV'] ||= ENV['RACK_ENV'] || 'development'
ENV['NODE_ENV']  ||= 'development'

require 'pathname'
ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../../Gemfile',
                                           Pathname.new(__FILE__).realpath)

require 'bundler/setup'

require 'webpacker'
require 'webpacker/webpack_runner'

APP_ROOT = File.expand_path('..', __dir__)
Dir.chdir(APP_ROOT) do
  Webpacker::WebpackRunner.run(ARGV)
end

/*******************************************************************************
* File: bin/webpack-dev-server
* Size: 490 bytes
*******************************************************************************/

#!/usr/bin/env ruby
# frozen_string_literal: true

ENV['RAILS_ENV'] ||= ENV['RACK_ENV'] || 'development'
ENV['NODE_ENV']  ||= 'development'

require 'pathname'
ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../../Gemfile',
                                           Pathname.new(__FILE__).realpath)

require 'bundler/setup'

require 'webpacker'
require 'webpacker/dev_server_runner'

APP_ROOT = File.expand_path('..', __dir__)
Dir.chdir(APP_ROOT) do
  Webpacker::DevServerRunner.run(ARGV)
end

/*******************************************************************************
* File: bin/yarn
* Size: 311 bytes
*******************************************************************************/

#!/usr/bin/env ruby
# frozen_string_literal: true

VENDOR_PATH = File.expand_path('..', __dir__)
Dir.chdir(VENDOR_PATH) do
  exec "yarnpkg #{ARGV.join(' ')}"
rescue Errno::ENOENT
  warn 'Yarn executable was not detected in the system.'
  warn 'Download Yarn at https://yarnpkg.com/en/docs/install'
  exit 1
end

/*******************************************************************************
* File: compile_project.sh
* Size: 6239 bytes
*******************************************************************************/

#!/usr/bin/env bash

output_file="project_compilation.txt"

# Clear or create the output file
echo "" > "$output_file"

# Array of directories to exclude (add more as needed)
excluded_dirs=(
  ".git"
  "node_modules"
  "tmp"
  "log"
  "public/assets"
  "public/packs"
  "public/packs-test"
  "storage"
  "app/assets/builds"
  "coverage"
  "vendor/bundle"
  "vendor/cache"
)

# Array of file extensions to exclude
excluded_extensions=(
  "jpg" "jpeg" "png" "gif" "ico" "svg" "eot" "ttf" "woff" "woff2"
  "pdf" "zip" "tar" "gz" "rar" "exe" "bin" "dat" "db" "sqlite3"
  "min.js" "min.css" "map" "chunk.js" "chunk.css"
)

# Specific files to exclude by name
excluded_files=(
  "yarn.lock"
  "package-lock.json"
  "Gemfile.lock"
)

# Function to check if a file should be excluded based on its path
should_exclude_path() {
  local file_path="$1"
  local filename=$(basename "$file_path")

  # Check if file is in an excluded directory
  for dir in "${excluded_dirs[@]}"; do
    if [[ "$file_path" == *"/$dir/"* || "$file_path" == *"/$dir" ]]; then
      return 0 # True, exclude this file
    fi
  done

  # Check if file is in the excluded files list
  for excl_file in "${excluded_files[@]}"; do
    if [[ "$filename" == "$excl_file" ]]; then
      echo "Skipping excluded file: $file_path"
      return 0 # True, exclude this file
    fi
  done

  # Exclude files larger than 300KB
  if [[ -f "$file_path" ]]; then
    local file_size=$(stat -f "%z" "$file_path" 2>/dev/null || stat -c "%s" "$file_path" 2>/dev/null)
    if [[ -n "$file_size" && "$file_size" -gt 307200 ]]; then
      echo "Skipping large file: $file_path ($file_size bytes)"
      return 0 # True, exclude this file
    fi
  fi

  return 1 # False, don't exclude
}

# Function to check if a file should be excluded based on its extension
should_exclude_extension() {
  local file="$1"
  local file_lower=$(echo "$file" | tr '[:upper:]' '[:lower:]')

  for ext in "${excluded_extensions[@]}"; do
    if [[ "$file_lower" == *".$ext" ]]; then
      return 0 # True, exclude this file
    fi
  done

  return 1 # False, don't exclude
}

# Function to check if a file is text based on extension
is_text_file() {
    local file="$1"
    local file_lower=$(echo "$file" | tr '[:upper:]' '[:lower:]')

    # Common text file extensions
    case "$file_lower" in
        *.txt|*.rb|*.py|*.js|*.jsx|*.ts|*.tsx|*.css|*.scss|*.sass|*.less|*.html|*.htm|*.haml|*.erb|*.slim|\
        *.yml|*.yaml|*.json|*.md|*.markdown|*.xml|*.conf|*.cfg|*.ini|*.sh|*.bash|*.zsh|*.fish|*.coffee|\
        *.rake|*.ru|*.gemspec|*.env|*.env.*|*.gitignore|*.dockerignore|*.editorconfig|*.eslintrc|\
        *.prettier*|*.babel*|*.postcss*|*.stylelint*|*.npmrc|*.yarnrc|*.rspec|\
        *.jshintrc|gemfile|rakefile|procfile|readme*|license*|changelog*|contributing*|dockerfile|\
        *.service|*.sql|makefile|*.pp|*.eex|*.leex|*.heex|*.vue|*.svelte|*.php|\
        *.java|*.scala|*.kt|*.kts|*.go|*.rs|*.toml|*.c|*.h|*.cpp|*.hpp|*.cs|*.fs|*.ex|*.exs)
            return 0  # It's a text file
            ;;
        *)
            # If no extension match, try checking the file content with 'file' command
            if command -v file >/dev/null 2>&1; then
                local mime_type=$(file --mime-type -b "$file")
                if [[ "$mime_type" == text/* ]]; then
                    return 0  # It's a text file based on mime type
                fi
            fi
            return 1  # Not a text file
            ;;
    esac
}

# Function to handle each file
process_file() {
    local file="$1"

    # Skip the output file to avoid an infinite loop
    if [[ "$(basename "$file")" == "$output_file" ]]; then
        echo "Skipping output file: $file"
        return
    fi

    # Check if path should be excluded
    if should_exclude_path "$file"; then
        echo "Skipping excluded path: $file"
        return
    fi

    # Check if extension should be excluded
    if should_exclude_extension "$file"; then
        echo "Skipping excluded extension: $file"
        return
    fi

    # Skip if file is not a text file
    if ! is_text_file "$file"; then
        echo "Skipping non-text file: $file"
        return
    fi

    # Check if file exists and is readable
    if [[ ! -f "$file" || ! -r "$file" ]]; then
        echo "Warning: Cannot read file: $file"
        return
    fi

    # Check if file is empty or very small (less than 10 bytes)
    local file_size=$(stat -f "%z" "$file" 2>/dev/null || stat -c "%s" "$file" 2>/dev/null)
    if [[ -n "$file_size" && "$file_size" -lt 10 ]]; then
        echo "Skipping very small file: $file ($file_size bytes)"
        return
    fi

    # Add file header and contents
    {
        printf "\n/*******************************************************************************\n"
        printf "* File: %s\n" "$file"
        printf "* Size: %s bytes\n" "$file_size"
        printf "*******************************************************************************/\n\n"
        cat "$file"
    } >> "$output_file"

    echo "Processed: $file"
}

# Get list of files, excluding directories from the excluded list
find_files() {
    local exclude_params=""

    # Build exclude parameters for find command
    for dir in "${excluded_dirs[@]}"; do
        exclude_params="$exclude_params -not -path '*/$dir/*'"
    done

    # Try to use git ls-files if in a git repository
    if git ls-files > /dev/null 2>&1; then
        echo "Using git ls-files to find project files..."
        git ls-files | grep -v "^$output_file$"
    else
        echo "Using find command to locate project files..."
        # Using eval to execute the dynamic find command with all the exclude paths
        eval "find . -type f $exclude_params"
    fi
}

# Main execution
echo "Starting project compilation..."
echo "Output file: $output_file"

# Process each file
find_files | while IFS= read -r file; do
    if [[ -f "$file" ]]; then
        process_file "$file"
    fi
done

echo "Compilation complete. Output saved to $output_file"

# Print some stats about the compilation
echo "Compiled file stats:"
echo "- Lines: $(wc -l < "$output_file")"
echo "- Size: $(du -h "$output_file" | cut -f1)"
echo "- Files processed: $(grep -c "File: " "$output_file")"
/*******************************************************************************
* File: config.ru
* Size: 161 bytes
*******************************************************************************/

# frozen_string_literal: true

# This file is used by Rack-based servers to start the application.

require_relative 'config/environment'

run Rails.application

/*******************************************************************************
* File: config/application.rb
* Size: 1073 bytes
*******************************************************************************/

# frozen_string_literal: true

require_relative 'boot'

require 'rails/all'

# Require the gems listed in Gemfile, including any gems
# you've limited to :test, :development, or :production.
Bundler.require(*Rails.groups)

module Choir
  class Application < Rails::Application
    # Initialize configuration defaults for originally generated Rails version.
    config.load_defaults 7.0
    config.time_zone = 'Mountain Time (US & Canada)'

    # Please, add to the `ignore` list any other `lib` subdirectories that do
    # not contain `.rb` files, or that should not be reloaded or eager loaded.
    # Common ones are `templates`, `generators`, or `middleware`, for example.
    config.autoload_lib(ignore: %w[assets tasks])

    # Configuration for the application, engines, and railties goes here.
    #
    # These settings can be overridden in specific environments using the files
    # in config/environments, which are processed later.
    #
    # config.time_zone = "Central Time (US & Canada)"
    # config.eager_load_paths << Rails.root.join("extras")
  end
end

/*******************************************************************************
* File: config/boot.rb
* Size: 159 bytes
*******************************************************************************/

# frozen_string_literal: true

ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../Gemfile', __dir__)

require 'bundler/setup' # Set up gems listed in the Gemfile.

/*******************************************************************************
* File: config/cable.yml
* Size: 151 bytes
*******************************************************************************/

development:
  adapter: async

test:
  adapter: async

production:
  adapter: redis
  url: redis://localhost:6379/1
  channel_prefix: choir_production

/*******************************************************************************
* File: config/database.yml
* Size: 493 bytes
*******************************************************************************/

default: &default
  adapter: postgresql
  encoding: unicode
  host: <%= ENV.fetch('DATABASE_HOST', '172.21.0.2') %>
  username: <%= ENV.fetch('POSTGRES_USER', 'choir_postgres') %>
  password: <%= ENV.fetch('POSTGRES_PASSWORD', 'password') %>
  port: <%= ENV.fetch("DATABASE_PORT") { 5432 } %>
  pool: <%= ENV.fetch("RAILS_MAX_THREADS") { 5 } %>
  timeout: 5000

development:
  <<: *default
  database: choirsite_dev

test:
  <<: *default
  database: choirsite_test

production:
  <<: *default

/*******************************************************************************
* File: config/environment.rb
* Size: 159 bytes
*******************************************************************************/

# frozen_string_literal: true

# Load the Rails application.
require_relative 'application'

# Initialize the Rails application.
Rails.application.initialize!

/*******************************************************************************
* File: config/environments/development.rb
* Size: 2703 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'active_support/core_ext/integer/time'

Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # In the development environment your application's code is reloaded any time
  # it changes. This slows down response time but is perfect for development
  # since you don't have to restart the web server when you make code changes.
  config.enable_reloading = true

  # Do not eager load code on boot.
  config.eager_load = false

  # Show full error reports.
  config.consider_all_requests_local = true

  # Enable server timing
  config.server_timing = true

  # Enable/disable caching. By default caching is disabled.
  # Run rails dev:cache to toggle caching.
  if Rails.root.join('tmp/caching-dev.txt').exist?
    config.action_controller.perform_caching = true
    config.action_controller.enable_fragment_cache_logging = true

    config.cache_store = :memory_store
    config.public_file_server.headers = {
      'Cache-Control' => "public, max-age=#{2.days.to_i}"
    }
  else
    config.action_controller.perform_caching = false

    config.cache_store = :null_store
  end

  # Store uploaded files on the local file system (see config/storage.yml for options).
  config.active_storage.service = :local

  # Don't care if the mailer can't send.
  config.action_mailer.raise_delivery_errors = false

  config.action_mailer.perform_caching = false

  # Print deprecation notices to the Rails logger.
  config.active_support.deprecation = :log

  # Raise exceptions for disallowed deprecations.
  config.active_support.disallowed_deprecation = :raise

  # Tell Active Support which deprecation messages to disallow.
  config.active_support.disallowed_deprecation_warnings = []

  # Raise an error on page load if there are pending migrations.
  config.active_record.migration_error = :page_load

  # Highlight code that triggered database queries in logs.
  config.active_record.verbose_query_logs = true

  # Highlight code that enqueued background job in logs.
  config.active_job.verbose_enqueue_logs = true

  # Suppress logger output for asset requests.
  config.assets.quiet = true

  # Raises error for missing translations.
  # config.i18n.raise_on_missing_translations = true

  # Annotate rendered view with file names.
  # config.action_view.annotate_rendered_view_with_filenames = true

  # Uncomment if you wish to allow Action Cable access from any origin.
  # config.action_cable.disable_request_forgery_protection = true

  # Raise error when a before_action's only/except options reference missing actions
  config.action_controller.raise_on_missing_callback_actions = true
end

/*******************************************************************************
* File: config/environments/production.rb
* Size: 4388 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'active_support/core_ext/integer/time'

Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # Code is not reloaded between requests.
  config.enable_reloading = false

  # Eager load code on boot. This eager loads most of Rails and
  # your application in memory, allowing both threaded web servers
  # and those relying on copy on write to perform better.
  # Rake tasks automatically ignore this option for performance.
  config.eager_load = true

  # Full error reports are disabled and caching is turned on.
  config.consider_all_requests_local = false
  config.action_controller.perform_caching = true

  # Ensures that a master key has been made available in ENV["RAILS_MASTER_KEY"], config/master.key, or an environment
  # key such as config/credentials/production.key. This key is used to decrypt credentials (and other encrypted files).
  # config.require_master_key = true

  # Disable serving static files from `public/`, relying on NGINX/Apache to do so instead.
  # config.public_file_server.enabled = false

  # Compress CSS using a preprocessor.
  # config.assets.css_compressor = :sass

  # Do not fall back to assets pipeline if a precompiled asset is missed.
  config.assets.compile = false

  # Enable serving of images, stylesheets, and JavaScripts from an asset server.
  # config.asset_host = "http://assets.example.com"

  # Specifies the header that your server uses for sending files.
  # config.action_dispatch.x_sendfile_header = "X-Sendfile" # for Apache
  # config.action_dispatch.x_sendfile_header = "X-Accel-Redirect" # for NGINX

  # Store uploaded files on the local file system (see config/storage.yml for options).
  config.active_storage.service = :local

  # Mount Action Cable outside main process or domain.
  # config.action_cable.mount_path = nil
  # config.action_cable.url = "wss://example.com/cable"
  # config.action_cable.allowed_request_origins = [ "http://example.com", /http:\/\/example.*/ ]

  # Assume all access to the app is happening through a SSL-terminating reverse proxy.
  # Can be used together with config.force_ssl for Strict-Transport-Security and secure cookies.
  # config.assume_ssl = true

  # Force all access to the app over SSL, use Strict-Transport-Security, and use secure cookies.
  config.force_ssl = true

  # Log to STDOUT by default
  config.logger = ActiveSupport::Logger.new($stdout)
                                       .tap  { |logger| logger.formatter = Logger::Formatter.new }
                                       .then { |logger| ActiveSupport::TaggedLogging.new(logger) }

  # Prepend all log lines with the following tags.
  config.log_tags = [:request_id]

  # "info" includes generic and useful information about system operation, but avoids logging too much
  # information to avoid inadvertent exposure of personally identifiable information (PII). If you
  # want to log everything, set the level to "debug".
  config.log_level = ENV.fetch('RAILS_LOG_LEVEL', 'info')

  # Use a different cache store in production.
  # config.cache_store = :mem_cache_store

  # Use a real queuing backend for Active Job (and separate queues per environment).
  # config.active_job.queue_adapter = :resque
  # config.active_job.queue_name_prefix = "choir_production"

  config.action_mailer.perform_caching = false

  # Ignore bad email addresses and do not raise email delivery errors.
  # Set this to true and configure the email server for immediate delivery to raise delivery errors.
  # config.action_mailer.raise_delivery_errors = false

  # Enable locale fallbacks for I18n (makes lookups for any locale fall back to
  # the I18n.default_locale when a translation cannot be found).
  config.i18n.fallbacks = true

  # Don't log any deprecations.
  config.active_support.report_deprecations = false

  # Do not dump schema after migrations.
  config.active_record.dump_schema_after_migration = false

  # Enable DNS rebinding protection and other `Host` header attacks.
  # config.hosts = [
  #   "example.com",     # Allow requests from example.com
  #   /.*\.example\.com/ # Allow requests from subdomains like `www.example.com`
  # ]
  # Skip DNS rebinding protection for the default health check endpoint.
  # config.host_authorization = { exclude: ->(request) { request.path == "/up" } }
end

/*******************************************************************************
* File: config/environments/test.rb
* Size: 2674 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'active_support/core_ext/integer/time'

# The test environment is used exclusively to run your application's
# test suite. You never need to work with it otherwise. Remember that
# your test database is "scratch space" for the test suite and is wiped
# and recreated between test runs. Don't rely on the data there!

Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # While tests run files are not watched, reloading is not necessary.
  config.enable_reloading = false

  # Eager loading loads your entire application. When running a single test locally,
  # this is usually not necessary, and can slow down your test suite. However, it's
  # recommended that you enable it in continuous integration systems to ensure eager
  # loading is working properly before deploying your code.
  config.eager_load = ENV['CI'].present?

  # Configure public file server for tests with Cache-Control for performance.
  config.public_file_server.enabled = true
  config.public_file_server.headers = {
    'Cache-Control' => "public, max-age=#{1.hour.to_i}"
  }

  # Show full error reports and disable caching.
  config.consider_all_requests_local = true
  config.action_controller.perform_caching = false
  config.cache_store = :null_store

  # Render exception templates for rescuable exceptions and raise for other exceptions.
  config.action_dispatch.show_exceptions = :rescuable

  # Disable request forgery protection in test environment.
  config.action_controller.allow_forgery_protection = false

  # Store uploaded files on the local file system in a temporary directory.
  config.active_storage.service = :test

  config.action_mailer.perform_caching = false

  # Tell Action Mailer not to deliver emails to the real world.
  # The :test delivery method accumulates sent emails in the
  # ActionMailer::Base.deliveries array.
  config.action_mailer.delivery_method = :test

  # Print deprecation notices to the stderr.
  config.active_support.deprecation = :stderr

  # Raise exceptions for disallowed deprecations.
  config.active_support.disallowed_deprecation = :raise

  # Tell Active Support which deprecation messages to disallow.
  config.active_support.disallowed_deprecation_warnings = []

  # Raises error for missing translations.
  # config.i18n.raise_on_missing_translations = true

  # Annotate rendered view with file names.
  # config.action_view.annotate_rendered_view_with_filenames = true

  # Raise error when a before_action's only/except options reference missing actions
  config.action_controller.raise_on_missing_callback_actions = true
end

/*******************************************************************************
* File: config/initializers/000_logger.rb
* Size: 648 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'logger'
require 'active_support'

# Ensure Logger is loaded before it's used by ActiveSupport
Logger.new($stdout) unless defined?(Logger)

module ActiveSupport
  # Module for handling Logger Thread Safe Level
  module LoggerThreadSafeLevel
    def self.included(base)
      base.extend(ClassMethods)
    end

    # Module for handling Class methods for Logger Threads.
    module ClassMethods
      def local_level
        IsolatedExecutionState[:logger_thread_safe_level]
      end

      def local_level=(level)
        IsolatedExecutionState[:logger_thread_safe_level] = level
      end
    end
  end
end

/*******************************************************************************
* File: config/initializers/assets.rb
* Size: 712 bytes
*******************************************************************************/

# frozen_string_literal: true

# Be sure to restart your server when you modify this file.

# Version of your assets, change this if you want to expire all your assets.
Rails.application.config.assets.version = '1.0'

# Add additional assets to the asset load path.
Rails.application.config.assets.paths << Rails.root.join('app/assets/builds')
Rails.application.config.assets.paths << Rails.root.join('node_modules/bootstrap-icons/font')
Rails.application.config.assets.build_paths = %w[app/assets/builds]

# Precompile additional assets.
# application.js, application.css, and all non-JS/CSS in the app/assets
# folder are already added.
# Rails.application.config.assets.precompile += %w( admin.js admin.css )

/*******************************************************************************
* File: config/initializers/content_security_policy.rb
* Size: 1102 bytes
*******************************************************************************/

# frozen_string_literal: true

# Be sure to restart your server when you modify this file.

# Define an application-wide content security policy.
# See the Securing Rails Applications Guide for more information:
# https://guides.rubyonrails.org/security.html#content-security-policy-header

# Rails.application.configure do
#   config.content_security_policy do |policy|
#     policy.default_src :self, :https
#     policy.font_src    :self, :https, :data
#     policy.img_src     :self, :https, :data
#     policy.object_src  :none
#     policy.script_src  :self, :https
#     policy.style_src   :self, :https
#     # Specify URI for violation reports
#     # policy.report_uri "/csp-violation-report-endpoint"
#   end
#
#   # Generate session nonces for permitted importmap, inline scripts, and inline styles.
#   config.content_security_policy_nonce_generator = ->(request) { request.session.id.to_s }
#   config.content_security_policy_nonce_directives = %w(script-src style-src)
#
#   # Report violations without enforcing the policy.
#   # config.content_security_policy_report_only = true
# end

/*******************************************************************************
* File: config/initializers/cookies_serializer.rb
* Size: 275 bytes
*******************************************************************************/

# frozen_string_literal: true

# Be sure to restart your server when you modify this file.

# Specify a serializer for the signed and encrypted cookie jars.
# Valid options are :json, :marshal, and :hybrid.
Rails.application.config.action_dispatch.cookies_serializer = :json

/*******************************************************************************
* File: config/initializers/devise.rb
* Size: 13431 bytes
*******************************************************************************/

# frozen_string_literal: true

# Use this hook to configure devise mailer, warden hooks and so forth.
# Many of these configuration options can be set straight in your model.
Devise.setup do |config|
  # The secret key used by Devise. Devise uses this key to generate
  # random tokens. Changing this key will render invalid all existing
  # confirmation, reset password and unlock tokens in the database.
  # Devise will use the `secret_key_base` as its `secret_key`
  # by default. You can change it below and use your own secret key.
  # config.secret_key = 'a' * 128

  # ==> Mailer Configuration
  # Configure the e-mail address which will be shown in Devise::Mailer,
  # note that it will be overwritten if you use your own mailer class
  # with default "from" parameter.
  config.mailer_sender = 'please-change-me-at-config-initializers-devise@example.com'

  # Configure the class responsible to send e-mails.
  # config.mailer = 'Devise::Mailer'

  # Configure the parent class responsible to send e-mails.
  # config.parent_mailer = 'ActionMailer::Base'

  # ==> ORM configuration
  # Load and configure the ORM. Supports :active_record (default) and
  # :mongoid (bson_ext recommended) by default. Other ORMs may be
  # available as additional gems.
  require 'devise/orm/active_record'

  # ==> Configuration for any authentication mechanism
  # Configure which keys are used when authenticating a user. The default is
  # just :email. You can configure it to use [:username, :subdomain], so for
  # authenticating a user, both parameters are required. Remember that those
  # parameters are used only when authenticating and not when retrieving from
  # session. If you need permissions, you should implement that in a before filter.
  # You can also supply a hash where the value is a boolean determining whether
  # or not authentication should be aborted when the value is not present.
  # config.authentication_keys = [:email]

  # Configure parameters from the request object used for authentication. Each entry
  # given should be a request method and it will automatically be passed to the
  # find_for_authentication method and considered in your model lookup. For instance,
  # if you set :request_keys to [:subdomain], :subdomain will be used on authentication.
  # The same considerations mentioned for authentication_keys also apply to request_keys.
  # config.request_keys = []

  # Configure which authentication keys should be case-insensitive.
  # These keys will be downcased upon creating or modifying a user and when used
  # to authenticate or find a user. Default is :email.
  config.case_insensitive_keys = [:email]

  # Configure which authentication keys should have whitespace stripped.
  # These keys will have whitespace before and after removed upon creating or
  # modifying a user and when used to authenticate or find a user. Default is :email.
  config.strip_whitespace_keys = [:email]

  # Tell if authentication through request.params is enabled. True by default.
  # It can be set to an array that will enable params authentication only for the
  # given strategies, for example, `config.params_authenticatable = [:database]` will
  # enable it only for database (email + password) authentication.
  # config.params_authenticatable = true

  # Tell if authentication through HTTP Auth is enabled. False by default.
  # It can be set to an array that will enable http authentication only for the
  # given strategies, for example, `config.http_authenticatable = [:database]` will
  # enable it only for database authentication. The supported strategies are:
  # :database      = Support basic authentication with authentication key + password
  # config.http_authenticatable = false

  # If 401 status code should be returned for AJAX requests. True by default.
  # config.http_authenticatable_on_xhr = true

  # The realm used in Http Basic Authentication. 'Application' by default.
  # config.http_authentication_realm = 'Application'

  # It will change confirmation, password recovery and other workflows
  # to behave the same regardless if the e-mail provided was right or wrong.
  # Does not affect registerable.
  # config.paranoid = true

  # By default Devise will store the user in session. You can skip storage for
  # particular strategies by setting this option.
  # Notice that if you are skipping storage for all authentication paths, you
  # may want to disable generating routes to Devise's sessions controller by
  # passing skip: :sessions to `devise_for` in your config/routes.rb
  config.skip_session_storage = [:http_auth]

  # By default, Devise cleans up the CSRF token on authentication to
  # avoid CSRF token fixation attacks. This means that, when using AJAX
  # requests for sign in and sign up, you need to get a new CSRF token
  # from the server. You can disable this option at your own risk.
  # config.clean_up_csrf_token_on_authentication = true

  # When false, Devise will not attempt to reload routes on eager load.
  # This can reduce the time taken to boot the app but if your application
  # requires the Devise mappings to be loaded during boot time the application
  # won't boot properly.
  # config.reload_routes = true

  # ==> Configuration for :database_authenticatable
  # For bcrypt, this is the cost for hashing the password and defaults to 11. If
  # using other algorithms, it sets how many times you want the password to be hashed.
  #
  # Limiting the stretches to just one in testing will increase the performance of
  # your test suite dramatically. However, it is STRONGLY RECOMMENDED to not use
  # a value less than 10 in other environments. Note that, for bcrypt (the default
  # algorithm), the cost increases exponentially with the number of stretches (e.g.
  # a value of 20 is already extremely slow: approx. 60 seconds for 1 calculation).
  config.stretches = Rails.env.test? ? 1 : 11

  # Set up a pepper to generate the hashed password.
  # config.pepper = 'a' * 128

  # Send a notification to the original email when the user's email is changed.
  # config.send_email_changed_notification = false

  # Send a notification email when the user's password is changed.
  # config.send_password_change_notification = false

  # ==> Configuration for :confirmable
  # A period that the user is allowed to access the website even without
  # confirming their account. For instance, if set to 2.days, the user will be
  # able to access the website for two days without confirming their account,
  # access will be blocked just in the third day. Default is 0.days, meaning
  # the user cannot access the website without confirming their account.
  # config.allow_unconfirmed_access_for = 2.days

  # A period that the user is allowed to confirm their account before their
  # token becomes invalid. For example, if set to 3.days, the user can confirm
  # their account within 3 days after the mail was sent, but on the fourth day
  # their account can't be confirmed with the token any more.
  # Default is nil, meaning there is no restriction on how long a user can take
  # before confirming their account.
  # config.confirm_within = 3.days

  # If true, requires any email changes to be confirmed (exactly the same way as
  # initial account confirmation) to be applied. Requires additional unconfirmed_email
  # db field (see migrations). Until confirmed, new email is stored in
  # unconfirmed_email column, and copied to email column on successful confirmation.
  config.reconfirmable = true

  # Defines which key will be used when confirming an account
  # config.confirmation_keys = [:email]

  # ==> Configuration for :rememberable
  # The time the user will be remembered without asking for credentials again.
  # config.remember_for = 2.weeks

  # Invalidates all the remember me tokens when the user signs out.
  config.expire_all_remember_me_on_sign_out = true

  # If true, extends the user's remember period when remembered via cookie.
  # config.extend_remember_period = false

  # Options to be passed to the created cookie. For instance, you can set
  # secure: true in order to force SSL only cookies.
  # config.rememberable_options = {}

  # ==> Configuration for :validatable
  # Range for password length.
  config.password_length = 8..128

  # Email regex used to validate email formats. It simply asserts that
  # one (and only one) @ exists in the given string. This is mainly
  # to give user feedback and not to assert the e-mail validity.
  config.email_regexp = /\A[^@\s]+@[^@\s]+\z/

  # ==> Configuration for :timeoutable
  # The time you want to timeout the user session without activity. After this
  # time the user will be asked for credentials again. Default is 30 minutes.
  # config.timeout_in = 30.minutes

  # ==> Configuration for :lockable
  # Defines which strategy will be used to lock an account.
  # :failed_attempts = Locks an account after a number of failed attempts to sign in.
  # :none            = No lock strategy. You should handle locking by yourself.
  # config.lock_strategy = :failed_attempts

  # Defines which key will be used when locking and unlocking an account
  # config.unlock_keys = [:email]

  # Defines which strategy will be used to unlock an account.
  # :email = Sends an unlock link to the user email
  # :time  = Re-enables login after a certain amount of time (see :unlock_in below)
  # :both  = Enables both strategies
  # :none  = No unlock strategy. You should handle unlocking by yourself.
  # config.unlock_strategy = :both

  # Number of authentication tries before locking an account if lock_strategy
  # is failed attempts.
  # config.maximum_attempts = 20

  # Time interval to unlock the account if :time is enabled as unlock_strategy.
  # config.unlock_in = 1.hour

  # Warn on the last attempt before the account is locked.
  # config.last_attempt_warning = true

  # ==> Configuration for :recoverable
  #
  # Defines which key will be used when recovering the password for an account
  # config.reset_password_keys = [:email]

  # Time interval you can reset your password with a reset password key.
  # Don't put a too small interval or your users won't have the time to
  # change their passwords.
  config.reset_password_within = 6.hours

  # When set to false, does not sign a user in automatically after their password is
  # reset. Defaults to true, so a user is signed in automatically after a reset.
  # config.sign_in_after_reset_password = true

  # ==> Configuration for :encryptable
  # Allow you to use another hashing or encryption algorithm besides bcrypt (default).
  # You can use :sha1, :sha512 or algorithms from others authentication tools as
  # :clearance_sha1, :authlogic_sha512 (then you should set stretches above to 20
  # for default behavior) and :restful_authentication_sha1 (then you should set
  # stretches to 10, and copy REST_AUTH_SITE_KEY to pepper).
  #
  # Require the `devise-encryptable` gem when using anything other than bcrypt
  # config.encryptor = :sha512

  # ==> Scopes configuration
  # Turn scoped views on. Before rendering "sessions/new", it will first check for
  # "users/sessions/new". It's turned off by default because it's slower if you
  # are using only default views.
  # config.scoped_views = false

  # Configure the default scope given to Warden. By default it's the first
  # devise role declared in your routes (usually :user).
  # config.default_scope = :user

  # Set this configuration to false if you want /users/sign_out to sign out
  # only the current scope. By default, Devise signs out all scopes.
  # config.sign_out_all_scopes = true

  # ==> Navigation configuration
  # Lists the formats that should be treated as navigational. Formats like
  # :html, should redirect to the sign in page when the user does not have
  # access, but formats like :xml or :json, should return 401.
  #
  # If you have any extra navigational formats, like :iphone or :mobile, you
  # should add them to the navigational formats lists.
  #
  # The "*/*" below is required to match Internet Explorer requests.
  # config.navigational_formats = ['*/*', :html]

  # The default HTTP method used to sign out a resource. Default is :delete.
  config.sign_out_via = :delete

  # ==> OmniAuth
  # Add a new OmniAuth provider. Check the wiki for more information on setting
  # up on your models and hooks.
  # config.omniauth :github, 'APP_ID', 'APP_SECRET', scope: 'user,public_repo'

  # ==> Warden configuration
  # If you want to use other strategies, that are not supported by Devise, or
  # change the failure app, you can configure them inside the config.warden block.
  #
  # config.warden do |manager|
  #   manager.intercept_401 = false
  #   manager.default_strategies(scope: :user).unshift :some_external_strategy
  # end

  # ==> Mountable engine configurations
  # When using Devise inside an engine, let's call it `MyEngine`, and this engine
  # is mountable, there are some extra configurations to be taken into account.
  # The following options are available, assuming the engine is mounted as:
  #
  #     mount MyEngine, at: '/my_engine'
  #
  # The router that invoked `devise_for`, in the example above, would be:
  # config.router_name = :my_engine
  #
  # When using OmniAuth, Devise cannot automatically set OmniAuth path,
  # so you need to do it manually. For the users scope, it would be:
  # config.omniauth_path_prefix = '/my_engine/users/auth'
end

/*******************************************************************************
* File: config/initializers/filter_parameter_logging.rb
* Size: 464 bytes
*******************************************************************************/

# frozen_string_literal: true

# Be sure to restart your server when you modify this file.

# Configure parameters to be partially matched (e.g. passw matches password) and filtered from the log file.
# Use this to limit dissemination of sensitive information.
# See the ActiveSupport::ParameterFilter documentation for supported notations and behaviors.
Rails.application.config.filter_parameters += %i[
  passw secret token _key crypt salt certificate otp ssn
]

/*******************************************************************************
* File: config/initializers/inflections.rb
* Size: 680 bytes
*******************************************************************************/

# frozen_string_literal: true

# Be sure to restart your server when you modify this file.

# Add new inflection rules using the following format. Inflections
# are locale specific, and you may define rules for as many different
# locales as you wish. All of these examples are active by default:
# ActiveSupport::Inflector.inflections(:en) do |inflect|
#   inflect.plural /^(ox)$/i, "\\1en"
#   inflect.singular /^(ox)en/i, "\\1"
#   inflect.irregular "person", "people"
#   inflect.uncountable %w( fish sheep )
# end

# These inflection rules are supported but not enabled by default:
# ActiveSupport::Inflector.inflections(:en) do |inflect|
#   inflect.acronym "RESTful"
# end

/*******************************************************************************
* File: config/initializers/invisible_captcha.rb
* Size: 379 bytes
*******************************************************************************/

# frozen_string_literal: true

# In test mode, we want controllable behavior
if Rails.env.test?
  InvisibleCaptcha.setup do |config|
    # Keep timestamp enabled for specific tests
    # config.timestamp_enabled = true

    # Set a predictable honeypot
    config.honeypots = ['choir_part']

    # Lower threshold to speed up tests
    # config.timestamp_threshold = 1
  end
end

/*******************************************************************************
* File: config/initializers/mime_types.rb
* Size: 187 bytes
*******************************************************************************/

# frozen_string_literal: true

# Be sure to restart your server when you modify this file.

# Add new mime types for use in respond_to blocks:
# Mime::Type.register "text/richtext", :rtf

/*******************************************************************************
* File: config/initializers/new_framework_defaults_7_1.rb
* Size: 12214 bytes
*******************************************************************************/

# frozen_string_literal: true

# Be sure to restart your server when you modify this file.
#
# This file eases your Rails 7.1 framework defaults upgrade.
#
# Uncomment each configuration one by one to switch to the new default.
# Once your application is ready to run with all new defaults, you can remove
# this file and set the `config.load_defaults` to `7.1`.
#
# Read the Guide for Upgrading Ruby on Rails for more info on each option.
# https://guides.rubyonrails.org/upgrading_ruby_on_rails.html

###
# No longer add autoloaded paths into `$LOAD_PATH`. This means that you won't be able
# to manually require files that are managed by the autoloader, which you shouldn't do anyway.
#
# This will reduce the size of the load path, making `require` faster if you don't use bootsnap, or reduce the size
# of the bootsnap cache if you use it.
#
# To set this configuration, add the following line to `config/application.rb` (NOT this file):
#   config.add_autoload_paths_to_load_path = false

###
# Remove the default X-Download-Options headers since it is used only by Internet Explorer.
# If you need to support Internet Explorer, add back `"X-Download-Options" => "noopen"`.
#++
# Rails.application.config.action_dispatch.default_headers = {
#   "X-Frame-Options" => "SAMEORIGIN",
#   "X-XSS-Protection" => "0",
#   "X-Content-Type-Options" => "nosniff",
#   "X-Permitted-Cross-Domain-Policies" => "none",
#   "Referrer-Policy" => "strict-origin-when-cross-origin"
# }

###
# Do not treat an `ActionController::Parameters` instance
# as equal to an equivalent `Hash` by default.
#++
# Rails.application.config.action_controller.allow_deprecated_parameters_hash_equality = false

###
# Active Record Encryption now uses SHA-256 as its hash digest algorithm.
#
# There are 3 scenarios to consider.
#
# 1. If you have data encrypted with previous Rails versions, and you have
# +config.active_support.key_generator_hash_digest_class+ configured as SHA1 (the default
# before Rails 7.0), you need to configure SHA-1 for Active Record Encryption too:
#++
# Rails.application.config.active_record.encryption.hash_digest_class = OpenSSL::Digest::SHA1
#
# 2. If you have +config.active_support.key_generator_hash_digest_class+ configured as SHA256 (the new default
# in 7.0), then you need to configure SHA-256 for Active Record Encryption:
#++
# Rails.application.config.active_record.encryption.hash_digest_class = OpenSSL::Digest::SHA256
#
# 3. If you don't currently have data encrypted with Active Record encryption, you can disable this setting to
# configure the default behavior starting 7.1+:
#++
# Rails.application.config.active_record.encryption.support_sha1_for_non_deterministic_encryption = false

###
# No longer run after_commit callbacks on the first of multiple Active Record
# instances to save changes to the same database row within a transaction.
# Instead, run these callbacks on the instance most likely to have internal
# state which matches what was committed to the database, typically the last
# instance to save.
#++
# Rails.application.config.active_record.run_commit_callbacks_on_first_saved_instances_in_transaction = false

###
# Configures SQLite with a strict strings mode, which disables double-quoted string literals.
#
# SQLite has some quirks around double-quoted string literals.
# It first tries to consider double-quoted strings as identifier names, but if they don't exist
# it then considers them as string literals. Because of this, typos can silently go unnoticed.
# For example, it is possible to create an index for a non existing column.
# See https://www.sqlite.org/quirks.html#double_quoted_string_literals_are_accepted for more details.
#++
# Rails.application.config.active_record.sqlite3_adapter_strict_strings_by_default = true

###
# Disable deprecated singular associations names.
#++
# Rails.application.config.active_record.allow_deprecated_singular_associations_name = false

###
# Enable the Active Job `BigDecimal` argument serializer, which guarantees
# roundtripping. Without this serializer, some queue adapters may serialize
# `BigDecimal` arguments as simple (non-roundtrippable) strings.
#
# When deploying an application with multiple replicas, old (pre-Rails 7.1)
# replicas will not be able to deserialize `BigDecimal` arguments from this
# serializer. Therefore, this setting should only be enabled after all replicas
# have been successfully upgraded to Rails 7.1.
#++
# Rails.application.config.active_job.use_big_decimal_serializer = true

###
# Specify if an `ArgumentError` should be raised if `Rails.cache` `fetch` or
# `write` are given an invalid `expires_at` or `expires_in` time.
# Options are `true`, and `false`. If `false`, the exception will be reported
# as `handled` and logged instead.
#++
# Rails.application.config.active_support.raise_on_invalid_cache_expiration_time = true

###
# Specify whether Query Logs will format tags using the SQLCommenter format
# (https://open-telemetry.github.io/opentelemetry-sqlcommenter/), or using the legacy format.
# Options are `:legacy` and `:sqlcommenter`.
#++
# Rails.application.config.active_record.query_log_tags_format = :sqlcommenter

###
# Specify the default serializer used by `MessageEncryptor` and `MessageVerifier`
# instances.
#
# The legacy default is `:marshal`, which is a potential vector for
# deserialization attacks in cases where a message signing secret has been
# leaked.
#
# In Rails 7.1, the new default is `:json_allow_marshal` which serializes and
# deserializes with `ActiveSupport::JSON`, but can fall back to deserializing
# with `Marshal` so that legacy messages can still be read.
#
# In Rails 7.2, the default will become `:json` which serializes and
# deserializes with `ActiveSupport::JSON` only.
#
# Alternatively, you can choose `:message_pack` or `:message_pack_allow_marshal`,
# which serialize with `ActiveSupport::MessagePack`. `ActiveSupport::MessagePack`
# can roundtrip some Ruby types that are not supported by JSON, and may provide
# improved performance, but it requires the `msgpack` gem.
#
# For more information, see
# https://guides.rubyonrails.org/v7.1/configuring.html#config-active-support-message-serializer
#
# If you are performing a rolling deploy of a Rails 7.1 upgrade, wherein servers
# that have not yet been upgraded must be able to read messages from upgraded
# servers, first deploy without changing the serializer, then set the serializer
# in a subsequent deploy.
#++
# Rails.application.config.active_support.message_serializer = :json_allow_marshal

###
# Enable a performance optimization that serializes message data and metadata
# together. This changes the message format, so messages serialized this way
# cannot be read by older versions of Rails. However, messages that use the old
# format can still be read, regardless of whether this optimization is enabled.
#
# To perform a rolling deploy of a Rails 7.1 upgrade, wherein servers that have
# not yet been upgraded must be able to read messages from upgraded servers,
# leave this optimization off on the first deploy, then enable it on a
# subsequent deploy.
#++
# Rails.application.config.active_support.use_message_serializer_for_metadata = true

###
# Set the maximum size for Rails log files.
#
# `config.load_defaults 7.1` does not set this value for environments other than
# development and test.
#++
# if Rails.env.local?
#   Rails.application.config.log_file_size = 100 * 1024 * 1024
# end

###
# Enable raising on assignment to attr_readonly attributes. The previous
# behavior would allow assignment but silently not persist changes to the
# database.
#++
# Rails.application.config.active_record.raise_on_assign_to_attr_readonly = true

###
# Enable validating only parent-related columns for presence when the parent is mandatory.
# The previous behavior was to validate the presence of the parent record, which performed an extra query
# to get the parent every time the child record was updated, even when parent has not changed.
#++
# Rails.application.config.active_record.belongs_to_required_validates_foreign_key = false

###
# Enable precompilation of `config.filter_parameters`. Precompilation can
# improve filtering performance, depending on the quantity and types of filters.
#++
# Rails.application.config.precompile_filter_parameters = true

###
# Enable before_committed! callbacks on all enrolled records in a transaction.
# The previous behavior was to only run the callbacks on the first copy of a record
# if there were multiple copies of the same record enrolled in the transaction.
#++
# Rails.application.config.active_record.before_committed_on_all_records = true

###
# Disable automatic column serialization into YAML.
# To keep the historic behavior, you can set it to `YAML`, however it is
# recommended to explicitly define the serialization method for each column
# rather than to rely on a global default.
#++
# Rails.application.config.active_record.default_column_serializer = nil

###
# Enable a performance optimization that serializes Active Record models
# in a faster and more compact way.
#
# To perform a rolling deploy of a Rails 7.1 upgrade, wherein servers that have
# not yet been upgraded must be able to read caches from upgraded servers,
# leave this optimization off on the first deploy, then enable it on a
# subsequent deploy.
#++
# Rails.application.config.active_record.marshalling_format_version = 7.1

###
# Run `after_commit` and `after_*_commit` callbacks in the order they are defined in a model.
# This matches the behaviour of all other callbacks.
# In previous versions of Rails, they ran in the inverse order.
#++
# Rails.application.config.active_record.run_after_transaction_callbacks_in_order_defined = true

###
# Whether a `transaction` block is committed or rolled back when exited via `return`, `break` or `throw`.
#++
# Rails.application.config.active_record.commit_transaction_on_non_local_return = true

###
# Controls when to generate a value for <tt>has_secure_token</tt> declarations.
#++
# Rails.application.config.active_record.generate_secure_token_on = :initialize

###
# ** Please read carefully, this must be configured in config/application.rb **
#
# Change the format of the cache entry.
#
# Changing this default means that all new cache entries added to the cache
# will have a different format that is not supported by Rails 7.0
# applications.
#
# Only change this value after your application is fully deployed to Rails 7.1
# and you have no plans to rollback.
# When you're ready to change format, add this to `config/application.rb` (NOT
# this file):
#   config.active_support.cache_format_version = 7.1

###
# Configure Action View to use HTML5 standards-compliant sanitizers when they are supported on your
# platform.
#
# `Rails::HTML::Sanitizer.best_supported_vendor` will cause Action View to use HTML5-compliant
# sanitizers if they are supported, else fall back to HTML4 sanitizers.
#
# In previous versions of Rails, Action View always used `Rails::HTML4::Sanitizer` as its vendor.
#++
# Rails.application.config.action_view.sanitizer_vendor = Rails::HTML::Sanitizer.best_supported_vendor

###
# Configure Action Text to use an HTML5 standards-compliant sanitizer when it is supported on your
# platform.
#
# `Rails::HTML::Sanitizer.best_supported_vendor` will cause Action Text to use HTML5-compliant
# sanitizers if they are supported, else fall back to HTML4 sanitizers.
#
# In previous versions of Rails, Action Text always used `Rails::HTML4::Sanitizer` as its vendor.
#++
# Rails.application.config.action_text.sanitizer_vendor = Rails::HTML::Sanitizer.best_supported_vendor

###
# Configure the log level used by the DebugExceptions middleware when logging
# uncaught exceptions during requests.
#++
# Rails.application.config.action_dispatch.debug_exception_log_level = :error

###
# Configure the test helpers in Action View, Action Dispatch, and rails-dom-testing to use HTML5
# parsers.
#
# Nokogiri::HTML5 isn't supported on JRuby, so JRuby applications must set this to :html4.
#
# In previous versions of Rails, these test helpers always used an HTML4 parser.
#++
# Rails.application.config.dom_testing_default_html_version = :html5

/*******************************************************************************
* File: config/initializers/permissions_policy.rb
* Size: 511 bytes
*******************************************************************************/

# frozen_string_literal: true

# Be sure to restart your server when you modify this file.

# Define an application-wide HTTP permissions policy. For further
# information see: https://developers.google.com/web/updates/2018/06/feature-policy

# Rails.application.config.permissions_policy do |policy|
#   policy.camera      :none
#   policy.gyroscope   :none
#   policy.microphone  :none
#   policy.usb         :none
#   policy.fullscreen  :self
#   policy.payment     :self, "https://secure.example.com"
# end

/*******************************************************************************
* File: config/initializers/will_paginate_array_fix.rb
* Size: 61 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'will_paginate/array'

/*******************************************************************************
* File: config/initializers/wrap_parameters.rb
* Size: 516 bytes
*******************************************************************************/

# frozen_string_literal: true

# Be sure to restart your server when you modify this file.

# This file contains settings for ActionController::ParamsWrapper which
# is enabled by default.

# Enable parameter wrapping for JSON. You can disable this by setting :format to an empty array.
ActiveSupport.on_load(:action_controller) do
  wrap_parameters format: [:json]
end

# To enable root element in JSON for ActiveRecord objects.
# ActiveSupport.on_load(:active_record) do
#   self.include_root_in_json = true
# end

/*******************************************************************************
* File: config/locales/devise.en.yml
* Size: 4138 bytes
*******************************************************************************/

# Additional translations at https://github.com/plataformatec/devise/wiki/I18n

en:
  devise:
    confirmations:
      confirmed: "Your email address has been successfully confirmed."
      send_instructions: "You will receive an email with instructions for how to confirm your email address in a few minutes."
      send_paranoid_instructions: "If your email address exists in our database, you will receive an email with instructions for how to confirm your email address in a few minutes."
    failure:
      already_authenticated: "You are already signed in."
      inactive: "Your account is not activated yet."
      invalid: "Invalid %{authentication_keys} or password."
      locked: "Your account is locked."
      last_attempt: "You have one more attempt before your account is locked."
      not_found_in_database: "Invalid %{authentication_keys} or password."
      timeout: "Your session expired. Please sign in again to continue."
      unauthenticated: "You need to sign in or sign up before continuing."
      unconfirmed: "You have to confirm your email address before continuing."
    mailer:
      confirmation_instructions:
        subject: "Confirmation instructions"
      reset_password_instructions:
        subject: "Reset password instructions"
      unlock_instructions:
        subject: "Unlock instructions"
      email_changed:
        subject: "Email Changed"
      password_change:
        subject: "Password Changed"
    omniauth_callbacks:
      failure: "Could not authenticate you from %{kind} because \"%{reason}\"."
      success: "Successfully authenticated from %{kind} account."
    passwords:
      no_token: "You can't access this page without coming from a password reset email. If you do come from a password reset email, please make sure you used the full URL provided."
      send_instructions: "You will receive an email with instructions on how to reset your password in a few minutes."
      send_paranoid_instructions: "If your email address exists in our database, you will receive a password recovery link at your email address in a few minutes."
      updated: "Your password has been changed successfully. You are now signed in."
      updated_not_active: "Your password has been changed successfully."
    registrations:
      destroyed: "Bye! Your account has been successfully cancelled. We hope to see you again soon."
      signed_up: "Welcome! You have signed up successfully."
      signed_up_but_inactive: "You have signed up successfully. However, we could not sign you in because your account is not yet activated."
      signed_up_but_locked: "You have signed up successfully. However, we could not sign you in because your account is locked."
      signed_up_but_unconfirmed: "A message with a confirmation link has been sent to your email address. Please follow the link to activate your account."
      update_needs_confirmation: "You updated your account successfully, but we need to verify your new email address. Please check your email and follow the confirm link to confirm your new email address."
      updated: "Your account has been updated successfully."
    sessions:
      signed_in: "Signed in successfully."
      signed_out: "Signed out successfully."
      already_signed_out: "Signed out successfully."
    unlocks:
      send_instructions: "You will receive an email with instructions for how to unlock your account in a few minutes."
      send_paranoid_instructions: "If your account exists, you will receive an email with instructions for how to unlock it in a few minutes."
      unlocked: "Your account has been unlocked successfully. Please sign in to continue."
  errors:
    messages:
      already_confirmed: "was already confirmed, please try signing in"
      confirmation_period_expired: "needs to be confirmed within %{period}, please request a new one"
      expired: "has expired, please request a new one"
      not_found: "not found"
      not_locked: "was not locked"
      not_saved:
        one: "1 error prohibited this %{resource} from being saved:"
        other: "%{count} errors prohibited this %{resource} from being saved:"

/*******************************************************************************
* File: config/locales/en.yml
* Size: 1553 bytes
*******************************************************************************/

en:
  messages:
    create:
      success: 'Your message has been sent.'
  admin:
    articles:
      create:
        success: 'Article was successfully created.'
      update:
        success: 'Article was successfully updated.'
    categories:
      create:
        success: 'Category was successfully created.'
      update:
        success: 'Category was successfully updated.'
        error: 'Something went wrong. The category was not updated.'
    members:
      create:
        success: 'Member was successfully created.'
      update:
        success: 'Member was successfully updated.'
    performances:
      create:
        success: 'Performance was successfully created.'
      update:
        success: 'Performance was successfully updated.'
    profiles:
      create:
        success: 'Profile was successfully created.'
      update:
        success: 'Profile was successfully updated.'
    rehearsals:
      create:
        success: 'Rehearsal was successfully created.'
      update:
        success: 'Rehearsal was successfully updated.'
    songs:
      create:
        success: 'Song was successfully created.'
        error: 'There was an error creating the song. Please try again.'
      update:
        success: 'Song was successfully updated.'
        error: 'There was an error updating the song. Please try again.'
    tags:
      create:
        success: 'Tag was successfully created.'
      update:
        success: 'Tags were successfully updated.'
        error: 'There was an error updating the tags. Please try again.'
/*******************************************************************************
* File: config/puma.rb
* Size: 2328 bytes
*******************************************************************************/

# frozen_string_literal: true

# Puma can serve each request in a thread from an internal thread pool.
# The `threads` method setting takes two numbers: a minimum and maximum.
# Any libraries that use thread pools should be configured to match
# the maximum value specified for Puma. Default is set to 5 threads for minimum
# and maximum; this matches the default thread size of Active Record.
#
threads_count = ENV.fetch('RAILS_MAX_THREADS', 5)
threads threads_count, threads_count

# Specifies the `port` that Puma will listen on to receive requests; default is 3000.
#
port        ENV.fetch('PORT', 3000)

# Specifies the `environment` that Puma will run in.
#
environment ENV.fetch('RAILS_ENV', 'development')

# Specifies the number of `workers` to boot in clustered mode.
# Workers are forked webserver processes. If using threads and workers together
# the concurrency of the application would be max `threads` * `workers`.
# Workers do not work on JRuby or Windows (both of which do not support
# processes).
#
# workers ENV.fetch("WEB_CONCURRENCY") { 2 }

# Use the `preload_app!` method when specifying a `workers` number.
# This directive tells Puma to first boot the application and load code
# before forking the application. This takes advantage of Copy On Write
# process behavior so workers use less memory. If you use this option
# you need to make sure to reconnect any threads in the `on_worker_boot`
# block.
#
# preload_app!

# If you are preloading your application and using Active Record, it's
# recommended that you close any connections to the database before workers
# are forked to prevent connection leakage.
#
# before_fork do
#   ActiveRecord::Base.connection_pool.disconnect! if defined?(ActiveRecord)
# end

# The code in the `on_worker_boot` will be called if you are using
# clustered mode by specifying a number of `workers`. After each worker
# process is booted, this block will be run. If you are using the `preload_app!`
# option, you will want to use this block to reconnect to any threads
# or connections that may have been created at application boot, as Ruby
# cannot share connections between processes.
#
# on_worker_boot do
#   ActiveRecord::Base.establish_connection if defined?(ActiveRecord)
# end
#

# Allow puma to be restarted by `rails restart` command.
plugin :tmp_restart

/*******************************************************************************
* File: config/routes.rb
* Size: 1139 bytes
*******************************************************************************/

# frozen_string_literal: true

Rails.application.routes.draw do
  mount ActionCable.server => '/cable'

  root to: 'static_pages#home'

  devise_for :users, controllers: {
    sessions: 'users/sessions'
  }

  resources :music,
            controller: 'songs',
            only: %i[index show],
            param: :slug
  resources :news,
            controller: 'articles',
            only: %i[index show]
  resources :rehearsals,
            only: [:index]
  get  'contact', to: 'messages#new'
  post 'contact', to: 'messages#create'
  get 'about-us', to: 'static_pages#about_us'

  resources :admin, only: [:index]
  namespace :admin do
    resources :articles, except: [:show]
    resources :members, except: [:show]
    resources :performances, except: [:show]
    resources :profiles, except: [:show] do
      put :sort, on: :collection
    end
    resources :rehearsals, except: [:show]
    resources :songs, except: [:show]
    resources :categories, except: %i[new edit show]
    resources :tags, except: %i[new edit show]
    resources :messages, only: %i[index show] do
      post :do_to_all, on: :collection
    end
  end
end

/*******************************************************************************
* File: config/secrets.yml
* Size: 1277 bytes
*******************************************************************************/

# Be sure to restart your server when you modify this file.

# Your secret key is used for verifying the integrity of signed cookies.
# If you change this key, all old signed cookies will become invalid!

# Make sure the secret is at least 30 characters and all random,
# no regular words or you'll be exposed to dictionary attacks.
# You can use `rails secret` to generate a secure secret key.

# Make sure the secrets in this file are kept private
# if you're sharing your code publicly.

# Shared secrets are available across all environments.

# shared:
#   api_key: a1B2c3D4e5F6

# Environmental secrets are only available for that specific environment.

development:
  secret_key_base: 7ce046ad15853f462d6a34df40ec911ace7209cadaf533efe2d653272cf33b3de717e91767f37bb597c9c49659320e0157405751f782ed1bd740591d12e73db9

test:
  secret_key_base: 36a388988d3b9ab7f7f7b61cc537fc25d97ccef2e32f3eb03c137c9330d198a8a020c15bc8b82689dc5d526bdcf2a300d94f43209d170c92d245bdd5dceafb2c

# Do not keep production secrets in the unencrypted secrets file.
# Instead, either read values from the environment.
# Or, use `bin/rails secrets:setup` to configure encrypted secrets
# and move the `production:` environment over there.

production:
  secret_key_base: <%= ENV["SECRET_KEY_BASE"] %>

/*******************************************************************************
* File: config/sidekiq.yml
* Size: 231 bytes
*******************************************************************************/

---
:verbose: false
:concurrency: 1
:max_retries: 3

:timeout: 8

:queues:
  - critical
  - mailers
  - default
  - action_mailbox_routing
  - action_mailbox_incineration
  - active_storage_analysis
  - active_storage_purge
  - low
/*******************************************************************************
* File: config/spring.rb
* Size: 173 bytes
*******************************************************************************/

# frozen_string_literal: true

Spring.application_root = nil

%w[
  .ruby-version
  .rbenv-vars
  tmp/restart.txt
  tmp/caching-dev.txt
].each { |path| Spring.watch(path) }

/*******************************************************************************
* File: config/storage.yml
* Size: 336 bytes
*******************************************************************************/

local:
  service: Disk
  root: <%= Rails.root.join "storage" %>

test:
  service: Disk
  root: <%= Rails.root.join "tmp/storage" %>
  
amazon:
  service: S3
  access_key_id: <%= ENV["AWS_ACCESS_KEY_ID"] %>
  secret_access_key: <%= ENV["AWS_SECRET_ACCESS_KEY"] %>
  region: <%= ENV["AWS_REGION"] %>
  bucket: <%= ENV["S3_BUCKET_NAME"] %>
/*******************************************************************************
* File: config/webpack/development.js
* Size: 155 bytes
*******************************************************************************/

process.env.NODE_ENV = process.env.NODE_ENV || 'development'

const environment = require('./environment')

module.exports = environment.toWebpackConfig()

/*******************************************************************************
* File: config/webpack/environment.js
* Size: 82 bytes
*******************************************************************************/

const { environment } = require('@rails/webpacker')

module.exports = environment

/*******************************************************************************
* File: config/webpack/production.js
* Size: 154 bytes
*******************************************************************************/

process.env.NODE_ENV = process.env.NODE_ENV || 'production'

const environment = require('./environment')

module.exports = environment.toWebpackConfig()

/*******************************************************************************
* File: config/webpack/test.js
* Size: 155 bytes
*******************************************************************************/

process.env.NODE_ENV = process.env.NODE_ENV || 'development'

const environment = require('./environment')

module.exports = environment.toWebpackConfig()

/*******************************************************************************
* File: config/webpacker.yml
* Size: 1778 bytes
*******************************************************************************/

# Note: You must restart bin/webpack-dev-server for changes to take effect

default: &default
  source_path: app/javascript
  source_entry_path: packs
  public_root_path: public
  public_output_path: packs
  cache_path: tmp/cache/webpacker
  webpack_compile_output: true

  # Additional paths webpack should lookup modules
  # ['app/assets', 'engine/foo/app/assets']
  additional_paths: []

  # Reload manifest.json on all requests so we reload latest compiled packs
  cache_manifest: false

  # Extract and emit a css file
  extract_css: false

  static_assets_extensions:
    - .jpg
    - .jpeg
    - .png
    - .gif
    - .tiff
    - .ico
    - .svg
    - .eot
    - .otf
    - .ttf
    - .woff
    - .woff2

  extensions:
    - .mjs
    - .js
    - .sass
    - .scss
    - .css
    - .module.sass
    - .module.scss
    - .module.css
    - .png
    - .svg
    - .gif
    - .jpeg
    - .jpg

development:
  <<: *default
  compile: true

  # Reference: https://webpack.js.org/configuration/dev-server/
  dev_server:
    https: false
    host: localhost
    port: 3035
    public: localhost:3035
    hmr: false
    # Inline should be set to true if using HMR
    inline: true
    overlay: true
    compress: true
    disable_host_check: true
    use_local_ip: false
    quiet: false
    pretty: false
    headers:
      'Access-Control-Allow-Origin': '*'
    watch_options:
      ignored: '**/node_modules/**'


test:
  <<: *default
  compile: true

  # Compile test packs to a separate directory
  public_output_path: packs-test

production:
  <<: *default

  # Production depends on precompilation of packs prior to booting for performance.
  compile: false

  # Extract and emit a css file
  extract_css: true

  # Cache manifest.json for performance
  cache_manifest: true

/*******************************************************************************
* File: db/migrate/20171104143831_create_songs.rb
* Size: 219 bytes
*******************************************************************************/

# frozen_string_literal: true

class CreateSongs < ActiveRecord::Migration[5.1]
  def change
    create_table :songs do |t|
      t.string :title
      t.datetime :performance_date

      t.timestamps
    end
  end
end

/*******************************************************************************
* File: db/migrate/20171104143928_create_sheet_musics.rb
* Size: 260 bytes
*******************************************************************************/

# frozen_string_literal: true

class CreateSheetMusics < ActiveRecord::Migration[5.1]
  def change
    create_table :sheet_musics do |t|
      t.string :type
      t.string :url
      t.references :song, foreign_key: true

      t.timestamps
    end
  end
end

/*******************************************************************************
* File: db/migrate/20171104144008_create_audios.rb
* Size: 270 bytes
*******************************************************************************/

# frozen_string_literal: true

class CreateAudios < ActiveRecord::Migration[5.1]
  def change
    create_table :audios do |t|
      t.string :type
      t.string :midi
      t.string :mp3
      t.references :song, foreign_key: true

      t.timestamps
    end
  end
end

/*******************************************************************************
* File: db/migrate/20171104153844_rename_type_to_instrument_on_audios.rb
* Size: 168 bytes
*******************************************************************************/

# frozen_string_literal: true

class RenameTypeToInstrumentOnAudios < ActiveRecord::Migration[5.1]
  def change
    rename_column :audios, :type, :instrument
  end
end

/*******************************************************************************
* File: db/migrate/20171104174012_rename_type_to_instrument_on_sheet_musics.rb
* Size: 179 bytes
*******************************************************************************/

# frozen_string_literal: true

class RenameTypeToInstrumentOnSheetMusics < ActiveRecord::Migration[5.1]
  def change
    rename_column :sheet_musics, :type, :instrument
  end
end

/*******************************************************************************
* File: db/migrate/20171105140405_devise_create_users.rb
* Size: 1390 bytes
*******************************************************************************/

# frozen_string_literal: true

class DeviseCreateUsers < ActiveRecord::Migration[5.1]
  def change
    create_table :users do |t|
      ## Database authenticatable
      t.string :email,              null: false, default: ''
      t.string :encrypted_password, null: false, default: ''

      ## Recoverable
      t.string   :reset_password_token
      t.datetime :reset_password_sent_at

      ## Rememberable
      t.datetime :remember_created_at

      ## Trackable
      t.integer  :sign_in_count, default: 0, null: false
      t.datetime :current_sign_in_at
      t.datetime :last_sign_in_at
      t.string   :current_sign_in_ip
      t.string   :last_sign_in_ip

      ## Confirmable
      # t.string   :confirmation_token
      # t.datetime :confirmed_at
      # t.datetime :confirmation_sent_at
      # t.string   :unconfirmed_email # Only if using reconfirmable

      ## Lockable
      # t.integer  :failed_attempts, default: 0, null: false # Only if lock strategy is :failed_attempts
      # t.string   :unlock_token # Only if unlock strategy is :email or :both
      # t.datetime :locked_at

      t.timestamps null: false
    end

    add_index :users, :email,                unique: true
    add_index :users, :reset_password_token, unique: true
    # add_index :users, :confirmation_token,   unique: true
    # add_index :users, :unlock_token,         unique: true
  end
end

/*******************************************************************************
* File: db/migrate/20171106033817_add_position_to_sheet_musics.rb
* Size: 166 bytes
*******************************************************************************/

# frozen_string_literal: true

class AddPositionToSheetMusics < ActiveRecord::Migration[5.1]
  def change
    add_column :sheet_musics, :position, :integer
  end
end

/*******************************************************************************
* File: db/migrate/20171106130706_change_pdf_column_type_in_sheet_musics.rb
* Size: 237 bytes
*******************************************************************************/

# frozen_string_literal: true

class ChangePdfColumnTypeInSheetMusics < ActiveRecord::Migration[5.1]
  def change
    # Commenting out this change. Paperclip has been depreciated.
    #
    # add_attachment :sheet_musics, :pdf
  end
end

/*******************************************************************************
* File: db/migrate/20171106131216_remove_url_from_sheet_musics.rb
* Size: 237 bytes
*******************************************************************************/

# frozen_string_literal: true

class RemoveUrlFromSheetMusics < ActiveRecord::Migration[5.1]
  def change
    # Commenting out this change. Paperclip has been depreciated.
    #
    # remove_column :sheet_musics, :url, :string
  end
end

/*******************************************************************************
* File: db/migrate/20171106132915_replace_mp3_and_midi_types_from_audios.rb
* Size: 352 bytes
*******************************************************************************/

# frozen_string_literal: true

class ReplaceMp3AndMidiTypesFromAudios < ActiveRecord::Migration[5.1]
  def change
    remove_column :audios, :midi, :string
    remove_column :audios, :mp3,  :string

    # Commenting out this change. Paperclip has been depreciated.
    #
    # add_attachment :audios, :midi
    # add_attachment :audios, :mp3
  end
end

/*******************************************************************************
* File: db/migrate/20171106133554_add_postion_to_audios.rb
* Size: 154 bytes
*******************************************************************************/

# frozen_string_literal: true

class AddPostionToAudios < ActiveRecord::Migration[5.1]
  def change
    add_column :audios, :position, :integer
  end
end

/*******************************************************************************
* File: db/migrate/20180320171225_add_slug_to_songs.rb
* Size: 144 bytes
*******************************************************************************/

# frozen_string_literal: true

class AddSlugToSongs < ActiveRecord::Migration[5.1]
  def change
    add_column :songs, :slug, :string
  end
end

/*******************************************************************************
* File: db/migrate/20180320171752_add_sort_order_to_songs.rb
* Size: 155 bytes
*******************************************************************************/

# frozen_string_literal: true

class AddSortOrderToSongs < ActiveRecord::Migration[5.1]
  def change
    add_column :songs, :sort_order, :string
  end
end

/*******************************************************************************
* File: db/migrate/20180321124243_add_description_to_songs.rb
* Size: 156 bytes
*******************************************************************************/

# frozen_string_literal: true

class AddDescriptionToSongs < ActiveRecord::Migration[5.1]
  def change
    add_column :songs, :description, :text
  end
end

/*******************************************************************************
* File: db/migrate/20180324034344_create_instruments.rb
* Size: 419 bytes
*******************************************************************************/

# frozen_string_literal: true

class CreateInstruments < ActiveRecord::Migration[5.1]
  def change
    create_table :instruments do |t|
      t.string :name
      t.integer :position
      t.references :song, foreign_key: true
      # Commenting out this change. Paperclip has been depreciated.
      #
      # t.attachment :pdf
      # t.attachment :mp3
      # t.attachment :midi
      t.timestamps
    end
  end
end

/*******************************************************************************
* File: db/migrate/20180324173517_create_profiles.rb
* Size: 333 bytes
*******************************************************************************/

# frozen_string_literal: true

class CreateProfiles < ActiveRecord::Migration[5.1]
  def change
    create_table :profiles do |t|
      t.string :name
      t.string :title
      t.text :bio
      # Commenting out this change. Paperclip has been depreciated.
      #
      # t.attachment :image

      t.timestamps
    end
  end
end

/*******************************************************************************
* File: db/migrate/20180324174943_add_position_to_profiles.rb
* Size: 159 bytes
*******************************************************************************/

# frozen_string_literal: true

class AddPositionToProfiles < ActiveRecord::Migration[5.1]
  def change
    add_column :profiles, :position, :integer
  end
end

/*******************************************************************************
* File: db/migrate/20180324220649_add_attachment_lilypond_to_songs.rb
* Size: 404 bytes
*******************************************************************************/

# frozen_string_literal: true

class AddAttachmentLilypondToSongs < ActiveRecord::Migration[5.1]
  def self.up
    change_table :songs do |t|
      # Commenting out this change. Paperclip has been depreciated.
      #
      # t.attachment :lilypond
    end
  end

  def self.down
    # Commenting out this change. Paperclip has been depreciated.
    #
    # remove_attachment :songs, :lilypond
  end
end

/*******************************************************************************
* File: db/migrate/20180324224352_create_performances.rb
* Size: 243 bytes
*******************************************************************************/

# frozen_string_literal: true

class CreatePerformances < ActiveRecord::Migration[5.1]
  def change
    create_table :performances do |t|
      t.string :venue
      t.datetime :date
      t.text :details

      t.timestamps
    end
  end
end

/*******************************************************************************
* File: db/migrate/20180324224537_create_performance_songs.rb
* Size: 280 bytes
*******************************************************************************/

# frozen_string_literal: true

class CreatePerformanceSongs < ActiveRecord::Migration[5.1]
  def change
    create_table :performance_songs do |t|
      t.references :performance, foreign_key: true
      t.references :song, foreign_key: true

      t.timestamps
    end
  end
end

/*******************************************************************************
* File: db/migrate/20180325013100_create_rehearsals.rb
* Size: 368 bytes
*******************************************************************************/

# frozen_string_literal: true

class CreateRehearsals < ActiveRecord::Migration[5.1]
  def change
    create_table :rehearsals do |t|
      t.datetime :date
      t.integer :duration
      t.string :venue
      t.string :host
      # Commenting out this change. Paperclip has been depreciated.
      #
      # t.attachment :audio

      t.timestamps
    end
  end
end

/*******************************************************************************
* File: db/migrate/20180325013129_create_rehearsal_songs.rb
* Size: 274 bytes
*******************************************************************************/

# frozen_string_literal: true

class CreateRehearsalSongs < ActiveRecord::Migration[5.1]
  def change
    create_table :rehearsal_songs do |t|
      t.references :rehearsal, foreign_key: true
      t.references :song, foreign_key: true

      t.timestamps
    end
  end
end

/*******************************************************************************
* File: db/migrate/20180325033300_remove_duration_from_rehearsals.rb
* Size: 161 bytes
*******************************************************************************/

# frozen_string_literal: true

class RemoveDurationFromRehearsals < ActiveRecord::Migration[5.1]
  def change
    remove_column :rehearsals, :duration
  end
end

/*******************************************************************************
* File: db/migrate/20180325033537_add_time_to_rehearsals.rb
* Size: 154 bytes
*******************************************************************************/

# frozen_string_literal: true

class AddTimeToRehearsals < ActiveRecord::Migration[5.1]
  def change
    add_column :rehearsals, :time, :string
  end
end

/*******************************************************************************
* File: db/migrate/20180326022614_create_articles.rb
* Size: 257 bytes
*******************************************************************************/

# frozen_string_literal: true

class CreateArticles < ActiveRecord::Migration[5.1]
  def change
    create_table :articles do |t|
      t.string :title
      t.text :content
      t.references :users, foreign_key: true

      t.timestamps
    end
  end
end

/*******************************************************************************
* File: db/migrate/20180326023018_add_name_to_users.rb
* Size: 144 bytes
*******************************************************************************/

# frozen_string_literal: true

class AddNameToUsers < ActiveRecord::Migration[5.1]
  def change
    add_column :users, :name, :string
  end
end

/*******************************************************************************
* File: db/migrate/20180326024739_rename_users_id_to_user_id_in_articles.rb
* Size: 172 bytes
*******************************************************************************/

# frozen_string_literal: true

class RenameUsersIdToUserIdInArticles < ActiveRecord::Migration[5.1]
  def change
    rename_column :articles, :users_id, :user_id
  end
end

/*******************************************************************************
* File: db/migrate/20180326025638_add_published_to_articles.rb
* Size: 190 bytes
*******************************************************************************/

# frozen_string_literal: true

class AddPublishedToArticles < ActiveRecord::Migration[5.1]
  def change
    add_column :articles, :published, :boolean, null: false, default: false
  end
end

/*******************************************************************************
* File: db/migrate/20180326031621_create_categories.rb
* Size: 262 bytes
*******************************************************************************/

# frozen_string_literal: true

class CreateCategories < ActiveRecord::Migration[5.1]
  def change
    create_table :categories do |t|
      t.string :name
      t.string :slug
      t.references :category, foreign_key: true

      t.timestamps
    end
  end
end

/*******************************************************************************
* File: db/migrate/20180326031647_create_article_categories.rb
* Size: 282 bytes
*******************************************************************************/

# frozen_string_literal: true

class CreateArticleCategories < ActiveRecord::Migration[5.1]
  def change
    create_table :article_categories do |t|
      t.references :article, foreign_key: true
      t.references :category, foreign_key: true

      t.timestamps
    end
  end
end

/*******************************************************************************
* File: db/migrate/20180326031716_create_tags.rb
* Size: 202 bytes
*******************************************************************************/

# frozen_string_literal: true

class CreateTags < ActiveRecord::Migration[5.1]
  def change
    create_table :tags do |t|
      t.string :name
      t.string :slug

      t.timestamps
    end
  end
end

/*******************************************************************************
* File: db/migrate/20180326031740_create_article_tags.rb
* Size: 265 bytes
*******************************************************************************/

# frozen_string_literal: true

class CreateArticleTags < ActiveRecord::Migration[5.1]
  def change
    create_table :article_tags do |t|
      t.references :article, foreign_key: true
      t.references :tag, foreign_key: true

      t.timestamps
    end
  end
end

/*******************************************************************************
* File: db/migrate/20180425122701_drop_sheet_musics.rb
* Size: 136 bytes
*******************************************************************************/

# frozen_string_literal: true

class DropSheetMusics < ActiveRecord::Migration[5.1]
  def change
    drop_table :sheet_musics
  end
end

/*******************************************************************************
* File: db/migrate/20180425125616_drop_audios.rb
* Size: 125 bytes
*******************************************************************************/

# frozen_string_literal: true

class DropAudios < ActiveRecord::Migration[5.1]
  def change
    drop_table :audios
  end
end

/*******************************************************************************
* File: db/migrate/20180510220843_create_messages.rb
* Size: 308 bytes
*******************************************************************************/

# frozen_string_literal: true

class CreateMessages < ActiveRecord::Migration[5.1]
  def change
    create_table :messages do |t|
      t.string :name
      t.string :email
      t.string :subject
      t.text :message
      t.boolean :read, null: false, default: false

      t.timestamps
    end
  end
end

/*******************************************************************************
* File: db/migrate/20180511150108_add_attachment_audio_to_performances.rb
* Size: 416 bytes
*******************************************************************************/

# frozen_string_literal: true

class AddAttachmentAudioToPerformances < ActiveRecord::Migration[5.1]
  def self.up
    change_table :performances do |t|
      # Commenting out this change. Paperclip has been depreciated.
      #
      # t.attachment :audio
    end
  end

  def self.down
    # Commenting out this change. Paperclip has been depreciated.
    #
    # remove_attachment :performances, :audio
  end
end

/*******************************************************************************
* File: db/migrate/20180529222554_create_members.rb
* Size: 281 bytes
*******************************************************************************/

# frozen_string_literal: true

class CreateMembers < ActiveRecord::Migration[5.1]
  def change
    create_table :members do |t|
      t.string :name
      t.string :email
      t.string :phone
      t.string :talents
      t.text :vocal_range

      t.timestamps
    end
  end
end

/*******************************************************************************
* File: db/migrate/20191021151826_add_performances_count_to_songs.rb
* Size: 387 bytes
*******************************************************************************/

# frozen_string_literal: true

class AddPerformancesCountToSongs < ActiveRecord::Migration[5.1]
  def up
    add_column :songs, :performances_count, :integer, default: 0

    Song.reset_column_information
    Song.find_each do |s|
      Song.update_counters s.id, performances_count: s.performances.count
    end
  end

  def down
    remove_column :songs, :performances_count
  end
end

/*******************************************************************************
* File: db/migrate/20220307200849_create_active_storage_tables.active_storage.rb
* Size: 1044 bytes
*******************************************************************************/

# frozen_string_literal: true

# This migration comes from active_storage (originally 20170806125915)
class CreateActiveStorageTables < ActiveRecord::Migration[5.2]
  def change
    create_table :active_storage_blobs do |t|
      t.string   :key,        null: false
      t.string   :filename,   null: false
      t.string   :content_type
      t.text     :metadata
      t.bigint   :byte_size,  null: false
      t.string   :checksum,   null: false
      t.datetime :created_at, null: false

      t.index [:key], unique: true
    end

    create_table :active_storage_attachments do |t|
      t.string     :name,     null: false
      t.references :record,   null: false, polymorphic: true, index: false
      t.references :blob,     null: false

      t.datetime :created_at, null: false

      t.index %i[record_type record_id name blob_id], name: 'index_active_storage_attachments_uniqueness',
                                                      unique: true
      t.foreign_key :active_storage_blobs, column: :blob_id
    end
  end
end

/*******************************************************************************
* File: db/migrate/20231231070617_add_service_name_to_active_storage_blobs.active_storage.rb
* Size: 737 bytes
*******************************************************************************/

# frozen_string_literal: true

# This migration comes from active_storage (originally 20190112182829)
class AddServiceNameToActiveStorageBlobs < ActiveRecord::Migration[6.0]
  def up
    return unless table_exists?(:active_storage_blobs)

    return if column_exists?(:active_storage_blobs, :service_name)

    add_column :active_storage_blobs, :service_name, :string

    if (configured_service = ActiveStorage::Blob.service.name)
      ActiveStorage::Blob.unscoped.update_all(service_name: configured_service)
    end

    change_column :active_storage_blobs, :service_name, :string, null: false
  end

  def down
    return unless table_exists?(:active_storage_blobs)

    remove_column :active_storage_blobs, :service_name
  end
end

/*******************************************************************************
* File: db/migrate/20231231070618_create_active_storage_variant_records.active_storage.rb
* Size: 1115 bytes
*******************************************************************************/

# frozen_string_literal: true

# This migration comes from active_storage (originally 20191206030411)
class CreateActiveStorageVariantRecords < ActiveRecord::Migration[6.0]
  def change
    return unless table_exists?(:active_storage_blobs)

    # Use Active Record's configured type for primary key
    create_table :active_storage_variant_records, id: primary_key_type, if_not_exists: true do |t|
      t.belongs_to :blob, null: false, index: false, type: blobs_primary_key_type
      t.string :variation_digest, null: false

      t.index %i[blob_id variation_digest], name: 'index_active_storage_variant_records_uniqueness', unique: true
      t.foreign_key :active_storage_blobs, column: :blob_id
    end
  end

  private

  def primary_key_type
    config = Rails.configuration.generators
    config.options[config.orm][:primary_key_type] || :primary_key
  end

  def blobs_primary_key_type
    pkey_name = connection.primary_key(:active_storage_blobs)
    pkey_column = connection.columns(:active_storage_blobs).find { |c| c.name == pkey_name }
    pkey_column.bigint? ? :bigint : pkey_column.type
  end
end

/*******************************************************************************
* File: db/migrate/20240104195525_add_unique_index_to_instruments_name_and_song.rb
* Size: 189 bytes
*******************************************************************************/

# frozen_string_literal: true

class AddUniqueIndexToInstrumentsNameAndSong < ActiveRecord::Migration[6.1]
  def change
    add_index :instruments, %i[name song_id], unique: true
  end
end

/*******************************************************************************
* File: db/migrate/20250117233510_add_counters_to_songs.rb
* Size: 174 bytes
*******************************************************************************/

# frozen_string_literal: true

class AddCountersToSongs < ActiveRecord::Migration[6.1]
  def change
    add_column :songs, :instruments_count, :integer, default: 0
  end
end

/*******************************************************************************
* File: db/migrate/20250206181123_add_article_count_to_categories.rb
* Size: 477 bytes
*******************************************************************************/

# frozen_string_literal: true

class AddArticleCountToCategories < ActiveRecord::Migration[6.1]
  def up
    add_column :categories, :articles_count, :integer, default: 0

    execute <<-SQL.squish
        UPDATE categories
        SET articles_count = (
            SELECT count(*)
            FROM article_categories
            WHERE article_categories.category_id = categories.id
        )
    SQL
  end

  def down
    remove_column :categories, :articles_count
  end
end

/*******************************************************************************
* File: db/migrate/20250219174304_rename_articles_count_in_categories.rb
* Size: 467 bytes
*******************************************************************************/

# frozen_string_literal: true

class RenameArticlesCountInCategories < ActiveRecord::Migration[6.1]
  def up
    rename_column :categories,
                  :articles_count,
                  :article_categories_count

    Category.find_each do |category|
      Category.reset_counters(category.id, :article_categories)
    end
  end

  def down
    rename_column :categories,
                  :article_categories_count,
                  :articles_count
  end
end

/*******************************************************************************
* File: db/migrate/20250220162254_fix_instruments_name_index.rb
* Size: 306 bytes
*******************************************************************************/

# frozen_string_literal: true

class FixInstrumentsNameIndex < ActiveRecord::Migration[6.1]
  def change
    return unless index_exists?(:instruments, :name, name: 'index_instruments_on_lower_name_and_song')

    remove_index :instruments, :name, name: 'index_instruments_on_lower_name_and_song'
  end
end

/*******************************************************************************
* File: db/migrate/20250220171005_add_songs_count_to_rehearsals.rb
* Size: 314 bytes
*******************************************************************************/

# frozen_string_literal: true

class AddSongsCountToRehearsals < ActiveRecord::Migration[6.1]
  def change
    add_column :rehearsals, :rehearsal_songs_count, :integer, default: 0, null: false

    Rehearsal.find_each do |rehearsal|
      Rehearsal.reset_counters(rehearsal.id, :rehearsal_songs)
    end
  end
end

/*******************************************************************************
* File: db/migrate/20250220185348_add_article_tags_count_to_tags.rb
* Size: 278 bytes
*******************************************************************************/

# frozen_string_literal: true

class AddArticleTagsCountToTags < ActiveRecord::Migration[6.1]
  def change
    add_column :tags, :article_tags_count, :integer, default: 0, null: false

    Tag.find_each do |tag|
      Tag.reset_counters(tag.id, :article_tags)
    end
  end
end

/*******************************************************************************
* File: db/migrate/20250303215719_remove_not_null_on_active_storage_blobs_checksum.active_storage.rb
* Size: 323 bytes
*******************************************************************************/

# frozen_string_literal: true

# This migration comes from active_storage (originally 20211119233751)
class RemoveNotNullOnActiveStorageBlobsChecksum < ActiveRecord::Migration[6.0]
  def change
    return unless table_exists?(:active_storage_blobs)

    change_column_null(:active_storage_blobs, :checksum, true)
  end
end

/*******************************************************************************
* File: db/schema.rb
* Size: 8290 bytes
*******************************************************************************/

# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of Active Record to
# incrementally modify your database, and then regenerate this schema definition.
#
# This file is the source Rails uses to define your schema when running `bin/rails
# db:schema:load`. When creating a new database, `bin/rails db:schema:load` tends to
# be faster and is potentially less error prone than running all of your
# migrations from scratch. Old migrations may fail to apply correctly if those
# migrations use external dependencies or application code.
#
# It's strongly recommended that you check this file into your version control system.

ActiveRecord::Schema[7.1].define(version: 2025_03_03_215719) do
  # These are extensions that must be enabled in order to support this database
  enable_extension "plpgsql"

  create_table "active_storage_attachments", force: :cascade do |t|
    t.string "name", null: false
    t.string "record_type", null: false
    t.bigint "record_id", null: false
    t.bigint "blob_id", null: false
    t.datetime "created_at", precision: nil, null: false
    t.index ["blob_id"], name: "index_active_storage_attachments_on_blob_id"
    t.index ["record_type", "record_id", "name", "blob_id"], name: "index_active_storage_attachments_uniqueness", unique: true
  end

  create_table "active_storage_blobs", force: :cascade do |t|
    t.string "key", null: false
    t.string "filename", null: false
    t.string "content_type"
    t.text "metadata"
    t.bigint "byte_size", null: false
    t.string "checksum"
    t.datetime "created_at", precision: nil, null: false
    t.string "service_name", null: false
    t.index ["key"], name: "index_active_storage_blobs_on_key", unique: true
  end

  create_table "active_storage_variant_records", force: :cascade do |t|
    t.bigint "blob_id", null: false
    t.string "variation_digest", null: false
    t.index ["blob_id", "variation_digest"], name: "index_active_storage_variant_records_uniqueness", unique: true
  end

  create_table "article_categories", force: :cascade do |t|
    t.bigint "article_id"
    t.bigint "category_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.index ["article_id"], name: "index_article_categories_on_article_id"
    t.index ["category_id"], name: "index_article_categories_on_category_id"
  end

  create_table "article_tags", force: :cascade do |t|
    t.bigint "article_id"
    t.bigint "tag_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.index ["article_id"], name: "index_article_tags_on_article_id"
    t.index ["tag_id"], name: "index_article_tags_on_tag_id"
  end

  create_table "articles", force: :cascade do |t|
    t.string "title"
    t.text "content"
    t.bigint "user_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.boolean "published", default: false, null: false
    t.index ["user_id"], name: "index_articles_on_user_id"
  end

  create_table "categories", force: :cascade do |t|
    t.string "name"
    t.string "slug"
    t.bigint "category_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "article_categories_count", default: 0
    t.index ["category_id"], name: "index_categories_on_category_id"
  end

  create_table "instruments", force: :cascade do |t|
    t.string "name"
    t.integer "position"
    t.bigint "song_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.index ["name", "song_id"], name: "index_instruments_on_name_and_song_id", unique: true
    t.index ["song_id"], name: "index_instruments_on_song_id"
  end

  create_table "members", force: :cascade do |t|
    t.string "name"
    t.string "email"
    t.string "phone"
    t.string "talents"
    t.text "vocal_range"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "messages", force: :cascade do |t|
    t.string "name"
    t.string "email"
    t.string "subject"
    t.text "message"
    t.boolean "read", default: false, null: false
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "performance_songs", force: :cascade do |t|
    t.bigint "performance_id"
    t.bigint "song_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.index ["performance_id"], name: "index_performance_songs_on_performance_id"
    t.index ["song_id"], name: "index_performance_songs_on_song_id"
  end

  create_table "performances", force: :cascade do |t|
    t.string "venue"
    t.datetime "date", precision: nil
    t.text "details"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
  end

  create_table "profiles", force: :cascade do |t|
    t.string "name"
    t.string "title"
    t.text "bio"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "position"
  end

  create_table "rehearsal_songs", force: :cascade do |t|
    t.bigint "rehearsal_id"
    t.bigint "song_id"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.index ["rehearsal_id"], name: "index_rehearsal_songs_on_rehearsal_id"
    t.index ["song_id"], name: "index_rehearsal_songs_on_song_id"
  end

  create_table "rehearsals", force: :cascade do |t|
    t.datetime "date", precision: nil
    t.string "venue"
    t.string "host"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.string "time"
    t.integer "rehearsal_songs_count", default: 0, null: false
  end

  create_table "songs", force: :cascade do |t|
    t.string "title"
    t.datetime "performance_date", precision: nil
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.string "slug"
    t.string "sort_order"
    t.text "description"
    t.integer "performances_count", default: 0
    t.integer "instruments_count", default: 0
  end

  create_table "tags", force: :cascade do |t|
    t.string "name"
    t.string "slug"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.integer "article_tags_count", default: 0, null: false
  end

  create_table "users", force: :cascade do |t|
    t.string "email", default: "", null: false
    t.string "encrypted_password", default: "", null: false
    t.string "reset_password_token"
    t.datetime "reset_password_sent_at", precision: nil
    t.datetime "remember_created_at", precision: nil
    t.integer "sign_in_count", default: 0, null: false
    t.datetime "current_sign_in_at", precision: nil
    t.datetime "last_sign_in_at", precision: nil
    t.string "current_sign_in_ip"
    t.string "last_sign_in_ip"
    t.datetime "created_at", precision: nil, null: false
    t.datetime "updated_at", precision: nil, null: false
    t.string "name"
    t.index ["email"], name: "index_users_on_email", unique: true
    t.index ["reset_password_token"], name: "index_users_on_reset_password_token", unique: true
  end

  add_foreign_key "active_storage_attachments", "active_storage_blobs", column: "blob_id"
  add_foreign_key "active_storage_variant_records", "active_storage_blobs", column: "blob_id"
  add_foreign_key "article_categories", "articles"
  add_foreign_key "article_categories", "categories"
  add_foreign_key "article_tags", "articles"
  add_foreign_key "article_tags", "tags"
  add_foreign_key "articles", "users"
  add_foreign_key "categories", "categories"
  add_foreign_key "instruments", "songs"
  add_foreign_key "performance_songs", "performances"
  add_foreign_key "performance_songs", "songs"
  add_foreign_key "rehearsal_songs", "rehearsals"
  add_foreign_key "rehearsal_songs", "songs"
end

/*******************************************************************************
* File: db/seeds.rb
* Size: 4334 bytes
*******************************************************************************/

# frozen_string_literal: true

# This file should contain all the record creation needed to seed the database with its default values.
# The data can then be loaded with the rails db:seed command (or created alongside the database with db:setup).
#
# Examples:
#
#   movies = Movie.create([{ name: 'Star Wars' }, { name: 'Lord of the Rings' }])
#   Character.create(name: 'Luke', movie: movies.first)

User.create!(
  email: 'whittakerlee81@gmail.com',
  password: 'P@$$w0rd',
  password_confirmation: 'P@$$w0rd'
)

bio = 'Potenti nullam ac tortor vitae. Sed turpis tincidunt id aliquet ' \
      'risus feugiat in ante metus. Aenean et tortor at risus viverra ' \
      'adipiscing at in tellus. Mauris a diam maecenas sed enim. Mattis rhoncus ' \
      'urna neque viverra justo nec. Mauris a diam maecenas sed enim ut sem. ' \
      'Sed ullamcorper morbi tincidunt ornare massa eget egestas purus viverra. ' \
      'Ut aliquam purus sit amet luctus. Velit laoreet id donec ultrices.  ' \
      '\n\n ' \
      'Ut venenatis tellus in metus vulputate eu scelerisque. Ut tortor pretium ' \
      'viverra suspendisse. Urna cursus eget nunc scelerisque. Tristique et ' \
      'egestas quis ipsum suspendisse ultrices. Odio ut sem nulla pharetra. ' \
      'Donec pretium vulputate sapien nec sagittis aliquam malesuada bibendum ' \
      'arcu. Lobortis feugiat vivamus at augue.'

Profile.create!(
  name: 'Sid Unrau',
  title: 'Choir Director',
  bio: bio,
  position: 1
)

Profile.create!(
  name: 'Lee Whittaker',
  title: 'Assistant Choir Director',
  bio: bio,
  position: 2
)

Profile.create!(
  name: 'Heather Taylor',
  title: 'Accompanist',
  bio: bio,
  position: 3
)

tag_names = []
tags = []
while tag_names.length < 5
  tag_names << Faker::Music.instrument
  tag_names = tag_names.uniq
end

tag_names.each do |name|
  tag = Tag.create!(
    name: name,
    slug: name.parameterize
  )
  tags << tag unless tag.nil?
end

categories = []

3.times do
  name = Faker::Company.buzzword
  category = Category.create!(
    name: name,
    slug: name.parameterize
  )
  categories << category unless category.nil?
end

15.times do
  Article.create!(
    title: Faker::Lorem.sentence.titleize,
    content: Faker::Lorem.paragraph,
    user_id: User.first.id,
    category_ids: categories.sample.id,
    tag_ids: tags.sample(Random.rand((tags.count + 1).to_f)).map(&:id)
  )
end

50.times do
  name = Faker::Name.first_name
  Message.create!(
    name: "#{name} #{Faker::Name.last_name}",
    email: Faker::Internet.email(name: name),
    subject: Faker::Lorem.sentence,
    message: Faker::Lorem.paragraphs.join(" \n "),
    read: Faker::Boolean.boolean
  )
end

# Members
%w[Soprano Alto Tenor Bass].each do |voice|
  6.times do
    case voice
    when 'Soprano', 'Alto'
      name = "#{Faker::Name.female_first_name} #{Faker::Name.last_name}"
    when 'Tenor', 'Bass'
      name = "#{Faker::Name.male_first_name} #{Faker::Name.last_name}"
    else
      break # Exit the 'times' loop, continues with next voice in 'each' loop
    end
    Member.create!(
      name: name,
      email: Faker::Internet.email,
      phone: Faker::PhoneNumber.cell_phone,
      vocal_range: voice
    )
  end
end

# Songs
song_titles = []
songs = []
while song_titles.length < 50
  title = Faker::Lorem.sentence.titleize
  next if song_titles.include? title

  begin
    song_titles << title
    song = Song.create!(title: title)
    ['SATB w/ Piano', 'Piano', 'Soprano', 'Alto', 'Tenor', 'Bass'].each do |name|
      instrument = Instrument.create(name: name, song: song)
      if instrument.errors.any?
        Rails.logger.debug { "Failed to create #{name} for song #{song.title}: #{instrument.errors.full_messages}" }
      end
    end

    songs << song
  rescue StandardError => e
    Rails.logger.debug { "Error creating song #{title}: #{e.message}" }
  end
end

# Rehearsals
104.times do |index|
  Rehearsal.create!(
    date: index.weeks.ago.end_of_week(:sunday),
    venue: Faker::Address.street_address,
    host: Faker::Name.name,
    songs: songs.sample((1..3).to_a.sample),
    time: 'Noon'
  )
end

# Performances
36.times do |index|
  Performance.create!(
    date: (index - 12).months.ago.beginning_of_month.next_occurring(:sunday).advance(weeks: 2),
    venue: Faker::Address.street_address,
    songs: [songs.sample]
  )
end

/*******************************************************************************
* File: docker-compose.yml
* Size: 526 bytes
*******************************************************************************/

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: choir-site-web
    command: bundle exec rails server -b 0.0.0.0
    environment:
      - DATABASE_URL=postgresql://choir_postgres:password@postgres13:5432/
    networks:
      - postgres_network
    ports:
      - "3000:3000"
      - "1234:1234"
    stdin_open: true
    tty: true
    volumes:
      - .:/choir-site
      - gem_cache:/usr/local/bundle/gems
networks:
  postgres_network:
    external: true

volumes:
  gem_cache:
/*******************************************************************************
* File: heroku.yml
* Size: 229 bytes
*******************************************************************************/

build:
  docker:
    web: Dockerfile
  config:
    RAILS_ENV: production
    NODE_ENV: production
    RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
    SECRET_KEY_BASE: ${SECRET_KEY_BASE}


run:
  web: bundle exec puma -C config/puma.rb

/*******************************************************************************
* File: package.json
* Size: 1645 bytes
*******************************************************************************/

{
  "name": "choir",
  "private": true,
  "engines": {
    "node": "20.x"
  },
  "dependencies": {
    "@popperjs/core": "^2.11.8",
    "@rails/actioncable": "^8.0.100",
    "bootstrap": "^5.3.3",
    "bootstrap-datepicker": "^1.10.0",
    "bootstrap-icons": "^1.11.3",
    "datatables.net": "^2.2.2",
    "datatables.net-bs4": "^2.2.2",
    "datatables.net-buttons": "^3.2.2",
    "datatables.net-buttons-bs4": "^3.2.2",
    "datatables.net-select": "^3.0.0",
    "datatables.net-select-bs4": "^3.0.0",
    "font-awesome": "^4.7.0",
    "froala-editor": "^4.5.0",
    "jquery": "^3.7.1",
    "jquery-ui": "^1.14.1"
  },
  "scripts": {
    "build": "esbuild app/javascript/application.js --bundle --sourcemap --format=esm --outdir=app/assets/builds --public-path=/assets",
    "build:css:compile": "sass ./app/assets/stylesheets/application.bootstrap.scss:./app/assets/builds/application.css ./app/assets/stylesheets/admin.bootstrap.scss:./app/assets/builds/admin.css --no-source-map --load-path=node_modules",
    "build:css:prefix": "postcss ./app/assets/builds/*.css --use=autoprefixer --replace",
    "build:css": "yarn build:css:compile && yarn build:css:prefix",
    "dev": "docker-compose -f docker-compose.yml up",
    "watch:css": "nodemon --watch ./app/assets/stylesheets/ --ext scss --exec \"yarn build:css\""
  },
  "browserslist": [
    "defaults"
  ],
  "devDependencies": {
    "@rails/webpacker": "^5.4.3",
    "autoprefixer": "^10.4.20",
    "esbuild": "^0.25.0",
    "nodemon": "^3.1.9",
    "postcss": "^8.5.3",
    "postcss-cli": "^11.0.0",
    "sass": "^1.85.1",
    "webpack": "^4.46.0",
    "webpack-cli": "^3.3.12"
  }
}

/*******************************************************************************
* File: postcss.config.js
* Size: 224 bytes
*******************************************************************************/

module.exports = {
  plugins: [
    require('postcss-import'),
    require('postcss-flexbugs-fixes'),
    require('postcss-preset-env')({
      autoprefixer: {
        flexbox: 'no-2009'
      },
      stage: 3
    })
  ]
}

/*******************************************************************************
* File: public/404.html
* Size: 1722 bytes
*******************************************************************************/

<!DOCTYPE html>
<html>
<head>
  <title>The page you were looking for doesn't exist (404)</title>
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <style>
  .rails-default-error-page {
    background-color: #EFEFEF;
    color: #2E2F30;
    text-align: center;
    font-family: arial, sans-serif;
    margin: 0;
  }

  .rails-default-error-page div.dialog {
    width: 95%;
    max-width: 33em;
    margin: 4em auto 0;
  }

  .rails-default-error-page div.dialog > div {
    border: 1px solid #CCC;
    border-right-color: #999;
    border-left-color: #999;
    border-bottom-color: #BBB;
    border-top: #B00100 solid 4px;
    border-top-left-radius: 9px;
    border-top-right-radius: 9px;
    background-color: white;
    padding: 7px 12% 0;
    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
  }

  .rails-default-error-page h1 {
    font-size: 100%;
    color: #730E15;
    line-height: 1.5em;
  }

  .rails-default-error-page div.dialog > p {
    margin: 0 0 1em;
    padding: 1em;
    background-color: #F7F7F7;
    border: 1px solid #CCC;
    border-right-color: #999;
    border-left-color: #999;
    border-bottom-color: #999;
    border-bottom-left-radius: 4px;
    border-bottom-right-radius: 4px;
    border-top-color: #DADADA;
    color: #666;
    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
  }
  </style>
</head>

<body class="rails-default-error-page">
  <!-- This file lives in public/404.html -->
  <div class="dialog">
    <div>
      <h1>The page you were looking for doesn't exist.</h1>
      <p>You may have mistyped the address or the page may have moved.</p>
    </div>
    <p>If you are the application owner check the logs for more information.</p>
  </div>
</body>
</html>

/*******************************************************************************
* File: public/422.html
* Size: 1705 bytes
*******************************************************************************/

<!DOCTYPE html>
<html>
<head>
  <title>The change you wanted was rejected (422)</title>
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <style>
  .rails-default-error-page {
    background-color: #EFEFEF;
    color: #2E2F30;
    text-align: center;
    font-family: arial, sans-serif;
    margin: 0;
  }

  .rails-default-error-page div.dialog {
    width: 95%;
    max-width: 33em;
    margin: 4em auto 0;
  }

  .rails-default-error-page div.dialog > div {
    border: 1px solid #CCC;
    border-right-color: #999;
    border-left-color: #999;
    border-bottom-color: #BBB;
    border-top: #B00100 solid 4px;
    border-top-left-radius: 9px;
    border-top-right-radius: 9px;
    background-color: white;
    padding: 7px 12% 0;
    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
  }

  .rails-default-error-page h1 {
    font-size: 100%;
    color: #730E15;
    line-height: 1.5em;
  }

  .rails-default-error-page div.dialog > p {
    margin: 0 0 1em;
    padding: 1em;
    background-color: #F7F7F7;
    border: 1px solid #CCC;
    border-right-color: #999;
    border-left-color: #999;
    border-bottom-color: #999;
    border-bottom-left-radius: 4px;
    border-bottom-right-radius: 4px;
    border-top-color: #DADADA;
    color: #666;
    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
  }
  </style>
</head>

<body class="rails-default-error-page">
  <!-- This file lives in public/422.html -->
  <div class="dialog">
    <div>
      <h1>The change you wanted was rejected.</h1>
      <p>Maybe you tried to change something you didn't have access to.</p>
    </div>
    <p>If you are the application owner check the logs for more information.</p>
  </div>
</body>
</html>

/*******************************************************************************
* File: public/500.html
* Size: 1635 bytes
*******************************************************************************/

<!DOCTYPE html>
<html>
<head>
  <title>We're sorry, but something went wrong (500)</title>
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <style>
  .rails-default-error-page {
    background-color: #EFEFEF;
    color: #2E2F30;
    text-align: center;
    font-family: arial, sans-serif;
    margin: 0;
  }

  .rails-default-error-page div.dialog {
    width: 95%;
    max-width: 33em;
    margin: 4em auto 0;
  }

  .rails-default-error-page div.dialog > div {
    border: 1px solid #CCC;
    border-right-color: #999;
    border-left-color: #999;
    border-bottom-color: #BBB;
    border-top: #B00100 solid 4px;
    border-top-left-radius: 9px;
    border-top-right-radius: 9px;
    background-color: white;
    padding: 7px 12% 0;
    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
  }

  .rails-default-error-page h1 {
    font-size: 100%;
    color: #730E15;
    line-height: 1.5em;
  }

  .rails-default-error-page div.dialog > p {
    margin: 0 0 1em;
    padding: 1em;
    background-color: #F7F7F7;
    border: 1px solid #CCC;
    border-right-color: #999;
    border-left-color: #999;
    border-bottom-color: #999;
    border-bottom-left-radius: 4px;
    border-bottom-right-radius: 4px;
    border-top-color: #DADADA;
    color: #666;
    box-shadow: 0 3px 8px rgba(50, 50, 50, 0.17);
  }
  </style>
</head>

<body class="rails-default-error-page">
  <!-- This file lives in public/500.html -->
  <div class="dialog">
    <div>
      <h1>We're sorry, but something went wrong.</h1>
    </div>
    <p>If you are the application owner check the logs for more information.</p>
  </div>
</body>
</html>

/*******************************************************************************
* File: public/robots.txt
* Size: 98 bytes
*******************************************************************************/

# See http://www.robotstxt.org/robotstxt.html for documentation on how to use the robots.txt file

/*******************************************************************************
* File: test/application_system_test_case.rb
* Size: 231 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for ApplicationSystemTestCase
class ApplicationSystemTestCase < ActionDispatch::SystemTestCase
  driven_by :selenium, using: :chrome, screen_size: [1400, 1400]
end

/*******************************************************************************
* File: test/controllers/admin/articles_controller_test.rb
* Size: 1846 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

module Admin
  # Test class for ArticlesController within the Admin namespace
  class ArticlesControllerTest < ActionDispatch::IntegrationTest
    def setup
      @article = articles :one
      @admin = users :admin
      sign_in @admin
    end

    test 'should get index' do
      get admin_articles_path
      assert_response :success
      assert_template 'admin/articles/index'
    end

    test 'should get new' do
      get new_admin_article_path
      assert_response :success
      assert_template 'admin/articles/new'
    end

    test 'should create a new entry' do
      assert_difference 'Article.count', 1 do
        post admin_articles_path, params: {
          article: { title: 'New Article',
                     content: 'Article Content',
                     user_id: @admin.id }
        }
        assert_response :redirect

        article = assigns :article
        assert_redirected_to edit_admin_article_path(article)
      end
    end

    test 'should get edit' do
      get edit_admin_article_path(@article)
      assert_response :success
      assert_template 'admin/articles/edit'
    end

    test 'should update an existing article' do
      patch admin_article_path(@article), params: {
        article: { title: 'Updated Title',
                   content: 'Updated content.' }
      }
      assert_response :redirect
      assert_redirected_to edit_admin_article_path(@article)
      @article.reload
      assert_equal 'Updated Title',    @article.title
      assert_equal 'Updated content.', @article.content
    end

    test 'should delete article' do
      assert_difference 'Article.count', -1 do
        delete admin_article_path(@article)
        assert_response :redirect
        assert_redirected_to admin_articles_path
      end
    end
  end
end

/*******************************************************************************
* File: test/controllers/admin/categories_controller_test.rb
* Size: 1477 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

module Admin
  # Test class for CategoriesController within the Admin namespace
  class CategoriesControllerTest < ActionDispatch::IntegrationTest
    def setup
      sign_in users :admin
      @category = categories :one
    end

    test 'should get index' do
      get admin_categories_path
      assert_response :success
      assert_template 'admin/categories/index'
    end

    test 'should create a new category' do
      assert_difference 'Category.count', 1 do
        post admin_categories_path, params: {
          category: { name: 'New category',
                      slug: 'new-category' }
        }
        assert_response :redirect
        assert_redirected_to admin_categories_path
      end
    end

    test 'should update a category' do
      patch admin_category_path(@category), params: {
        category: { name: 'New category Name',
                    slug: 'new-category-name' }
      }
      assert_response :redirect
      assert_redirected_to admin_categories_path
      @category.reload
      assert_equal 'New category Name', @category.name
      assert_equal 'new-category-name', @category.slug
    end

    test 'should delete a category' do
      category = categories :deletable
      assert_difference 'Category.count', -1 do
        delete admin_category_path(category)
        assert_response :redirect
        assert_redirected_to admin_categories_path
      end
    end
  end
end

/*******************************************************************************
* File: test/controllers/admin/members_controller_test.rb
* Size: 1987 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

module Admin
  # Test class for MembersController within the Admin namespace
  class MembersControllerTest < ActionDispatch::IntegrationTest
    def setup
      @member = members :lee
      sign_in users :admin
    end

    test 'should get index' do
      get admin_members_path
      assert_response :success
      assert_template 'admin/members/index'
    end

    test 'should get new' do
      get new_admin_member_path
      assert_response :success
      assert_template 'admin/members/new'
    end

    test 'should create new member' do
      assert_difference 'Member.count', 1 do
        post admin_members_path, params: {
          member: {
            name: 'Sid Unrau',
            email: 'sid-unrau@gmail.com',
            phone: '(801) 555-1235',
            vocal_range: ['Tenor'],
            talents: 'Piano, Conducting'
          }
        }
        assert_response :redirect
        assert_redirected_to admin_members_path
      end
    end

    test 'should get edit' do
      get edit_admin_member_path(@member)
      assert_response :success
      assert_template 'admin/members/edit'
    end

    test 'should edit existing member' do
      patch admin_member_path(@member), params: {
        member: {
          name: 'Heather Taylor',
          email: 'email@email.com',
          phone: '(427) 123-3456',
          vocal_range: ['Soprano'],
          talents: 'Piano'
        }
      }
      assert_response :redirect
      assert_redirected_to admin_members_path
      @member.reload
      assert_equal 'Heather Taylor', @member.name
      assert_equal 'email@email.com', @member.email
      assert @member.soprano?
      assert_not @member.bass?
    end

    test 'delete should remove member record' do
      assert_difference 'Member.count', -1 do
        delete admin_member_path(@member)
        assert_response :redirect
        assert_redirected_to admin_members_path
      end
    end
  end
end

/*******************************************************************************
* File: test/controllers/admin/messages_controller_test.rb
* Size: 2415 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

module Admin
  # Test class for MessagesController within the Admin namespace
  class MessagesControllerTest < ActionDispatch::IntegrationTest
    def setup
      @message = messages :one
      sign_in users :admin
    end

    test 'should get index' do
      get admin_messages_path
      assert_response :success
      assert_template 'admin/messages/index'
      assert_select 'table#messages-datatable'
    end

    test 'should get index with JSON' do
      get admin_messages_path(format: :json), xhr: true
      assert_response :success

      json_response = response.parsed_body
      assert_includes json_response.keys, 'data'
      assert_includes json_response.keys, 'recordsTotal'
      assert_includes json_response.keys, 'recordsFiltered'
    end

    test 'should get show and mark as read' do
      @message.update(read: false)
      get admin_message_path(@message)

      assert_response :success
      assert_template 'admin/messages/show'

      @message.reload
      assert @message.read?, 'Message should be marked as read after viewing'
    end

    test 'should mark messages as read via AJAX' do
      @message.update(read: false)

      post do_to_all_admin_messages_path,
           params: { all_messages: { msgs: [@message.id] },
                     commit: Admin::MessagesController::MARK_AS_READ },
           xhr: true

      assert_response :success
      @message.reload
      assert @message.read?, 'Message should be marked as read'
    end

    test 'should mark messages as unread via AJAX' do
      @message.update(read: false)

      post do_to_all_admin_messages_path,
           params: { all_messages: { msgs: [@message.id] },
                     commit: Admin::MessagesController::MARK_AS_UNREAD },
           xhr: true

      assert_response :success
      @message.reload
      assert_not @message.read?, 'Message should be marked as unread'
    end
    test 'datatable should include required columns' do
      get admin_messages_path(format: :json), xhr: true

      json_response = response.parsed_body
      first_record = json_response['data'].first

      required_columns = %w[name email subject created_at]
      required_columns.each do |column|
        assert_includes first_record.keys, column,
                        "Datatable response should include #{column} column"
      end
    end
  end
end

/*******************************************************************************
* File: test/controllers/admin/performances_controller_test.rb
* Size: 2050 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

module Admin
  # Test class for PerformancesController within the Admin namespace
  class PerformancesControllerTest < ActionDispatch::IntegrationTest
    def setup
      sign_in users :admin
      @performance = performances :one
    end

    test 'should get index' do
      get admin_performances_path
      assert_response :success
      assert_template 'admin/performances/index'
    end

    test 'should get new' do
      get new_admin_performance_path
      assert_response :success
      assert_template 'admin/performances/new'
    end

    test 'should create new performance' do
      assert_difference 'Performance.count', 1 do
        post admin_performances_path, params: { performance: { venue: 'Here',
                                                               date: 2.days.from_now.strftime('%m/%d/%Y'),
                                                               details: 'None' } }
        assert_response :redirect
        assert_redirected_to admin_performances_path
      end
    end

    test 'should get edit' do
      get edit_admin_performance_path(@performance)
      assert_response :success
      assert_template 'admin/performances/edit'
    end

    test 'should update performance' do
      patch admin_performance_path(@performance),
            params: {
              performance: {
                venue: 'Here',
                date: '03/25/2001',
                details: 'None'
              }
            }
      assert_response :redirect
      assert_redirected_to admin_performances_path
      @performance.reload
      assert_equal 'Here', @performance.venue
      assert_equal 'None', @performance.details
      assert_equal '03/25/2001', @performance.date.strftime('%m/%d/%Y')
    end

    test 'should delete peformance' do
      assert_difference 'Performance.count', -1 do
        delete admin_performance_path(@performance)
        assert_response :redirect
        assert_redirected_to admin_performances_path
      end
    end
  end
end

/*******************************************************************************
* File: test/controllers/admin/rehearsals_controller_test.rb
* Size: 2120 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

module Admin
  # Test class for RehearsalsController within the Admin namespace
  class RehearsalsControllerTest < ActionDispatch::IntegrationTest
    def setup
      sign_in users :admin
      @rehearsal = rehearsals :one
    end

    test 'should get index' do
      get admin_rehearsals_path
      assert_response :success
      assert_template 'admin/rehearsals/index'
    end

    test 'should get new' do
      get new_admin_rehearsal_path
      assert_response :success
      assert_template 'admin/rehearsals/new'
    end

    test 'should create new rehearsal' do
      assert_difference 'Rehearsal.count', 1 do
        post admin_rehearsals_path, params: {
          rehearsal: { host: "Your's Truly",
                       venue: 'Wherever',
                       date_holder: '12/20/2020',
                       time: '1:00 PM - 5:00 PM' }
        }
        assert_response :redirect
        assert_redirected_to admin_rehearsals_path
      end
    end

    test 'should get edit' do
      get edit_admin_rehearsal_path(@rehearsal)
      assert_response :success
      assert_template 'admin/rehearsals/edit'
    end

    test 'should update rehearsal' do
      patch admin_rehearsal_path(@rehearsal),
            params: {
              rehearsal: { host: "Your's Truly",
                           venue: 'Wherever',
                           date_holder: '12/20/2020',
                           time: '1:00 PM - 5:00 PM' }
            }
      assert_response :redirect
      assert_redirected_to admin_rehearsals_path
      @rehearsal.reload
      assert_equal "Your's Truly",      @rehearsal.host
      assert_equal 'Wherever',          @rehearsal.venue
      assert_equal '12/20/2020',        @rehearsal.date.strftime('%m/%d/%Y')
      assert_equal '1:00 PM - 5:00 PM', @rehearsal.time
    end

    test 'should destroy rehearsal' do
      assert_difference 'Rehearsal.count', -1 do
        delete admin_rehearsal_path(@rehearsal)
        assert_response :redirect
        assert_redirected_to admin_rehearsals_path
      end
    end
  end
end

/*******************************************************************************
* File: test/controllers/admin/songs_controller_test.rb
* Size: 1550 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

module Admin
  # Test class for SongsController within the Admin namespace
  class SongsControllerTest < ActionDispatch::IntegrationTest
    def setup
      sign_in users :admin
      @song = songs :one
    end

    test 'should get index' do
      get admin_songs_path
      assert_response :success
      assert_template 'admin/songs/index'
    end

    test 'should get new' do
      get new_admin_song_path
      assert_response :success
      assert_template 'admin/songs/new'
      assert_template 'admin/songs/_form'
    end

    test 'should create new entry' do
      assert_difference 'Song.count', 1 do
        post admin_songs_path, params: { song: { title: 'Praise to the Man' } }
        assert_response :redirect
        assert_redirected_to edit_admin_song_path(assigns(:song))
      end
    end

    test 'should get edit' do
      get edit_admin_song_path(@song)
      assert_response :success
      assert_template 'admin/songs/edit'
      assert_template 'admin/songs/_form'
    end

    test 'should update song' do
      patch admin_song_path(@song), params: { song: { title: 'New Title' } }
      assert_response :redirect
      assert_redirected_to edit_admin_song_path(@song)
      @song.reload
      assert_equal 'New Title', @song.title
    end

    test 'should delete song' do
      assert_difference 'Song.count', -1 do
        delete admin_song_path(@song)
        assert_response :redirect
        assert_redirected_to admin_songs_path
      end
    end
  end
end

/*******************************************************************************
* File: test/controllers/admin/tags_controller_test.rb
* Size: 1270 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

module Admin
  # Test class for TagsController within the Admin namespace
  class TagsControllerTest < ActionDispatch::IntegrationTest
    def setup
      sign_in users :admin
      @tag = tags :one
    end

    test 'should get index' do
      get admin_tags_path
      assert_response :success
      assert_template 'admin/tags/index'
    end

    test 'should create a new tag' do
      assert_difference 'Tag.count', 1 do
        post admin_tags_path, params: {
          tag: { name: 'New Tag',
                 slug: 'new-tag' }
        }
        assert_response :redirect
        assert_redirected_to admin_tags_path
      end
    end

    test 'should update a tag' do
      patch admin_tag_path(@tag), params: {
        tag: { name: 'New Tag Name',
               slug: 'new-tag-name' }
      }
      assert_response :redirect
      assert_redirected_to admin_tags_path
      @tag.reload
      assert_equal 'New Tag Name', @tag.name
      assert_equal 'new-tag-name', @tag.slug
    end

    test 'should delete a tag' do
      assert_difference 'Tag.count', -1 do
        delete admin_tag_path(@tag)
        assert_response :redirect
        assert_redirected_to admin_tags_path
      end
    end
  end
end

/*******************************************************************************
* File: test/controllers/admin_controller_test.rb
* Size: 480 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for AdminController
class AdminControllerTest < ActionDispatch::IntegrationTest
  test 'should redirect to login page if not signed in' do
    get admin_index_path
    assert_response :redirect
    assert_redirected_to new_user_session_path
  end

  test 'should get index if logged in' do
    sign_in users :admin
    get admin_index_path
    assert_response :success
    assert_template 'admin/index'
  end
end

/*******************************************************************************
* File: test/controllers/articles_controller_test.rb
* Size: 458 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for ArticlesController
class ArticlesControllerTest < ActionDispatch::IntegrationTest
  def setup
    @article = articles :one
  end

  test 'should get index' do
    get news_index_path
    assert_response :success
    assert_template 'articles/index'
  end

  test 'should get show' do
    get news_path(@article)
    assert_response :success
    assert_template 'articles/show'
  end
end

/*******************************************************************************
* File: test/controllers/messages_controller_test.rb
* Size: 3586 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Tests for the Messages Controller
class MessagesControllerTest < ActionDispatch::IntegrationTest
  def setup
    # Store original configuration
    @original_timestamp_enabled = InvisibleCaptcha.timestamp_enabled
    @original_spinner_enabled = InvisibleCaptcha.spinner_enabled
    @original_honeypots = InvisibleCaptcha.honeypots

    # Configure for testing
    InvisibleCaptcha.timestamp_enabled = false
    InvisibleCaptcha.spinner_enabled = false
    InvisibleCaptcha.honeypots = ['choir_part']
  end

  def teardown
    # Restore original configuration
    InvisibleCaptcha.timestamp_enabled = @original_timestamp_enabled
    InvisibleCaptcha.spinner_enabled = @original_spinner_enabled
    InvisibleCaptcha.honeypots = @original_honeypots
  end

  test 'should get new' do
    get contact_path
    assert_response :success
    assert_template 'messages/new'
    assert_select 'form'
    # The honeypot might be using different styling - check for the field itself
    assert_select 'input#message_choir_part', { count: 1 }
  end

  test 'can create message directly' do
    assert_difference 'Message.count', 1 do
      Message.create!(
        name: 'Test User',
        email: 'test@example.com',
        subject: 'Test Subject',
        message: 'Test message content'
      )
    end
  end

  test 'should create new message' do
    # Explicitly add the timestamp parameter that Invisible Captcha might be expecting
    timestamp = Time.current.to_i

    message_attrs = {
      name: 'Test User',
      email: 'test@example.com',
      subject: 'Test Subject',
      message: 'Test message body.'
    }

    assert_difference 'Message.count', 1 do
      post contact_path, params: {
        message: message_attrs,
        timestamp: timestamp,
        # Explicitly provide an empty honeypot field
        choir_part: nil
      }
    end

    assert_redirected_to contact_path
  end

  test 'should create new message with valid attributes' do
    assert_difference 'Message.count', 1 do
      post contact_path, params: {
        message: {
          name: 'Luke Skywalker',
          email: 'jedi@starwars.com',
          subject: 'New Recruits',
          message: 'Know anybody who can use the force?'
        }
      }
    end

    assert_redirected_to contact_path
    assert_equal 'Your message has been sent.', flash[:success]
  end

  test 'should not create message when honeypot field is filled (bot detection)' do
    # Turn timestamp validation off to isolate honeypot testing
    InvisibleCaptcha.timestamp_enabled = false

    assert_no_difference 'Message.count' do
      post contact_path, params: {
        message: {
          name: 'R2D2',
          email: 'droid@starwars.com',
          subject: 'Help me Obiwan',
          message: "You're my only hope.",
          choir_part: 'Tenor' # This is your honeypot field
        }
      }
    end

    # Per the Invisible Captcha gem, by default it responds with head(200)
    assert_response :success
  end

  test 'should not create message with invalid attributes' do
    assert_no_difference 'Message.count' do
      post contact_path, params: {
        message: {
          name: '', # Invalid: name is required
          email: 'not-an-email', # Invalid email format
          subject: 'Test Subject',
          message: 'Test Message'
        }
      }
    end

    assert_response :success
    assert_template 'messages/new'
    # Check for error messages without assuming specific formatting
    assert_select '#error-explanation'
  end
end

/*******************************************************************************
* File: test/controllers/rehearsals_controller_test.rb
* Size: 288 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for RehearsalsController
class RehearsalsControllerTest < ActionDispatch::IntegrationTest
  test 'should get index' do
    get rehearsals_path
    assert_response :success
    assert_template 'rehearsals/index'
  end
end

/*******************************************************************************
* File: test/controllers/songs_controller_test.rb
* Size: 423 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for SongsController
class SongsControllerTest < ActionDispatch::IntegrationTest
  test 'should get index' do
    get music_index_path
    assert_response :success
    assert_template 'songs/index'
  end

  test 'should get show' do
    song = songs :one
    get music_path(song.slug)
    assert_response :success
    assert_template 'songs/show'
  end
end

/*******************************************************************************
* File: test/controllers/static_pages_controller_test.rb
* Size: 284 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for StaticPagesController
class StaticPagesControllerTest < ActionDispatch::IntegrationTest
  test 'should get home' do
    get root_path
    assert_response :success
    assert_template 'static_pages/home'
  end
end

/*******************************************************************************
* File: test/fixtures/article_categories.yml
* Size: 163 bytes
*******************************************************************************/

# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

one:
  article: one
  category: one

two:
  article: two
  category: two

/*******************************************************************************
* File: test/fixtures/article_tags.yml
* Size: 153 bytes
*******************************************************************************/

# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

one:
  article: one
  tag: one

two:
  article: two
  tag: two

/*******************************************************************************
* File: test/fixtures/articles.yml
* Size: 241 bytes
*******************************************************************************/

# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

one:
  title: "Article Title"
  content: "Article content"
  author: admin

two:
  title: "Article Title"
  content: "Article content"
  author: admin

/*******************************************************************************
* File: test/fixtures/categories.yml
* Size: 227 bytes
*******************************************************************************/

# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

one:
  name: "Songs"
  slug: "songs"

two:
  name: "Also Songs"
  slug: "also-songs"

deletable:
  name: "Delete Me"
  slug: "delete-me"

/*******************************************************************************
* File: test/fixtures/instruments.yml
* Size: 290 bytes
*******************************************************************************/

# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

soprano:
  name: "Soprano"
  position: 1
  song: one

alto:
  name: "Alto"
  position: 2
  song: one

tenor:
  name: "Tenor"
  position: 3
  song: one
  
bass:
  name: "Bass"
  position: 4
  song: one
/*******************************************************************************
* File: test/fixtures/members.yml
* Size: 232 bytes
*******************************************************************************/

# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

lee:
  name: "Lee Whittaker"
  email: "whittakerlee81@gmail.com"
  phone: "(801) 427-8192"
  talents: "Piano, Violin"
  vocal_range: ["Bass"]

/*******************************************************************************
* File: test/fixtures/messages.yml
* Size: 328 bytes
*******************************************************************************/

# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

one:
  name: "Name One"
  email: "email@location.com"
  subject: "Subject"
  message: "Message body."
  read: true

two:
  name: "Name Two"
  email: "email@location.com"
  subject: "Message Subject"
  message: "Boring text"
  read: false

/*******************************************************************************
* File: test/fixtures/performance_songs.yml
* Size: 163 bytes
*******************************************************************************/

# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

one:
  performance: one
  song: one

two:
  performance: two
  song: two

/*******************************************************************************
* File: test/fixtures/performances.yml
* Size: 257 bytes
*******************************************************************************/

# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

one:
  venue: "Church"
  date: <%= 2.weeks.from_now %>
  details: "Lee is conducting"

two:
  venue: "Church"
  date: <%= 3.days.ago %>
  details: "Sid is conducting"

/*******************************************************************************
* File: test/fixtures/rehearsal_songs.yml
* Size: 159 bytes
*******************************************************************************/

# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

one:
  rehearsal: one
  song: one

two:
  rehearsal: two
  song: two

/*******************************************************************************
* File: test/fixtures/rehearsals.yml
* Size: 280 bytes
*******************************************************************************/

# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

one:
  date: <%= 1.week.ago %>
  time: "1:00 PM - 2:00 PM"
  venue: "My house"
  host: "Me"

two:
  date: <%= 1.week.from_now %>
  time: "1:00 PM - 2:00 PM"
  venue: "My house"
  host: "Me"

/*******************************************************************************
* File: test/fixtures/songs.yml
* Size: 305 bytes
*******************************************************************************/

# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

one:
  title: "The Long and Winding Road"
  slug: "the-long-and-winding-road"
  sort_order: "Long and Winding Road, The"

two:
  title: "The Last Unicorn"
  slug: "the-last-unicorn"
  sort_order: "Last Unicorn, The"
/*******************************************************************************
* File: test/fixtures/tags.yml
* Size: 161 bytes
*******************************************************************************/

# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

one:
  name: "Cats"
  slug: "cats"

two:
  name: "Dogs"
  slug: "dogs"

/*******************************************************************************
* File: test/fixtures/users.yml
* Size: 426 bytes
*******************************************************************************/

# Read about fixtures at http://api.rubyonrails.org/classes/ActiveRecord/FixtureSet.html

# This model initially had no columns defined. If you add columns to the
# model remove the '{}' from the fixture names and add the columns immediately
# below each fixture, per the syntax in the comments below
admin:
  name: "Admin Name"
  email: "test@email.com"
  encrypted_password: <%= Devise::Encryptor.digest(User, "password") %>
/*******************************************************************************
* File: test/jobs/paperclip_to_active_storage_job_test.rb
* Size: 168 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

class PaperclipToActiveStorageJobTest < ActiveJob::TestCase
  # test "the truth" do
  #   assert true
  # end
end

/*******************************************************************************
* File: test/mailers/message_mailer_test.rb
* Size: 812 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for MessageMailer
class MessageMailerTest < ActionMailer::TestCase
  test 'contact_form' do
    @message = messages :one
    mail = MessageMailer.contact_form(@message)
    assert_equal @message.subject, mail.subject
    assert_equal ['whittakerlee81@gmail.com'], mail.to
    assert_equal [@message.email], mail.from
    assert_match 'You have a new message from choir.CascadeSixth.com',
                 mail.body.encoded
    assert_match @message.created_at.strftime('%l:%M %P - %b %-d, %Y'),
                 mail.body.encoded
    assert_match @message.name,
                 mail.body.encoded
    assert_match @message.email,
                 mail.body.encoded
    assert_match @message.message,
                 mail.body.encoded
  end
end

/*******************************************************************************
* File: test/mailers/previews/message_mailer_preview.rb
* Size: 217 bytes
*******************************************************************************/

# frozen_string_literal: true

# Test class for MessageMailerPreview
class MessageMailerPreview < ActionMailer::Preview
  def contact_form
    message = Message.first
    MessageMailer.contact_form(message)
  end
end

/*******************************************************************************
* File: test/models/article_category_test.rb
* Size: 160 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

class ArticleCategoryTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end

/*******************************************************************************
* File: test/models/article_tag_test.rb
* Size: 155 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

class ArticleTagTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end

/*******************************************************************************
* File: test/models/article_test.rb
* Size: 756 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for the Article model
class ArticleTest < ActiveSupport::TestCase
  def setup
    @article = articles :one
  end

  test 'should be valid' do
    assert @article.valid?
  end

  test 'should have a title' do
    @article.title = ''
    assert_not @article.valid?
  end

  test 'title should not be too long' do
    @article.title = 'a' * 121
    assert_not @article.valid?
  end

  test 'should have content' do
    @article.content = ''
    assert_not @article.valid?
  end

  test 'content should not be too long' do
    @article.content = 'a' * 5001
    assert_not @article.valid?
  end

  test 'should have author' do
    @article.author = nil
    assert_not @article.valid?
  end
end

/*******************************************************************************
* File: test/models/category_test.rb
* Size: 1008 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for the Category model
class CategoryTest < ActiveSupport::TestCase
  def setup
    @category = categories :one
  end

  test 'should be valid' do
    assert @category.valid?
  end

  test 'should have a name' do
    @category.name = ''
    assert_not @category.valid?
  end

  test 'name should not be too long' do
    @category.name = 'a' * 31
    assert_not @category.valid?
  end

  test 'name should be unique' do
    duplicate_category = @category.dup
    duplicate_category.slug += '1'
    @category.save
    assert_not duplicate_category.valid?
  end

  test 'should have a slug' do
    @category.slug = ''
    assert_not @category.valid?
  end

  test 'slug should not be too long' do
    @category.slug = 'a' * 31
    assert_not @category.valid?
  end

  test 'slug should be unique' do
    duplicate_category = @category.dup
    duplicate_category.name += '1'
    @category.save
    assert_not duplicate_category.valid?
  end
end

/*******************************************************************************
* File: test/models/instrument_test.rb
* Size: 760 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for the Instrument model
class InstrumentTest < ActiveSupport::TestCase
  def setup
    @instrument = instruments :soprano
  end

  test 'should be valid' do
    assert @instrument.valid?
  end

  test 'should have a name' do
    @instrument.name = ''
    assert_not @instrument.valid?
  end

  test 'name should not be too long' do
    @instrument.name = 'a' * 61
    assert_not @instrument.valid?
  end

  test 'name should be unique to a song' do
    @instrument.name = 'tenor'
    assert_not @instrument.valid?
    @instrument.song = songs :two
    assert @instrument.valid?
  end

  test 'should belong to a song' do
    @instrument.song = nil
    assert_not @instrument.valid?
  end
end

/*******************************************************************************
* File: test/models/member_test.rb
* Size: 1414 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for the Member model
class MemberTest < ActiveSupport::TestCase
  def setup
    @member = members :lee
  end

  test 'should be valid' do
    assert @member.valid?
  end

  test 'should have a name' do
    @member.name = ''
    assert_not @member.valid?
  end

  test 'name should not be too long' do
    @member.name = 'a' * 61
    assert_not @member.valid?
  end

  test 'email should not be too long' do
    @member.email = "#{'a' * 244}@example.com"
    assert_not @member.valid?
  end

  test 'email validation should accept valid addresses' do
    valid_addresses = %w[user@example.com USER@foo.COM A_US-ER@foo.bar.org
                         first.last@foo.jp alice+bob@baz.cn]
    valid_addresses.each do |valid_address|
      @member.email = valid_address
      assert @member.valid?, "#{valid_address.inspect} should be valid"
    end
  end

  test 'email validation should reject invalid addresses' do
    invalid_addresses = %w[user@example,com user_at_foo.org user.name@example.
                           foo@bar_baz.com foo@bar+baz.com]
    invalid_addresses.each do |invalid_address|
      @member.email = invalid_address
      assert_not @member.valid?, "#{invalid_address.inspect} should be invalid"
    end
  end

  test 'vocal_range should not be empty' do
    @member.vocal_range = []
    assert_not @member.valid?
  end
end

/*******************************************************************************
* File: test/models/message_test.rb
* Size: 1965 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for the Message model
class MessageTest < ActiveSupport::TestCase
  def setup
    @message = messages :one
  end

  test 'should be valid' do
    assert @message.valid?
  end

  test 'should have a name' do
    @message.name = ''
    assert_not @message.valid?
  end

  test 'name should not be too long' do
    @message.name = 'a' * 61
    assert_not @message.valid?
  end

  test 'should have an email address' do
    @message.email = ''
    assert_not @message.valid?
  end

  test 'email should not be too long' do
    @message.email = "#{'a' * 244}@example.com"
    assert_not @message.valid?
  end

  test 'email validation should accept valid addresses' do
    valid_addresses = %w[user@example.com USER@foo.COM A_US-ER@foo.bar.org
                         first.last@foo.jp alice+bob@baz.cn]
    valid_addresses.each do |valid_address|
      @message.email = valid_address
      assert @message.valid?, "#{valid_address.inspect} should be valid"
    end
  end

  test 'email validation should reject invalid addresses' do
    invalid_addresses = %w[user@example,com user_at_foo.org user.name@example.
                           foo@bar_baz.com foo@bar+baz.com]
    invalid_addresses.each do |invalid_address|
      @message.email = invalid_address
      assert_not @message.valid?, "#{invalid_address.inspect} should be invalid"
    end
  end

  test 'subject should be present' do
    @message.subject = ''
    assert_not @message.valid?
  end

  test 'subject should not be too long' do
    @message.subject = 'a' * 121
    assert_not @message.valid?
  end

  test 'message should be present' do
    @message.message = ''
    assert_not @message.valid?
  end

  test 'message should not be too long' do
    @message.message = 'a' * 5001
    assert_not @message.valid?
  end

  test 'read should be either true or false' do
    @message.read = nil
    assert_not @message.valid?
  end
end

/*******************************************************************************
* File: test/models/performance_song_test.rb
* Size: 203 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for the PerformanceSong model
class PerformanceSongTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end

/*******************************************************************************
* File: test/models/performance_test.rb
* Size: 640 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for the Performance model
class PerformanceTest < ActiveSupport::TestCase
  def setup
    @performance = performances :one
  end

  test 'performance should be valid' do
    assert @performance.valid?
  end

  test 'performance should have a date' do
    @performance.date = nil
    assert_not @performance.valid?
  end

  test 'performance should have a venue' do
    @performance.venue = ''
    assert_not @performance.valid?
  end

  test 'performance details should not be too long' do
    @performance.details = 'a' * 5001
    assert_not @performance.valid?
  end
end

/*******************************************************************************
* File: test/models/rehearsal_song_test.rb
* Size: 158 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

class RehearsalSongTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end

/*******************************************************************************
* File: test/models/rehearsal_test.rb
* Size: 783 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for the Rehearsal model
class RehearsalTest < ActiveSupport::TestCase
  def setup
    @rehearsal = rehearsals :one
  end

  test 'should be valid' do
    assert @rehearsal.valid?
  end

  test 'should have date' do
    @rehearsal.date = nil
    assert_not @rehearsal.valid?
  end

  test 'should have a time' do
    @rehearsal.time = ''
    assert_not @rehearsal.valid?
  end

  test 'time should not be too long' do
    @rehearsal.time = 'a' * 21
    assert_not @rehearsal.valid?
  end

  test 'venue should not be too long' do
    @rehearsal.venue = 'a' * 121
    assert_not @rehearsal.valid?
  end

  test 'host should not be too long' do
    @rehearsal.host = 'a' * 61
    assert_not @rehearsal.valid?
  end
end

/*******************************************************************************
* File: test/models/song_test.rb
* Size: 771 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for the Song model
class SongTest < ActiveSupport::TestCase
  def setup
    @song = songs :one
  end

  test 'should be valid' do
    assert @song.valid?
  end

  test 'should have a title' do
    @song.title = ''
    assert_not @song.valid?
  end

  test 'title should not be too long' do
    @song.title = 'a' * 61
    assert_not @song.valid?
  end

  test 'sort_order should be set before save' do
    @song.title = 'The Long and Winding Road'
    @song.save
    assert_equal @song.sort_order, 'Long and Winding Road, The'
  end

  test 'slug should be set before save' do
    @song.title = 'The Long and Winding Road'
    @song.save
    assert_equal @song.slug, 'the-long-and-winding-road'
  end
end

/*******************************************************************************
* File: test/models/tag_test.rb
* Size: 928 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for the Tag model
class TagTest < ActiveSupport::TestCase
  def setup
    @tag = categories :one
  end

  test 'should be valid' do
    assert @tag.valid?
  end

  test 'should have a name' do
    @tag.name = ''
    assert_not @tag.valid?
  end

  test 'name should not be too long' do
    @tag.name = 'a' * 31
    assert_not @tag.valid?
  end

  test 'name should be unique' do
    duplicate_category = @tag.dup
    duplicate_category.slug += '1'
    @tag.save
    assert_not duplicate_category.valid?
  end

  test 'should have a slug' do
    @tag.slug = ''
    assert_not @tag.valid?
  end

  test 'slug should not be too long' do
    @tag.slug = 'a' * 31
    assert_not @tag.valid?
  end

  test 'slug should be unique' do
    duplicate_category = @tag.dup
    duplicate_category.name += '1'
    @tag.save
    assert_not duplicate_category.valid?
  end
end

/*******************************************************************************
* File: test/models/user_test.rb
* Size: 181 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'test_helper'

# Test class for the User model
class UserTest < ActiveSupport::TestCase
  # test "the truth" do
  #   assert true
  # end
end

/*******************************************************************************
* File: test/test_helper.rb
* Size: 1336 bytes
*******************************************************************************/

# frozen_string_literal: true

require 'simplecov'
SimpleCov.start

# Load Rails environment and necessary testing libraries
require File.expand_path('../config/environment', __dir__)
require 'rails/test_help'
require 'minitest/reporters'
Minitest::Reporters.use! unless ENV['RM_INFO']

# Module for ActiveSupport, providing testing facilities
module ActiveSupport
  # Class for TestCase within ActiveSupport, serving as the base class for Rails model tests
  class TestCase
    # Setup all fixtures in test/fixtures/*.yml for all tests in alphabetical order.
    fixtures :all

    # Add more helper methods to be used by all tests here...
  end
end

# Module for ActionController, providing testing facilities
module ActionController
  # Class for TestCase within ActionController, extending ActiveSupport::TestCase with controller testing helpers
  class TestCase
    # Include Devise test controller helpers for convenience
    include Devise::Test::ControllerHelpers
  end
end

# Module for ActionDispatch, providing integration testing facilities
module ActionDispatch
  # Class for IntegrationTest within ActionDispatch, extending ActiveSupport::TestCase with integration testing helpers
  class IntegrationTest
    # Include Devise test integration helpers for convenience
    include Devise::Test::IntegrationHelpers
  end
end
